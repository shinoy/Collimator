

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Jul 29 17:01:56 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F15354
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	dabs	1,0x7E,2
    36  0000                     
    37                           ; Version 2.05
    38                           ; Generated 20/12/2018 GMT
    39                           ; 
    40                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC16F15354 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     	;# 
    72  0001                     	;# 
    73  0002                     	;# 
    74  0003                     	;# 
    75  0004                     	;# 
    76  0005                     	;# 
    77  0006                     	;# 
    78  0007                     	;# 
    79  0008                     	;# 
    80  0009                     	;# 
    81  000A                     	;# 
    82  000B                     	;# 
    83  000C                     	;# 
    84  000D                     	;# 
    85  000E                     	;# 
    86  0010                     	;# 
    87  0012                     	;# 
    88  0013                     	;# 
    89  0014                     	;# 
    90  0016                     	;# 
    91  0018                     	;# 
    92  0019                     	;# 
    93  001A                     	;# 
    94  009B                     	;# 
    95  009B                     	;# 
    96  009C                     	;# 
    97  009D                     	;# 
    98  009E                     	;# 
    99  009F                     	;# 
   100  0119                     	;# 
   101  0119                     	;# 
   102  0119                     	;# 
   103  011A                     	;# 
   104  011A                     	;# 
   105  011A                     	;# 
   106  011B                     	;# 
   107  011B                     	;# 
   108  011B                     	;# 
   109  011B                     	;# 
   110  011B                     	;# 
   111  011C                     	;# 
   112  011C                     	;# 
   113  011C                     	;# 
   114  011D                     	;# 
   115  011D                     	;# 
   116  011D                     	;# 
   117  011E                     	;# 
   118  011E                     	;# 
   119  011E                     	;# 
   120  011F                     	;# 
   121  011F                     	;# 
   122  011F                     	;# 
   123  011F                     	;# 
   124  011F                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  018E                     	;# 
   128  018F                     	;# 
   129  0190                     	;# 
   130  0191                     	;# 
   131  0192                     	;# 
   132  0196                     	;# 
   133  0197                     	;# 
   134  0198                     	;# 
   135  0199                     	;# 
   136  019A                     	;# 
   137  019B                     	;# 
   138  019C                     	;# 
   139  020C                     	;# 
   140  020C                     	;# 
   141  020D                     	;# 
   142  020E                     	;# 
   143  020F                     	;# 
   144  020F                     	;# 
   145  0210                     	;# 
   146  0210                     	;# 
   147  0211                     	;# 
   148  0211                     	;# 
   149  028C                     	;# 
   150  028C                     	;# 
   151  028D                     	;# 
   152  028D                     	;# 
   153  028E                     	;# 
   154  028F                     	;# 
   155  0290                     	;# 
   156  0291                     	;# 
   157  030C                     	;# 
   158  030C                     	;# 
   159  030D                     	;# 
   160  030E                     	;# 
   161  030F                     	;# 
   162  0310                     	;# 
   163  0310                     	;# 
   164  0311                     	;# 
   165  0312                     	;# 
   166  0313                     	;# 
   167  0314                     	;# 
   168  0314                     	;# 
   169  0315                     	;# 
   170  0316                     	;# 
   171  0318                     	;# 
   172  0318                     	;# 
   173  0319                     	;# 
   174  031A                     	;# 
   175  031C                     	;# 
   176  031C                     	;# 
   177  031D                     	;# 
   178  031E                     	;# 
   179  038C                     	;# 
   180  038C                     	;# 
   181  038D                     	;# 
   182  038E                     	;# 
   183  058C                     	;# 
   184  058C                     	;# 
   185  058D                     	;# 
   186  058E                     	;# 
   187  058F                     	;# 
   188  058F                     	;# 
   189  0590                     	;# 
   190  0591                     	;# 
   191  0592                     	;# 
   192  0593                     	;# 
   193  059C                     	;# 
   194  059C                     	;# 
   195  059D                     	;# 
   196  059D                     	;# 
   197  059E                     	;# 
   198  059F                     	;# 
   199  060C                     	;# 
   200  060D                     	;# 
   201  060E                     	;# 
   202  060F                     	;# 
   203  0610                     	;# 
   204  0611                     	;# 
   205  0612                     	;# 
   206  0613                     	;# 
   207  0614                     	;# 
   208  070C                     	;# 
   209  070D                     	;# 
   210  070E                     	;# 
   211  070F                     	;# 
   212  0710                     	;# 
   213  0711                     	;# 
   214  0712                     	;# 
   215  0713                     	;# 
   216  0716                     	;# 
   217  0717                     	;# 
   218  0718                     	;# 
   219  0719                     	;# 
   220  071A                     	;# 
   221  071B                     	;# 
   222  071C                     	;# 
   223  071D                     	;# 
   224  0796                     	;# 
   225  0797                     	;# 
   226  0798                     	;# 
   227  0799                     	;# 
   228  079A                     	;# 
   229  079B                     	;# 
   230  080C                     	;# 
   231  080D                     	;# 
   232  080E                     	;# 
   233  080F                     	;# 
   234  0810                     	;# 
   235  0811                     	;# 
   236  0812                     	;# 
   237  0813                     	;# 
   238  0814                     	;# 
   239  081A                     	;# 
   240  081A                     	;# 
   241  081B                     	;# 
   242  081C                     	;# 
   243  081C                     	;# 
   244  081D                     	;# 
   245  081E                     	;# 
   246  081F                     	;# 
   247  088C                     	;# 
   248  088D                     	;# 
   249  088E                     	;# 
   250  088F                     	;# 
   251  0890                     	;# 
   252  0891                     	;# 
   253  0892                     	;# 
   254  0893                     	;# 
   255  0895                     	;# 
   256  0896                     	;# 
   257  090C                     	;# 
   258  090E                     	;# 
   259  090F                     	;# 
   260  091F                     	;# 
   261  098F                     	;# 
   262  098F                     	;# 
   263  0990                     	;# 
   264  0991                     	;# 
   265  0992                     	;# 
   266  0993                     	;# 
   267  0994                     	;# 
   268  0995                     	;# 
   269  0996                     	;# 
   270  0997                     	;# 
   271  0A19                     	;# 
   272  0A19                     	;# 
   273  0A1A                     	;# 
   274  0A1A                     	;# 
   275  0A1B                     	;# 
   276  0A1B                     	;# 
   277  0A1B                     	;# 
   278  0A1C                     	;# 
   279  0A1C                     	;# 
   280  0A1D                     	;# 
   281  0A1D                     	;# 
   282  0A1E                     	;# 
   283  0A1E                     	;# 
   284  0A1F                     	;# 
   285  0A1F                     	;# 
   286  0A1F                     	;# 
   287  1E0F                     	;# 
   288  1E10                     	;# 
   289  1E11                     	;# 
   290  1E12                     	;# 
   291  1E13                     	;# 
   292  1E14                     	;# 
   293  1E15                     	;# 
   294  1E16                     	;# 
   295  1E17                     	;# 
   296  1E18                     	;# 
   297  1E19                     	;# 
   298  1E1A                     	;# 
   299  1E1B                     	;# 
   300  1E1C                     	;# 
   301  1E1D                     	;# 
   302  1E1E                     	;# 
   303  1E1F                     	;# 
   304  1E20                     	;# 
   305  1E21                     	;# 
   306  1E22                     	;# 
   307  1E23                     	;# 
   308  1E24                     	;# 
   309  1E25                     	;# 
   310  1E26                     	;# 
   311  1E27                     	;# 
   312  1E28                     	;# 
   313  1E29                     	;# 
   314  1E2A                     	;# 
   315  1E2B                     	;# 
   316  1E2C                     	;# 
   317  1E2D                     	;# 
   318  1E2E                     	;# 
   319  1E2F                     	;# 
   320  1E30                     	;# 
   321  1E31                     	;# 
   322  1E32                     	;# 
   323  1E33                     	;# 
   324  1E34                     	;# 
   325  1E35                     	;# 
   326  1E36                     	;# 
   327  1E37                     	;# 
   328  1E8F                     	;# 
   329  1E90                     	;# 
   330  1E91                     	;# 
   331  1E92                     	;# 
   332  1E93                     	;# 
   333  1E9C                     	;# 
   334  1EA1                     	;# 
   335  1EA2                     	;# 
   336  1EB1                     	;# 
   337  1EBB                     	;# 
   338  1EBC                     	;# 
   339  1EBD                     	;# 
   340  1EBE                     	;# 
   341  1EC3                     	;# 
   342  1EC5                     	;# 
   343  1EC6                     	;# 
   344  1EC7                     	;# 
   345  1EC8                     	;# 
   346  1EC9                     	;# 
   347  1ECA                     	;# 
   348  1ECB                     	;# 
   349  1ECC                     	;# 
   350  1ECD                     	;# 
   351  1ECE                     	;# 
   352  1F10                     	;# 
   353  1F11                     	;# 
   354  1F12                     	;# 
   355  1F13                     	;# 
   356  1F14                     	;# 
   357  1F15                     	;# 
   358  1F16                     	;# 
   359  1F17                     	;# 
   360  1F18                     	;# 
   361  1F19                     	;# 
   362  1F1A                     	;# 
   363  1F1B                     	;# 
   364  1F1C                     	;# 
   365  1F1D                     	;# 
   366  1F1E                     	;# 
   367  1F1F                     	;# 
   368  1F20                     	;# 
   369  1F21                     	;# 
   370  1F22                     	;# 
   371  1F23                     	;# 
   372  1F24                     	;# 
   373  1F25                     	;# 
   374  1F26                     	;# 
   375  1F27                     	;# 
   376  1F38                     	;# 
   377  1F39                     	;# 
   378  1F3A                     	;# 
   379  1F3B                     	;# 
   380  1F3C                     	;# 
   381  1F3D                     	;# 
   382  1F3E                     	;# 
   383  1F3F                     	;# 
   384  1F43                     	;# 
   385  1F44                     	;# 
   386  1F45                     	;# 
   387  1F46                     	;# 
   388  1F47                     	;# 
   389  1F48                     	;# 
   390  1F49                     	;# 
   391  1F4A                     	;# 
   392  1F4E                     	;# 
   393  1F4F                     	;# 
   394  1F50                     	;# 
   395  1F51                     	;# 
   396  1F52                     	;# 
   397  1F53                     	;# 
   398  1F54                     	;# 
   399  1F55                     	;# 
   400  1F65                     	;# 
   401  1F68                     	;# 
   402  1F69                     	;# 
   403  1F6A                     	;# 
   404  1F6B                     	;# 
   405  1FE4                     	;# 
   406  1FE5                     	;# 
   407  1FE6                     	;# 
   408  1FE7                     	;# 
   409  1FE8                     	;# 
   410  1FE8                     	;# 
   411  1FE9                     	;# 
   412  1FEA                     	;# 
   413  1FEA                     	;# 
   414  1FEB                     	;# 
   415  1FED                     	;# 
   416  1FEE                     	;# 
   417  1FEF                     	;# 
   418                           
   419                           	psect	idataBANK1
   420  0EB8                     __pidataBANK1:	
   421                           
   422                           ;initializer for _lightingOffDelay
   423  0EB8  34E6               	retlw	230
   424  0EB9  3400               	retlw	0
   425  0EBA  3400               	retlw	0
   426  0EBB  3400               	retlw	0
   427                           
   428                           	psect	stringtext1
   429  07FE                     __pstringtext1:	
   430  07FE                     _FanFBLowLimit:	
   431  07FE  3400               	retlw	0
   432  07FF  3400               	retlw	0
   433  0800  3400               	retlw	0
   434  0801  343F               	retlw	63
   435  0802                     __end_of_FanFBLowLimit:	
   436                           
   437                           	psect	stringtext2
   438  0802                     __pstringtext2:	
   439  0802                     _FanFBUpLimit:	
   440  0802  349A               	retlw	154
   441  0803  3499               	retlw	153
   442  0804  3499               	retlw	153
   443  0805  343F               	retlw	63
   444  0806                     __end_of_FanFBUpLimit:	
   445                           
   446                           	psect	stringtext3
   447  0806                     __pstringtext3:	
   448  0806                     _restoreLevel:	
   449  0806  340A               	retlw	10
   450  0807  34D7               	retlw	215
   451  0808  3483               	retlw	131
   452  0809  343F               	retlw	63
   453  080A                     __end_of_restoreLevel:	
   454                           
   455                           	psect	stringtext4
   456  080A                     __pstringtext4:	
   457  080A                     _upperLimit:	
   458  080A  34F6               	retlw	246
   459  080B  3428               	retlw	40
   460  080C  345C               	retlw	92
   461  080D  343F               	retlw	63
   462  080E                     __end_of_upperLimit:	
   463                           
   464                           	psect	nvCOMMON
   465  007A                     __pnvCOMMON:	
   466  007A                     _currentStatus:	
   467  007A                     	ds	1
   468  000C                     _PORTAbits	set	12
   469  000D                     _PORTBbits	set	13
   470  0014                     _TRISCbits	set	20
   471  001A                     _LATCbits	set	26
   472  0013                     _TRISBbits	set	19
   473  0012                     _TRISAbits	set	18
   474  000B                     _INTCONbits	set	11
   475  005F                     _GIE	set	95
   476  009D                     _ADCON0bits	set	157
   477  009E                     _ADCON1bits	set	158
   478  009B                     _ADRES	set	155
   479  04F7                     _ADFM	set	1271
   480  059C                     _TMR0L	set	1436
   481  059D                     _TMR0H	set	1437
   482  059F                     _T0CON1bits	set	1439
   483  2CF4                     _T016BIT	set	11508
   484  2CF7                     _T0EN	set	11511
   485  0717                     _PIE1bits	set	1815
   486  070D                     _PIR1bits	set	1805
   487  0716                     _PIE0bits	set	1814
   488  3865                     _TMR0IF	set	14437
   489  38B5                     _TMR0IE	set	14517
   490  081C                     _NVMDATL	set	2076
   491  081D                     _NVMDATH	set	2077
   492  081A                     _NVMADRL	set	2074
   493  081B                     _NVMADRH	set	2075
   494  081E                     _NVMCON1bits	set	2078
   495  090C                     _FVRCONbits	set	2316
   496  4866                     _FVRRDY	set	18534
   497  4867                     _FVREN	set	18535
   498  1F4E                     _ANSELCbits	set	8014
   499  1F43                     _ANSELBbits	set	8003
   500  1F38                     _ANSELAbits	set	7992
   501  F9FF                     _IOCAF7	set	63999
   502  F9F7                     _IOCAN7	set	63991
   503                           
   504                           ; #config settings
   505  0000                     
   506                           	psect	cinit
   507  0078                     start_initialization:	
   508  0078                     __initialization:	
   509                           
   510                           ; Initialize objects allocated to BANK1
   511  0078  0141               	movlb	1	; select bank1
   512  0079  318E  26B8  3180   	fcall	__pidataBANK1	;fetch initializer
   513  007C  00C4               	movwf	__pdataBANK1& (0+127)
   514  007D  318E  26B9  3180   	fcall	__pidataBANK1+1	;fetch initializer
   515  0080  00C5               	movwf	(__pdataBANK1+1)& (0+127)
   516  0081  318E  26BA  3180   	fcall	__pidataBANK1+2	;fetch initializer
   517  0084  00C6               	movwf	(__pdataBANK1+2)& (0+127)
   518  0085  318E  26BB  3180   	fcall	__pidataBANK1+3	;fetch initializer
   519  0088  00C7               	movwf	(__pdataBANK1+3)& (0+127)
   520                           
   521                           ; Clear objects allocated to COMMON
   522  0089  01FB               	clrf	__pbssCOMMON& (0+127)
   523                           
   524                           ; Clear objects allocated to BANK1
   525  008A  30A0               	movlw	low __pbssBANK1
   526  008B  0084               	movwf	4
   527  008C  3000               	movlw	high __pbssBANK1
   528  008D  0085               	movwf	5
   529  008E  301C               	movlw	28
   530  008F  318E  26BC         	fcall	clear_ram0
   531  0091                     end_of_initialization:	
   532                           ;End of C runtime variable initialization code
   533                           
   534  0091                     __end_of__initialization:	
   535  0091  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   536  0092  0140               	movlb	0
   537  0093  318F  2FAF         	ljmp	_main	;jump to C main() function
   538                           
   539                           	psect	bssCOMMON
   540  007B                     __pbssCOMMON:	
   541  007B                     _errReason:	
   542  007B                     	ds	1
   543                           
   544                           	psect	bssBANK1
   545  00A0                     __pbssBANK1:	
   546  00A0                     _DIA_Table:	
   547  00A0                     	ds	16
   548  00B0                     _extNTCV:	
   549  00B0                     	ds	4
   550  00B4                     _intNTCV:	
   551  00B4                     	ds	4
   552  00B8                     _timerCounter:	
   553  00B8                     	ds	4
   554                           
   555                           	psect	dataBANK1
   556  00C4                     __pdataBANK1:	
   557  00C4                     _lightingOffDelay:	
   558  00C4                     	ds	4
   559                           
   560                           	psect	clrtext
   561  0EBC                     clear_ram0:	
   562                           ;	Called with FSR0 containing the base address, and
   563                           ;	WREG with the size to clear
   564                           
   565  0EBC  0064               	clrwdt	;clear the watchdog before getting into this loop
   566  0EBD                     clrloop0:	
   567  0EBD  0180               	clrf	0	;clear RAM location pointed to by FSR
   568  0EBE  3101               	addfsr 0,1
   569  0EBF  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   570  0EC0  2EBD               	goto	clrloop0	;have we reached the end yet?
   571  0EC1  3400               	retlw	0	;all done for this memory range, return
   572                           
   573                           	psect	cstackBANK1
   574  00BC                     __pcstackBANK1:	
   575  00BC                     ?_main:	
   576  00BC                     main@argc:	
   577                           ; 2 bytes @ 0x0
   578                           
   579                           
   580                           ; 2 bytes @ 0x0
   581  00BC                     	ds	2
   582  00BE                     main@argv:	
   583                           
   584                           ; 2 bytes @ 0x2
   585  00BE                     	ds	2
   586  00C0                     ??_main:	
   587                           
   588                           ; 1 bytes @ 0x4
   589  00C0                     	ds	2
   590  00C2                     main@checkCount:	
   591                           
   592                           ; 2 bytes @ 0x6
   593  00C2                     	ds	2
   594                           
   595                           	psect	cstackCOMMON
   596  0070                     __pcstackCOMMON:	
   597  0070                     ?_initDIA:	
   598  0070                     ?_init:	
   599                           ; 1 bytes @ 0x0
   600                           
   601  0070                     ?_HeartBeatFlush:	
   602                           ; 1 bytes @ 0x0
   603                           
   604  0070                     ?_temperatureCheck:	
   605                           ; 1 bytes @ 0x0
   606                           
   607  0070                     ?_ledFaultCheck:	
   608                           ; 1 bytes @ 0x0
   609                           
   610  0070                     ?_FANFaultCheck:	
   611                           ; 1 bytes @ 0x0
   612                           
   613  0070                     ?_ErrHanler:	
   614                           ; 1 bytes @ 0x0
   615                           
   616  0070                     ?_int_handler:	
   617                           ; 1 bytes @ 0x0
   618                           
   619  0070                     ??_int_handler:	
   620                           ; 1 bytes @ 0x0
   621                           
   622                           
   623                           ; 1 bytes @ 0x0
   624  0070                     	ds	2
   625  0072                     ?___flge:	
   626  0072                     ??_HeartBeatFlush:	
   627                           ; 1 bit 
   628                           
   629  0072                     ?_ErrFlush:	
   630                           ; 1 bytes @ 0x2
   631                           
   632  0072                     ??_ledFaultCheck:	
   633                           ; 1 bytes @ 0x2
   634                           
   635  0072                     ?__Umul8_16:	
   636                           ; 1 bytes @ 0x2
   637                           
   638  0072                     ?_read_DIA:	
   639                           ; 2 bytes @ 0x2
   640                           
   641  0072                     ?___xxtofl:	
   642                           ; 2 bytes @ 0x2
   643                           
   644  0072                     __Umul8_16@multiplicand:	
   645                           ; 4 bytes @ 0x2
   646                           
   647  0072                     read_DIA@Add:	
   648                           ; 1 bytes @ 0x2
   649                           
   650  0072                     ErrFlush@count:	
   651                           ; 2 bytes @ 0x2
   652                           
   653  0072                     ___flge@ff1:	
   654                           ; 2 bytes @ 0x2
   655                           
   656  0072                     ___xxtofl@val:	
   657                           ; 4 bytes @ 0x2
   658                           
   659                           
   660                           ; 4 bytes @ 0x2
   661  0072                     	ds	2
   662  0074                     ??__Umul8_16:	
   663  0074                     ??_read_DIA:	
   664                           ; 1 bytes @ 0x4
   665                           
   666  0074                     ??_initDIA:	
   667                           ; 1 bytes @ 0x4
   668                           
   669  0074                     ??_init:	
   670                           ; 1 bytes @ 0x4
   671                           
   672  0074                     ??_ErrFlush:	
   673                           ; 1 bytes @ 0x4
   674                           
   675                           
   676                           ; 1 bytes @ 0x4
   677  0074                     	ds	2
   678  0076                     ??___xxtofl:	
   679  0076                     ErrFlush@i:	
   680                           ; 1 bytes @ 0x6
   681                           
   682  0076                     ___flge@ff2:	
   683                           ; 2 bytes @ 0x6
   684                           
   685                           
   686                           ; 4 bytes @ 0x6
   687  0076                     	ds	4
   688  007A                     ??_FANFaultCheck:	
   689                           
   690                           	psect	cstackBANK0
   691  0020                     __pcstackBANK0:	
   692                           ; 1 bytes @ 0xA
   693                           
   694  0020                     ??___flge:	
   695  0020                     ___xxtofl@sign:	
   696                           ; 1 bytes @ 0x0
   697                           
   698  0020                     __Umul8_16@product:	
   699                           ; 1 bytes @ 0x0
   700                           
   701                           
   702                           ; 2 bytes @ 0x0
   703  0020                     	ds	1
   704  0021                     ___xxtofl@exp:	
   705                           
   706                           ; 1 bytes @ 0x1
   707  0021                     	ds	1
   708  0022                     __Umul8_16@word_mpld:	
   709  0022                     ___xxtofl@arg:	
   710                           ; 2 bytes @ 0x2
   711                           
   712                           
   713                           ; 4 bytes @ 0x2
   714  0022                     	ds	2
   715  0024                     __Umul8_16@multiplier:	
   716                           
   717                           ; 1 bytes @ 0x4
   718  0024                     	ds	2
   719  0026                     ?___fldiv:	
   720  0026                     ___fldiv@a:	
   721                           ; 4 bytes @ 0x6
   722                           
   723                           
   724                           ; 4 bytes @ 0x6
   725  0026                     	ds	4
   726  002A                     ___fldiv@b:	
   727                           
   728                           ; 4 bytes @ 0xA
   729  002A                     	ds	4
   730  002E                     ??___fldiv:	
   731                           
   732                           ; 1 bytes @ 0xE
   733  002E                     	ds	5
   734  0033                     ___fldiv@rem:	
   735                           
   736                           ; 4 bytes @ 0x13
   737  0033                     	ds	4
   738  0037                     ___fldiv@sign:	
   739                           
   740                           ; 1 bytes @ 0x17
   741  0037                     	ds	1
   742  0038                     ___fldiv@new_exp:	
   743                           
   744                           ; 2 bytes @ 0x18
   745  0038                     	ds	2
   746  003A                     ___fldiv@grs:	
   747                           
   748                           ; 4 bytes @ 0x1A
   749  003A                     	ds	4
   750  003E                     ___fldiv@bexp:	
   751                           
   752                           ; 1 bytes @ 0x1E
   753  003E                     	ds	1
   754  003F                     ___fldiv@aexp:	
   755                           
   756                           ; 1 bytes @ 0x1F
   757  003F                     	ds	1
   758  0040                     ?___flmul:	
   759  0040                     ___flmul@b:	
   760                           ; 4 bytes @ 0x20
   761                           
   762                           
   763                           ; 4 bytes @ 0x20
   764  0040                     	ds	4
   765  0044                     ___flmul@a:	
   766                           
   767                           ; 4 bytes @ 0x24
   768  0044                     	ds	4
   769  0048                     ??___flmul:	
   770                           
   771                           ; 1 bytes @ 0x28
   772  0048                     	ds	5
   773  004D                     ___flmul@sign:	
   774                           
   775                           ; 1 bytes @ 0x2D
   776  004D                     	ds	1
   777  004E                     ___flmul@aexp:	
   778                           
   779                           ; 1 bytes @ 0x2E
   780  004E                     	ds	1
   781  004F                     ___flmul@grs:	
   782                           
   783                           ; 4 bytes @ 0x2F
   784  004F                     	ds	4
   785  0053                     ___flmul@bexp:	
   786                           
   787                           ; 1 bytes @ 0x33
   788  0053                     	ds	1
   789  0054                     ___flmul@prod:	
   790                           
   791                           ; 4 bytes @ 0x34
   792  0054                     	ds	4
   793  0058                     ___flmul@temp:	
   794                           
   795                           ; 2 bytes @ 0x38
   796  0058                     	ds	2
   797  005A                     ?_getNTCV:	
   798  005A                     getNTCV@channel:	
   799                           ; 4 bytes @ 0x3A
   800                           
   801                           
   802                           ; 2 bytes @ 0x3A
   803  005A                     	ds	4
   804  005E                     ??_getNTCV:	
   805                           
   806                           ; 1 bytes @ 0x3E
   807  005E                     	ds	1
   808  005F                     _getNTCV$1091:	
   809                           
   810                           ; 4 bytes @ 0x3F
   811  005F                     	ds	4
   812  0063                     getNTCV@VDD:	
   813                           
   814                           ; 4 bytes @ 0x43
   815  0063                     	ds	4
   816  0067                     getNTCV@voltage:	
   817                           
   818                           ; 4 bytes @ 0x47
   819  0067                     	ds	4
   820  006B                     ??_temperatureCheck:	
   821  006B                     FANFaultCheck@fanFBVoltage:	
   822                           ; 1 bytes @ 0x4B
   823                           
   824                           
   825                           ; 4 bytes @ 0x4B
   826  006B                     	ds	1
   827  006C                     ??_ErrHanler:	
   828                           
   829                           ; 1 bytes @ 0x4C
   830  006C                     	ds	3
   831                           
   832                           	psect	maintext
   833  0FAF                     __pmaintext:	
   834 ;;
   835 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   836 ;;
   837 ;; *************** function _main *****************
   838 ;; Defined at:
   839 ;;		line 512 in file "main.c"
   840 ;; Parameters:    Size  Location     Type
   841 ;;  argc            2    0[BANK1 ] int 
   842 ;;  argv            2    2[BANK1 ] PTR PTR unsigned char 
   843 ;; Auto vars:     Size  Location     Type
   844 ;;  checkCount      2    6[BANK1 ] int 
   845 ;; Return value:  Size  Location     Type
   846 ;;                  2    0[BANK1 ] int 
   847 ;; Registers used:
   848 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   849 ;; Tracked objects:
   850 ;;		On entry : B3F/0
   851 ;;		On exit  : 0/0
   852 ;;		Unchanged: 0/0
   853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   854 ;;      Params:         0       0       4       0       0       0       0       0
   855 ;;      Locals:         0       0       2       0       0       0       0       0
   856 ;;      Temps:          0       0       2       0       0       0       0       0
   857 ;;      Totals:         0       0       8       0       0       0       0       0
   858 ;;Total ram usage:        8 bytes
   859 ;; Hardware stack levels required when called:    6
   860 ;; This function calls:
   861 ;;		_ErrHanler
   862 ;;		_FANFaultCheck
   863 ;;		_HeartBeatFlush
   864 ;;		_init
   865 ;;		_ledFaultCheck
   866 ;;		_temperatureCheck
   867 ;; This function is called by:
   868 ;;		Startup code after reset
   869 ;; This function uses a non-reentrant model
   870 ;;
   871                           
   872                           
   873                           ;psect for function _main
   874  0FAF                     _main:	
   875                           
   876                           ;main.c: 514:     init();
   877                           
   878                           ;incstack = 0
   879                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   880  0FAF  3186  2658  318F   	fcall	_init
   881                           
   882                           ;main.c: 515:     int checkCount = 0;
   883  0FB2  0141               	movlb	1	; select bank1
   884  0FB3  01C2               	clrf	main@checkCount^(0+128)
   885  0FB4  01C3               	clrf	(main@checkCount+1)^(0+128)
   886  0FB5  2FED               	goto	l2375
   887  0FB6                     l2349:	
   888                           
   889                           ;main.c: 521:                 if(FANFaultCheck()){
   890  0FB6  3187  27B5  318F   	fcall	_FANFaultCheck
   891  0FB9  3A00               	xorlw	0
   892  0FBA  1903               	skipnz
   893  0FBB  2FBF               	goto	l2353
   894                           
   895                           ;main.c: 522:                   HeartBeatFlush();
   896  0FBC  318E  26D0  318F   	fcall	_HeartBeatFlush
   897  0FBF                     l2353:	
   898                           
   899                           ;main.c: 526:                 if(LATCbits.LATC2 == 0){
   900  0FBF  0140               	movlb	0	; select bank0
   901  0FC0  1D1A               	btfss	26,2	;volatile
   902                           
   903                           ;main.c: 527:                     LATCbits.LATC7 = 0;
   904  0FC1  139A               	bcf	26,7	;volatile
   905                           
   906                           ;main.c: 529:                 if(checkCount >= 5){
   907  0FC2  0141               	movlb	1	; select bank1
   908  0FC3  0843               	movf	(main@checkCount+1)^(0+128),w
   909  0FC4  3A80               	xorlw	128
   910  0FC5  00C0               	movwf	??_main^(0+128)
   911  0FC6  3080               	movlw	128
   912  0FC7  0240               	subwf	??_main^(0+128),w
   913  0FC8  1D03               	skipz
   914  0FC9  2FCC               	goto	u2925
   915  0FCA  3005               	movlw	5
   916  0FCB  0242               	subwf	main@checkCount^(0+128),w
   917  0FCC                     u2925:	
   918  0FCC  1C03               	skipc
   919  0FCD  2FD5               	goto	l2363
   920                           
   921                           ;main.c: 530:                   temperatureCheck();
   922  0FCE  3185  2518  318F   	fcall	_temperatureCheck
   923                           
   924                           ;main.c: 531:                   checkCount = 0;
   925  0FD1  0141               	movlb	1	; select bank1
   926  0FD2  01C2               	clrf	main@checkCount^(0+128)
   927  0FD3  01C3               	clrf	(main@checkCount+1)^(0+128)
   928                           
   929                           ;main.c: 532:                 } else {
   930  0FD4  2FDA               	goto	l2365
   931  0FD5                     l2363:	
   932                           
   933                           ;main.c: 533:                     checkCount ++;
   934  0FD5  3001               	movlw	1
   935  0FD6  0141               	movlb	1	; select bank1
   936  0FD7  07C2               	addwf	main@checkCount^(0+128),f
   937  0FD8  3000               	movlw	0
   938  0FD9  3DC3               	addwfc	(main@checkCount+1)^(0+128),f
   939  0FDA                     l2365:	
   940                           
   941                           ;main.c: 535:                ledFaultCheck();
   942  0FDA  318E  26EE  318F   	fcall	_ledFaultCheck
   943                           
   944                           ;main.c: 538:             break;
   945  0FDD  2FED               	goto	l2375
   946  0FDE                     l2367:	
   947                           
   948                           ;main.c: 542:                 if((errReason == BoardHiTempErr) || (errReason == LEDHiTem
      +                          pErr))
   949  0FDE  3003               	movlw	3
   950  0FDF  067B               	xorwf	_errReason,w
   951  0FE0  1903               	btfsc	3,2
   952  0FE1  2FE6               	goto	l203
   953  0FE2  3002               	movlw	2
   954  0FE3  067B               	xorwf	_errReason,w
   955  0FE4  1D03               	btfss	3,2
   956  0FE5  2FEA               	goto	l2371
   957  0FE6                     l203:	
   958                           
   959                           ;main.c: 543:                 {;main.c: 544:                   LATCbits.LATC2 = 0;
   960  0FE6  0140               	movlb	0	; select bank0
   961  0FE7  111A               	bcf	26,2	;volatile
   962                           
   963                           ;main.c: 545:                   LATCbits.LATC5 = 0;
   964  0FE8  129A               	bcf	26,5	;volatile
   965                           
   966                           ;main.c: 546:                   LATCbits.LATC7 = 1;
   967  0FE9  179A               	bsf	26,7	;volatile
   968  0FEA                     l2371:	
   969                           
   970                           ;main.c: 548:                ErrHanler();
   971  0FEA  318F  276A  318F   	fcall	_ErrHanler
   972  0FED                     l193:	
   973                           ;main.c: 549:             break;
   974                           
   975  0FED                     l2375:	
   976  0FED  087A               	movf	_currentStatus,w
   977  0FEE  0141               	movlb	1	; select bank1
   978  0FEF  00C0               	movwf	??_main^(0+128)
   979  0FF0  01C1               	clrf	(??_main^(0+128)+1)
   980                           
   981                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   982                           ; Switch size 1, requested type "simple"
   983                           ; Number of cases is 1, Range of values is 0 to 0
   984                           ; switch strategies available:
   985                           ; Name         Instructions Cycles
   986                           ; simple_byte            4     3 (average)
   987                           ; direct_byte            8     6 (fixed)
   988                           ; jumptable            260     6 (fixed)
   989                           ;	Chosen strategy is simple_byte
   990  0FF1  0841               	movf	(??_main+1)^(0+128),w
   991  0FF2  3A00               	xorlw	0	; case 0
   992  0FF3  1903               	skipnz
   993  0FF4  2FF6               	goto	l2433
   994  0FF5  2FED               	goto	l193
   995  0FF6                     l2433:	
   996                           
   997                           ; Switch size 1, requested type "simple"
   998                           ; Number of cases is 2, Range of values is 0 to 2
   999                           ; switch strategies available:
  1000                           ; Name         Instructions Cycles
  1001                           ; simple_byte            7     4 (average)
  1002                           ; direct_byte           12     6 (fixed)
  1003                           ; jumptable            260     6 (fixed)
  1004                           ;	Chosen strategy is simple_byte
  1005  0FF6  0840               	movf	??_main^(0+128),w
  1006  0FF7  3A00               	xorlw	0	; case 0
  1007  0FF8  1903               	skipnz
  1008  0FF9  2FB6               	goto	l2349
  1009  0FFA  3A02               	xorlw	2	; case 2
  1010  0FFB  1903               	skipnz
  1011  0FFC  2FDE               	goto	l2367
  1012  0FFD  2FED               	goto	l193
  1013  0FFE  3180  2876         	ljmp	start
  1014  1000                     __end_of_main:	
  1015                           
  1016                           	psect	text1
  1017  0658                     __ptext1:	
  1018 ;; *************** function _init *****************
  1019 ;; Defined at:
  1020 ;;		line 143 in file "main.c"
  1021 ;; Parameters:    Size  Location     Type
  1022 ;;		None
  1023 ;; Auto vars:     Size  Location     Type
  1024 ;;		None
  1025 ;; Return value:  Size  Location     Type
  1026 ;;                  1    wreg      void 
  1027 ;; Registers used:
  1028 ;;		wreg, status,2, status,0, pclath, cstack
  1029 ;; Tracked objects:
  1030 ;;		On entry : 0/0
  1031 ;;		On exit  : 0/0
  1032 ;;		Unchanged: 0/0
  1033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1034 ;;      Params:         0       0       0       0       0       0       0       0
  1035 ;;      Locals:         0       0       0       0       0       0       0       0
  1036 ;;      Temps:          0       0       0       0       0       0       0       0
  1037 ;;      Totals:         0       0       0       0       0       0       0       0
  1038 ;;Total ram usage:        0 bytes
  1039 ;; Hardware stack levels used:    1
  1040 ;; Hardware stack levels required when called:    3
  1041 ;; This function calls:
  1042 ;;		_initDIA
  1043 ;; This function is called by:
  1044 ;;		_main
  1045 ;; This function uses a non-reentrant model
  1046 ;;
  1047                           
  1048                           
  1049                           ;psect for function _init
  1050  0658                     _init:	
  1051                           
  1052                           ;main.c: 144:    currentStatus = Init;
  1053                           
  1054                           ;incstack = 0
  1055                           ; Regs used in _init: [wreg+status,2+status,0+pclath+cstack]
  1056  0658  01FA               	clrf	_currentStatus
  1057  0659  0AFA               	incf	_currentStatus,f
  1058                           
  1059                           ;main.c: 147:    GIE = 1;
  1060  065A  178B               	bsf	11,7	;volatile
  1061                           
  1062                           ;main.c: 148:    INTCONbits.PEIE = 1;
  1063  065B  170B               	bsf	11,6	;volatile
  1064                           
  1065                           ;main.c: 151:    TRISAbits.TRISA0 = 1;
  1066  065C  0140               	movlb	0	; select bank0
  1067  065D  1412               	bsf	18,0	;volatile
  1068                           
  1069                           ;main.c: 152:    ANSELAbits.ANSA0 = 1;
  1070  065E  017E               	movlb	62	; select bank62
  1071  065F  1438               	bsf	56,0	;volatile
  1072                           
  1073                           ;main.c: 154:    TRISAbits.TRISA1 = 1;
  1074  0660  0140               	movlb	0	; select bank0
  1075  0661  1492               	bsf	18,1	;volatile
  1076                           
  1077                           ;main.c: 155:    ANSELAbits.ANSA1 = 1;
  1078  0662  017E               	movlb	62	; select bank62
  1079  0663  14B8               	bsf	56,1	;volatile
  1080                           
  1081                           ;main.c: 158:    TRISAbits.TRISA2 = 1;
  1082  0664  0140               	movlb	0	; select bank0
  1083  0665  1512               	bsf	18,2	;volatile
  1084                           
  1085                           ;main.c: 159:    ANSELAbits.ANSA2 = 1;
  1086  0666  017E               	movlb	62	; select bank62
  1087  0667  1538               	bsf	56,2	;volatile
  1088                           
  1089                           ;main.c: 162:     TRISBbits.TRISB0 = 1;
  1090  0668  0140               	movlb	0	; select bank0
  1091  0669  1413               	bsf	19,0	;volatile
  1092                           
  1093                           ;main.c: 163:     ANSELBbits.ANSB0 = 0;
  1094  066A  017E               	movlb	62	; select bank62
  1095  066B  1043               	bcf	67,0	;volatile
  1096                           
  1097                           ;main.c: 167:     TRISAbits.TRISA7 = 1;
  1098  066C  0140               	movlb	0	; select bank0
  1099  066D  1792               	bsf	18,7	;volatile
  1100                           
  1101                           ;main.c: 168:     ANSELAbits.ANSA7 = 0;
  1102  066E  017E               	movlb	62	; select bank62
  1103  066F  13B8               	bcf	56,7	;volatile
  1104                           
  1105                           ;main.c: 171:     ANSELCbits.ANSC0 = 0;
  1106  0670  104E               	bcf	78,0	;volatile
  1107                           
  1108                           ;main.c: 172:     LATCbits.LATC0 = 0;
  1109  0671  0140               	movlb	0	; select bank0
  1110  0672  101A               	bcf	26,0	;volatile
  1111                           
  1112                           ;main.c: 173:     TRISCbits.TRISC0 = 1;
  1113  0673  1414               	bsf	20,0	;volatile
  1114                           
  1115                           ;main.c: 177:     LATCbits.LATC2 = 0;
  1116  0674  111A               	bcf	26,2	;volatile
  1117                           
  1118                           ;main.c: 178:     ANSELCbits.ANSC2 = 0;
  1119  0675  017E               	movlb	62	; select bank62
  1120  0676  114E               	bcf	78,2	;volatile
  1121                           
  1122                           ;main.c: 179:     TRISCbits.TRISC2 = 0;
  1123  0677  0140               	movlb	0	; select bank0
  1124  0678  1114               	bcf	20,2	;volatile
  1125                           
  1126                           ;main.c: 182:     LATCbits.LATC5 = 0;
  1127  0679  129A               	bcf	26,5	;volatile
  1128                           
  1129                           ;main.c: 183:     ANSELCbits.ANSC5 = 0;
  1130  067A  017E               	movlb	62	; select bank62
  1131  067B  12CE               	bcf	78,5	;volatile
  1132                           
  1133                           ;main.c: 184:     TRISCbits.TRISC5 = 0;
  1134  067C  0140               	movlb	0	; select bank0
  1135  067D  1294               	bcf	20,5	;volatile
  1136                           
  1137                           ;main.c: 187:     LATCbits.LATC7 = 0;
  1138  067E  139A               	bcf	26,7	;volatile
  1139                           
  1140                           ;main.c: 188:     ANSELCbits.ANSC7 = 0;
  1141  067F  017E               	movlb	62	; select bank62
  1142  0680  13CE               	bcf	78,7	;volatile
  1143                           
  1144                           ;main.c: 189:     TRISCbits.TRISC7 = 0;
  1145  0681  0140               	movlb	0	; select bank0
  1146  0682  1394               	bcf	20,7	;volatile
  1147                           
  1148                           ;main.c: 192:     TRISBbits.TRISB2 = 1;
  1149  0683  1513               	bsf	19,2	;volatile
  1150                           
  1151                           ;main.c: 193:     ANSELBbits.ANSB2 = 0;
  1152  0684  017E               	movlb	62	; select bank62
  1153  0685  1143               	bcf	67,2	;volatile
  1154                           
  1155                           ;main.c: 195:     TRISBbits.TRISB3 = 1;
  1156  0686  0140               	movlb	0	; select bank0
  1157  0687  1593               	bsf	19,3	;volatile
  1158                           
  1159                           ;main.c: 196:     ANSELBbits.ANSB3 = 0;
  1160  0688  017E               	movlb	62	; select bank62
  1161  0689  11C3               	bcf	67,3	;volatile
  1162                           
  1163                           ;main.c: 201:     PIE0bits.IOCIE = 1;
  1164  068A  014E               	movlb	14	; select bank14
  1165  068B  1616               	bsf	22,4	;volatile
  1166                           
  1167                           ;main.c: 202:     IOCAN7 = 1;
  1168  068C  017E               	movlb	62	; select bank62
  1169  068D  17BE               	bsf	62,7	;volatile
  1170                           
  1171                           ;main.c: 206:     FVRCONbits.ADFVR = 3;
  1172  068E  3003               	movlw	3
  1173  068F  0152               	movlb	18	; select bank18
  1174  0690  048C               	iorwf	12,f	;volatile
  1175                           
  1176                           ;main.c: 207:     FVRCONbits.CDAFVR = 3;
  1177  0691  300C               	movlw	12
  1178  0692  048C               	iorwf	12,f	;volatile
  1179                           
  1180                           ;main.c: 208:     FVREN = 1;
  1181  0693  178C               	bsf	12,7	;volatile
  1182  0694                     l106:	
  1183                           ;main.c: 211:     }
  1184                           
  1185                           
  1186                           ;main.c: 209:     while(!FVRRDY){
  1187  0694  1F0C               	btfss	12,6	;volatile
  1188  0695  2E94               	goto	l106
  1189                           
  1190                           ;main.c: 214:     ADCON1bits.ADCS = 0x01;
  1191  0696  0141               	movlb	1	; select bank1
  1192  0697  081E               	movf	30,w	;volatile
  1193  0698  398F               	andlw	-113
  1194  0699  3810               	iorlw	16
  1195  069A  009E               	movwf	30	;volatile
  1196                           
  1197                           ;main.c: 215:     ADCON1bits.ADPREF = 0;
  1198  069B  30FC               	movlw	-4
  1199  069C  059E               	andwf	30,f	;volatile
  1200                           
  1201                           ;main.c: 216:     ADCON0bits.CHS = 0x3F;
  1202  069D  30FC               	movlw	252
  1203  069E  049D               	iorwf	29,f	;volatile
  1204                           
  1205                           ;main.c: 217:     ADFM = 1;
  1206  069F  179E               	bsf	30,7	;volatile
  1207                           
  1208                           ;main.c: 218:     ADCON0bits.ADON = 0;
  1209  06A0  101D               	bcf	29,0	;volatile
  1210                           
  1211                           ;main.c: 219:     PIR1bits.ADIF = 0;
  1212  06A1  014E               	movlb	14	; select bank14
  1213  06A2  100D               	bcf	13,0	;volatile
  1214                           
  1215                           ;main.c: 220:     PIE1bits.ADIE = 0;
  1216  06A3  1017               	bcf	23,0	;volatile
  1217                           
  1218                           ;main.c: 223:     if(PORTBbits.RB2 == 0){
  1219  06A4  0140               	movlb	0	; select bank0
  1220  06A5  190D               	btfsc	13,2	;volatile
  1221  06A6  2EBB               	goto	l109
  1222                           
  1223                           ;main.c: 224:         if(PORTBbits.RB3 == 0){
  1224  06A7  198D               	btfsc	13,3	;volatile
  1225  06A8  2EB2               	goto	l1893
  1226                           
  1227                           ;main.c: 225:          lightingOffDelay = 460;
  1228  06A9  3000               	movlw	0
  1229  06AA  0141               	movlb	1	; select bank1
  1230  06AB  00C7               	movwf	(_lightingOffDelay+3)^(0+128)
  1231  06AC  3000               	movlw	0
  1232  06AD  00C6               	movwf	(_lightingOffDelay+2)^(0+128)
  1233  06AE  3001               	movlw	1
  1234  06AF  00C5               	movwf	(_lightingOffDelay+1)^(0+128)
  1235  06B0  30CC               	movlw	204
  1236  06B1  2EC5               	goto	L1
  1237  06B2                     l1893:	
  1238                           ;main.c: 226:         } else
  1239                           
  1240                           
  1241                           ;main.c: 227:         {;main.c: 228:          lightingOffDelay = 307;
  1242  06B2  3000               	movlw	0
  1243  06B3  0141               	movlb	1	; select bank1
  1244  06B4  00C7               	movwf	(_lightingOffDelay+3)^(0+128)
  1245  06B5  3000               	movlw	0
  1246  06B6  00C6               	movwf	(_lightingOffDelay+2)^(0+128)
  1247  06B7  3001               	movlw	1
  1248  06B8  00C5               	movwf	(_lightingOffDelay+1)^(0+128)
  1249  06B9  3033               	movlw	51
  1250  06BA  2EC5               	goto	L1
  1251  06BB                     l109:	
  1252                           
  1253                           ;main.c: 231:         if(PORTBbits.RB3 ==0 ){
  1254  06BB  198D               	btfsc	13,3	;volatile
  1255  06BC  2EC6               	goto	l1897
  1256                           
  1257                           ;main.c: 232:            lightingOffDelay = 383;
  1258  06BD  3000               	movlw	0
  1259  06BE  0141               	movlb	1	; select bank1
  1260  06BF  00C7               	movwf	(_lightingOffDelay+3)^(0+128)
  1261  06C0  3000               	movlw	0
  1262  06C1  00C6               	movwf	(_lightingOffDelay+2)^(0+128)
  1263  06C2  3001               	movlw	1
  1264  06C3  00C5               	movwf	(_lightingOffDelay+1)^(0+128)
  1265  06C4  307F               	movlw	127
  1266  06C5                     L1:	
  1267  06C5  00C4               	movwf	_lightingOffDelay^(0+128)
  1268  06C6                     l1897:	
  1269                           
  1270                           ;main.c: 239:      T0EN = 1;
  1271  06C6  014B               	movlb	11	; select bank11
  1272  06C7  179E               	bsf	30,7	;volatile
  1273                           
  1274                           ;main.c: 240:      TMR0IE = 0;
  1275  06C8  014E               	movlb	14	; select bank14
  1276  06C9  1296               	bcf	22,5	;volatile
  1277                           
  1278                           ;main.c: 241:      T016BIT = 0;
  1279  06CA  014B               	movlb	11	; select bank11
  1280  06CB  121E               	bcf	30,4	;volatile
  1281                           
  1282                           ;main.c: 242:      T0CON1bits.T0ASYNC = 1;
  1283  06CC  161F               	bsf	31,4	;volatile
  1284                           
  1285                           ;main.c: 243:      T0CON1bits.T0CS = 5;
  1286  06CD  081F               	movf	31,w	;volatile
  1287  06CE  391F               	andlw	-225
  1288  06CF  38A0               	iorlw	160
  1289  06D0  009F               	movwf	31	;volatile
  1290                           
  1291                           ;main.c: 244:      T0CON1bits.T0CKPS = 8;
  1292  06D1  081F               	movf	31,w	;volatile
  1293  06D2  39F0               	andlw	-16
  1294  06D3  3808               	iorlw	8
  1295  06D4  009F               	movwf	31	;volatile
  1296                           
  1297                           ;main.c: 248:      initDIA();
  1298  06D5  3187  2755         	fcall	_initDIA
  1299                           
  1300                           ;main.c: 250:      currentStatus = Normal;
  1301  06D7  01FA               	clrf	_currentStatus
  1302  06D8  0008               	return
  1303  06D9                     __end_of_init:	
  1304                           
  1305                           	psect	text2
  1306  0755                     __ptext2:	
  1307 ;; *************** function _initDIA *****************
  1308 ;; Defined at:
  1309 ;;		line 78 in file "main.c"
  1310 ;; Parameters:    Size  Location     Type
  1311 ;;		None
  1312 ;; Auto vars:     Size  Location     Type
  1313 ;;		None
  1314 ;; Return value:  Size  Location     Type
  1315 ;;                  1    wreg      void 
  1316 ;; Registers used:
  1317 ;;		wreg, status,2, pclath, cstack
  1318 ;; Tracked objects:
  1319 ;;		On entry : 0/0
  1320 ;;		On exit  : 0/0
  1321 ;;		Unchanged: 0/0
  1322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1323 ;;      Params:         0       0       0       0       0       0       0       0
  1324 ;;      Locals:         0       0       0       0       0       0       0       0
  1325 ;;      Temps:          0       0       0       0       0       0       0       0
  1326 ;;      Totals:         0       0       0       0       0       0       0       0
  1327 ;;Total ram usage:        0 bytes
  1328 ;; Hardware stack levels used:    1
  1329 ;; Hardware stack levels required when called:    2
  1330 ;; This function calls:
  1331 ;;		_read_DIA
  1332 ;; This function is called by:
  1333 ;;		_init
  1334 ;; This function uses a non-reentrant model
  1335 ;;
  1336                           
  1337                           
  1338                           ;psect for function _initDIA
  1339  0755                     _initDIA:	
  1340                           
  1341                           ;main.c: 79:     DIA_Table.TSLR2 = read_DIA(0x8113);
  1342                           
  1343                           ;incstack = 0
  1344                           ; Regs used in _initDIA: [wreg+status,2+pclath+cstack]
  1345  0755  3013               	movlw	19
  1346  0756  00F2               	movwf	read_DIA@Add
  1347  0757  3081               	movlw	129
  1348  0758  00F3               	movwf	read_DIA@Add+1
  1349  0759  318E  26C2  3187   	fcall	_read_DIA
  1350  075C  0873               	movf	?_read_DIA+1,w
  1351  075D  0141               	movlb	1	; select bank1
  1352  075E  00A1               	movwf	(_DIA_Table+1)^(0+128)
  1353  075F  0872               	movf	?_read_DIA,w
  1354  0760  00A0               	movwf	_DIA_Table^(0+128)
  1355                           
  1356                           ;main.c: 80:     DIA_Table.TSHR2 = read_DIA(0x8116);
  1357  0761  3016               	movlw	22
  1358  0762  00F2               	movwf	read_DIA@Add
  1359  0763  3081               	movlw	129
  1360  0764  00F3               	movwf	read_DIA@Add+1
  1361  0765  318E  26C2  3187   	fcall	_read_DIA
  1362  0768  0873               	movf	?_read_DIA+1,w
  1363  0769  0141               	movlb	1	; select bank1
  1364  076A  00A3               	movwf	((_DIA_Table+1)^(0+128)+2)
  1365  076B  0872               	movf	?_read_DIA,w
  1366  076C  00A2               	movwf	(_DIA_Table^(0+128)+2)
  1367                           
  1368                           ;main.c: 81:     DIA_Table.FVRA1X = read_DIA(0x8118);
  1369  076D  3018               	movlw	24
  1370  076E  00F2               	movwf	read_DIA@Add
  1371  076F  3081               	movlw	129
  1372  0770  00F3               	movwf	read_DIA@Add+1
  1373  0771  318E  26C2  3187   	fcall	_read_DIA
  1374  0774  0873               	movf	?_read_DIA+1,w
  1375  0775  0141               	movlb	1	; select bank1
  1376  0776  00A5               	movwf	((_DIA_Table+1)^(0+128)+4)
  1377  0777  0872               	movf	?_read_DIA,w
  1378  0778  00A4               	movwf	(_DIA_Table^(0+128)+4)
  1379                           
  1380                           ;main.c: 82:     DIA_Table.FVRA2X = read_DIA(0x8119);
  1381  0779  3019               	movlw	25
  1382  077A  00F2               	movwf	read_DIA@Add
  1383  077B  3081               	movlw	129
  1384  077C  00F3               	movwf	read_DIA@Add+1
  1385  077D  318E  26C2  3187   	fcall	_read_DIA
  1386  0780  0873               	movf	?_read_DIA+1,w
  1387  0781  0141               	movlb	1	; select bank1
  1388  0782  00A7               	movwf	((_DIA_Table+1)^(0+128)+6)
  1389  0783  0872               	movf	?_read_DIA,w
  1390  0784  00A6               	movwf	(_DIA_Table^(0+128)+6)
  1391                           
  1392                           ;main.c: 83:     DIA_Table.FVRA4X = read_DIA(0x811A);
  1393  0785  301A               	movlw	26
  1394  0786  00F2               	movwf	read_DIA@Add
  1395  0787  3081               	movlw	129
  1396  0788  00F3               	movwf	read_DIA@Add+1
  1397  0789  318E  26C2  3187   	fcall	_read_DIA
  1398  078C  0873               	movf	?_read_DIA+1,w
  1399  078D  0141               	movlb	1	; select bank1
  1400  078E  00A9               	movwf	((_DIA_Table+1)^(0+128)+8)
  1401  078F  0872               	movf	?_read_DIA,w
  1402  0790  00A8               	movwf	(_DIA_Table^(0+128)+8)
  1403                           
  1404                           ;main.c: 84:     DIA_Table.FVRC1X = read_DIA(0x811B);
  1405  0791  301B               	movlw	27
  1406  0792  00F2               	movwf	read_DIA@Add
  1407  0793  3081               	movlw	129
  1408  0794  00F3               	movwf	read_DIA@Add+1
  1409  0795  318E  26C2  3187   	fcall	_read_DIA
  1410  0798  0873               	movf	?_read_DIA+1,w
  1411  0799  0141               	movlb	1	; select bank1
  1412  079A  00AB               	movwf	((_DIA_Table+1)^(0+128)+10)
  1413  079B  0872               	movf	?_read_DIA,w
  1414  079C  00AA               	movwf	(_DIA_Table^(0+128)+10)
  1415                           
  1416                           ;main.c: 85:     DIA_Table.FVRC2X = read_DIA(0x811C);
  1417  079D  301C               	movlw	28
  1418  079E  00F2               	movwf	read_DIA@Add
  1419  079F  3081               	movlw	129
  1420  07A0  00F3               	movwf	read_DIA@Add+1
  1421  07A1  318E  26C2  3187   	fcall	_read_DIA
  1422  07A4  0873               	movf	?_read_DIA+1,w
  1423  07A5  0141               	movlb	1	; select bank1
  1424  07A6  00AD               	movwf	((_DIA_Table+1)^(0+128)+12)
  1425  07A7  0872               	movf	?_read_DIA,w
  1426  07A8  00AC               	movwf	(_DIA_Table^(0+128)+12)
  1427                           
  1428                           ;main.c: 86:     DIA_Table.FVRC4X = read_DIA(0x811D);
  1429  07A9  301D               	movlw	29
  1430  07AA  00F2               	movwf	read_DIA@Add
  1431  07AB  3081               	movlw	129
  1432  07AC  00F3               	movwf	read_DIA@Add+1
  1433  07AD  318E  26C2         	fcall	_read_DIA
  1434  07AF  0873               	movf	?_read_DIA+1,w
  1435  07B0  0141               	movlb	1	; select bank1
  1436  07B1  00AF               	movwf	((_DIA_Table+1)^(0+128)+14)
  1437  07B2  0872               	movf	?_read_DIA,w
  1438  07B3  00AE               	movwf	(_DIA_Table^(0+128)+14)
  1439  07B4  0008               	return
  1440  07B5                     __end_of_initDIA:	
  1441                           
  1442                           	psect	text3
  1443  0EC2                     __ptext3:	
  1444 ;; *************** function _read_DIA *****************
  1445 ;; Defined at:
  1446 ;;		line 67 in file "main.c"
  1447 ;; Parameters:    Size  Location     Type
  1448 ;;  Add             2    2[COMMON] unsigned int 
  1449 ;; Auto vars:     Size  Location     Type
  1450 ;;		None
  1451 ;; Return value:  Size  Location     Type
  1452 ;;                  2    2[COMMON] unsigned int 
  1453 ;; Registers used:
  1454 ;;		wreg, status,2
  1455 ;; Tracked objects:
  1456 ;;		On entry : 0/0
  1457 ;;		On exit  : 0/0
  1458 ;;		Unchanged: 0/0
  1459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1460 ;;      Params:         2       0       0       0       0       0       0       0
  1461 ;;      Locals:         0       0       0       0       0       0       0       0
  1462 ;;      Temps:          0       0       0       0       0       0       0       0
  1463 ;;      Totals:         2       0       0       0       0       0       0       0
  1464 ;;Total ram usage:        2 bytes
  1465 ;; Hardware stack levels used:    1
  1466 ;; Hardware stack levels required when called:    1
  1467 ;; This function calls:
  1468 ;;		Nothing
  1469 ;; This function is called by:
  1470 ;;		_initDIA
  1471 ;; This function uses a non-reentrant model
  1472 ;;
  1473                           
  1474                           
  1475                           ;psect for function _read_DIA
  1476  0EC2                     _read_DIA:	
  1477                           
  1478                           ;main.c: 67: unsigned int read_DIA (unsigned int Add);main.c: 68: {;main.c: 69:     NVMC
      +                          ON1bits.NVMREGS = 0x01;
  1479                           
  1480                           ;incstack = 0
  1481                           ; Regs used in _read_DIA: [wreg+status,2]
  1482  0EC2  0150               	movlb	16	; select bank16
  1483  0EC3  171E               	bsf	30,6	;volsfr
  1484                           
  1485                           ;main.c: 70:     NVMADRH = ((Add >> 8) & 0xFF);
  1486  0EC4  0873               	movf	read_DIA@Add+1,w
  1487  0EC5  009B               	movwf	27	;volatile
  1488                           
  1489                           ;main.c: 71:     NVMADRL = (Add & 0xFF);
  1490  0EC6  0872               	movf	read_DIA@Add,w
  1491  0EC7  009A               	movwf	26	;volatile
  1492                           
  1493                           ;main.c: 72:     NVMCON1bits.RD = 0x01;
  1494  0EC8  141E               	bsf	30,0	;volsfr
  1495  0EC9                     l97:	
  1496                           ;main.c: 73:     while (NVMCON1bits.RD == 1);
  1497                           
  1498  0EC9  181E               	btfsc	30,0	;volsfr
  1499  0ECA  2EC9               	goto	l97
  1500                           
  1501                           ;main.c: 74:     return ((NVMDATH<<8)+NVMDATL);
  1502  0ECB  081D               	movf	29,w	;volatile
  1503  0ECC  00F3               	movwf	?_read_DIA+1
  1504  0ECD  081C               	movf	28,w	;volatile
  1505  0ECE  00F2               	movwf	?_read_DIA
  1506  0ECF  0008               	return
  1507  0ED0                     __end_of_read_DIA:	
  1508                           
  1509                           	psect	text4
  1510  0ED0                     __ptext4:	
  1511 ;; *************** function _HeartBeatFlush *****************
  1512 ;; Defined at:
  1513 ;;		line 329 in file "main.c"
  1514 ;; Parameters:    Size  Location     Type
  1515 ;;		None
  1516 ;; Auto vars:     Size  Location     Type
  1517 ;;		None
  1518 ;; Return value:  Size  Location     Type
  1519 ;;                  1    wreg      void 
  1520 ;; Registers used:
  1521 ;;		wreg
  1522 ;; Tracked objects:
  1523 ;;		On entry : 0/0
  1524 ;;		On exit  : 0/0
  1525 ;;		Unchanged: 0/0
  1526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1527 ;;      Params:         0       0       0       0       0       0       0       0
  1528 ;;      Locals:         0       0       0       0       0       0       0       0
  1529 ;;      Temps:          2       0       0       0       0       0       0       0
  1530 ;;      Totals:         2       0       0       0       0       0       0       0
  1531 ;;Total ram usage:        2 bytes
  1532 ;; Hardware stack levels used:    1
  1533 ;; Hardware stack levels required when called:    1
  1534 ;; This function calls:
  1535 ;;		Nothing
  1536 ;; This function is called by:
  1537 ;;		_main
  1538 ;; This function uses a non-reentrant model
  1539 ;;
  1540                           
  1541                           
  1542                           ;psect for function _HeartBeatFlush
  1543  0ED0                     _HeartBeatFlush:	
  1544                           
  1545                           ;main.c: 331:     TRISCbits.TRISC0 = 1;
  1546                           
  1547                           ;incstack = 0
  1548                           ; Regs used in _HeartBeatFlush: [wreg]
  1549  0ED0  0140               	movlb	0	; select bank0
  1550  0ED1  1414               	bsf	20,0	;volatile
  1551                           
  1552                           ;main.c: 332:     LATCbits.LATC0 = 0;
  1553  0ED2  101A               	bcf	26,0	;volatile
  1554                           
  1555                           ;main.c: 333:     _delay((unsigned long)((250)*(32000000/4000.0)));
  1556  0ED3  300B               	movlw	11
  1557  0ED4  00F3               	movwf	??_HeartBeatFlush+1
  1558  0ED5  3026               	movlw	38
  1559  0ED6  00F2               	movwf	??_HeartBeatFlush
  1560  0ED7  305E               	movlw	94
  1561  0ED8                     u2957:	
  1562  0ED8  0B89               	decfsz	9,f
  1563  0ED9  2ED8               	goto	u2957
  1564  0EDA  0BF2               	decfsz	??_HeartBeatFlush,f
  1565  0EDB  2ED8               	goto	u2957
  1566  0EDC  0BF3               	decfsz	??_HeartBeatFlush+1,f
  1567  0EDD  2ED8               	goto	u2957
  1568                           
  1569                           ;main.c: 334:     TRISCbits.TRISC0 = 0;
  1570  0EDE  0140               	movlb	0	; select bank0
  1571  0EDF  1014               	bcf	20,0	;volatile
  1572                           
  1573                           ;main.c: 335:     _delay((unsigned long)((250)*(32000000/4000.0)));
  1574  0EE0  300B               	movlw	11
  1575  0EE1  00F3               	movwf	??_HeartBeatFlush+1
  1576  0EE2  3026               	movlw	38
  1577  0EE3  00F2               	movwf	??_HeartBeatFlush
  1578  0EE4  305E               	movlw	94
  1579  0EE5                     u2967:	
  1580  0EE5  0B89               	decfsz	9,f
  1581  0EE6  2EE5               	goto	u2967
  1582  0EE7  0BF2               	decfsz	??_HeartBeatFlush,f
  1583  0EE8  2EE5               	goto	u2967
  1584  0EE9  0BF3               	decfsz	??_HeartBeatFlush+1,f
  1585  0EEA  2EE5               	goto	u2967
  1586                           
  1587                           ;main.c: 336:     TRISCbits.TRISC0 = 1;
  1588  0EEB  0140               	movlb	0	; select bank0
  1589  0EEC  1414               	bsf	20,0	;volatile
  1590  0EED  0008               	return
  1591  0EEE                     __end_of_HeartBeatFlush:	
  1592                           
  1593                           	psect	text5
  1594  07B5                     __ptext5:	
  1595 ;; *************** function _FANFaultCheck *****************
  1596 ;; Defined at:
  1597 ;;		line 399 in file "main.c"
  1598 ;; Parameters:    Size  Location     Type
  1599 ;;		None
  1600 ;; Auto vars:     Size  Location     Type
  1601 ;;  fanFBVoltage    4   75[BANK0 ] float 
  1602 ;; Return value:  Size  Location     Type
  1603 ;;                  1    wreg      _Bool 
  1604 ;; Registers used:
  1605 ;;		wreg, status,2, status,0, pclath, cstack
  1606 ;; Tracked objects:
  1607 ;;		On entry : 0/0
  1608 ;;		On exit  : 0/0
  1609 ;;		Unchanged: 0/0
  1610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1611 ;;      Params:         0       0       0       0       0       0       0       0
  1612 ;;      Locals:         0       4       0       0       0       0       0       0
  1613 ;;      Temps:          0       0       0       0       0       0       0       0
  1614 ;;      Totals:         0       4       0       0       0       0       0       0
  1615 ;;Total ram usage:        4 bytes
  1616 ;; Hardware stack levels used:    1
  1617 ;; Hardware stack levels required when called:    4
  1618 ;; This function calls:
  1619 ;;		_ErrFlush
  1620 ;;		___flge
  1621 ;;		_getNTCV
  1622 ;; This function is called by:
  1623 ;;		_main
  1624 ;; This function uses a non-reentrant model
  1625 ;;
  1626                           
  1627                           
  1628                           ;psect for function _FANFaultCheck
  1629  07B5                     _FANFaultCheck:	
  1630                           
  1631                           ;main.c: 401:     if(LATCbits.LATC7 == 0){
  1632                           
  1633                           ;incstack = 0
  1634                           ; Regs used in _FANFaultCheck: [wreg+status,2+status,0+pclath+cstack]
  1635  07B5  0140               	movlb	0	; select bank0
  1636  07B6  1F9A               	btfss	26,7	;volatile
  1637  07B7  2FCF               	goto	l2305
  1638  07B8  2FD1               	goto	l2309
  1639  07B9                     l2311:	
  1640  07B9  0140               	movlb	0	; select bank0
  1641  07BA  086E               	movf	FANFaultCheck@fanFBVoltage+3,w
  1642  07BB  00F5               	movwf	___flge@ff1+3
  1643  07BC  086D               	movf	FANFaultCheck@fanFBVoltage+2,w
  1644  07BD  00F4               	movwf	___flge@ff1+2
  1645  07BE  086C               	movf	FANFaultCheck@fanFBVoltage+1,w
  1646  07BF  00F3               	movwf	___flge@ff1+1
  1647  07C0  086B               	movf	FANFaultCheck@fanFBVoltage,w
  1648  07C1  00F2               	movwf	___flge@ff1
  1649  07C2  303F               	movlw	63
  1650  07C3  00F9               	movwf	___flge@ff2+3
  1651  07C4  3000               	movlw	0
  1652  07C5  00F8               	movwf	___flge@ff2+2
  1653  07C6  3000               	movlw	0
  1654  07C7  00F7               	movwf	___flge@ff2+1
  1655  07C8  3000               	movlw	0
  1656  07C9  00F6               	movwf	___flge@ff2
  1657  07CA  3186  26D9  3187   	fcall	___flge
  1658  07CD  1C03               	btfss	3,0
  1659  07CE  2FF6               	goto	l2313
  1660  07CF                     l2305:	
  1661                           
  1662                           ;main.c: 402:         return 1;
  1663  07CF  3001               	movlw	1
  1664  07D0  0008               	return
  1665  07D1                     l2309:	
  1666                           
  1667                           ;main.c: 404:     float fanFBVoltage;;main.c: 405:     fanFBVoltage = getNTCV(0x02);
  1668  07D1  3002               	movlw	2
  1669  07D2  00DA               	movwf	getNTCV@channel
  1670  07D3  3000               	movlw	0
  1671  07D4  00DB               	movwf	getNTCV@channel+1
  1672  07D5  3184  243B  3187   	fcall	_getNTCV
  1673  07D8  0140               	movlb	0	; select bank0
  1674  07D9  085D               	movf	?_getNTCV+3,w
  1675  07DA  00EE               	movwf	FANFaultCheck@fanFBVoltage+3
  1676  07DB  085C               	movf	?_getNTCV+2,w
  1677  07DC  00ED               	movwf	FANFaultCheck@fanFBVoltage+2
  1678  07DD  085B               	movf	?_getNTCV+1,w
  1679  07DE  00EC               	movwf	FANFaultCheck@fanFBVoltage+1
  1680  07DF  085A               	movf	?_getNTCV,w
  1681  07E0  00EB               	movwf	FANFaultCheck@fanFBVoltage
  1682                           
  1683                           ;main.c: 406:     if( (fanFBVoltage > FanFBUpLimit) || (fanFBVoltage < FanFBLowLimit)){
  1684  07E1  303F               	movlw	63
  1685  07E2  00F5               	movwf	___flge@ff1+3
  1686  07E3  3099               	movlw	153
  1687  07E4  00F4               	movwf	___flge@ff1+2
  1688  07E5  3099               	movlw	153
  1689  07E6  00F3               	movwf	___flge@ff1+1
  1690  07E7  309A               	movlw	154
  1691  07E8  00F2               	movwf	___flge@ff1
  1692  07E9  086E               	movf	FANFaultCheck@fanFBVoltage+3,w
  1693  07EA  00F9               	movwf	___flge@ff2+3
  1694  07EB  086D               	movf	FANFaultCheck@fanFBVoltage+2,w
  1695  07EC  00F8               	movwf	___flge@ff2+2
  1696  07ED  086C               	movf	FANFaultCheck@fanFBVoltage+1,w
  1697  07EE  00F7               	movwf	___flge@ff2+1
  1698  07EF  086B               	movf	FANFaultCheck@fanFBVoltage,w
  1699  07F0  00F6               	movwf	___flge@ff2
  1700  07F1  3186  26D9  3187   	fcall	___flge
  1701  07F4  1803               	btfsc	3,0
  1702  07F5  2FB9               	goto	l2311
  1703  07F6                     l2313:	
  1704                           
  1705                           ;main.c: 407:         ErrFlush(1);
  1706  07F6  3001               	movlw	1
  1707  07F7  00F2               	movwf	ErrFlush@count
  1708  07F8  3000               	movlw	0
  1709  07F9  00F3               	movwf	ErrFlush@count+1
  1710  07FA  318F  272D         	fcall	_ErrFlush
  1711                           
  1712                           ;main.c: 408:         return 0;
  1713  07FC  3000               	movlw	0
  1714  07FD  0008               	return
  1715  07FE                     __end_of_FANFaultCheck:	
  1716                           
  1717                           	psect	text6
  1718  0F6A                     __ptext6:	
  1719 ;; *************** function _ErrHanler *****************
  1720 ;; Defined at:
  1721 ;;		line 417 in file "main.c"
  1722 ;; Parameters:    Size  Location     Type
  1723 ;;		None
  1724 ;; Auto vars:     Size  Location     Type
  1725 ;;		None
  1726 ;; Return value:  Size  Location     Type
  1727 ;;                  1    wreg      void 
  1728 ;; Registers used:
  1729 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1730 ;; Tracked objects:
  1731 ;;		On entry : 0/0
  1732 ;;		On exit  : 0/0
  1733 ;;		Unchanged: 0/0
  1734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1735 ;;      Params:         0       0       0       0       0       0       0       0
  1736 ;;      Locals:         0       0       0       0       0       0       0       0
  1737 ;;      Temps:          0       2       0       0       0       0       0       0
  1738 ;;      Totals:         0       2       0       0       0       0       0       0
  1739 ;;Total ram usage:        2 bytes
  1740 ;; Hardware stack levels used:    1
  1741 ;; Hardware stack levels required when called:    5
  1742 ;; This function calls:
  1743 ;;		_ErrFlush
  1744 ;;		_ledFaultCheck
  1745 ;;		_temperatureCheck
  1746 ;; This function is called by:
  1747 ;;		_main
  1748 ;; This function uses a non-reentrant model
  1749 ;;
  1750                           
  1751                           
  1752                           ;psect for function _ErrHanler
  1753  0F6A                     _ErrHanler:	
  1754                           
  1755                           ;main.c: 419:     if(currentStatus == Error){
  1756                           
  1757                           ;incstack = 0
  1758                           ; Regs used in _ErrHanler: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1759  0F6A  3002               	movlw	2
  1760  0F6B  067A               	xorwf	_currentStatus,w
  1761  0F6C  1D03               	btfss	3,2
  1762  0F6D  0008               	return
  1763  0F6E  2F97               	goto	l2339
  1764  0F6F                     l166:	
  1765                           ;main.c: 422:         {;main.c: 423:             case InitErr:
  1766                           
  1767                           
  1768                           ;main.c: 424:                  LATCbits.LATC0 = 0;
  1769  0F6F  101A               	bcf	26,0	;volatile
  1770                           
  1771                           ;main.c: 425:                  TRISCbits.TRISC0 = 0;
  1772  0F70  1014               	bcf	20,0	;volatile
  1773                           
  1774                           ;main.c: 426:                  break;
  1775  0F71  0008               	return
  1776  0F72                     l2329:	
  1777                           
  1778                           ;main.c: 429:                 ErrFlush(2);
  1779  0F72  3002               	movlw	2
  1780  0F73  00F2               	movwf	ErrFlush@count
  1781  0F74  3000               	movlw	0
  1782  0F75  00F3               	movwf	ErrFlush@count+1
  1783  0F76  318F  272D  318F   	fcall	_ErrFlush
  1784                           
  1785                           ;main.c: 430:                 temperatureCheck();
  1786  0F79  3185  2518         	fcall	_temperatureCheck
  1787                           
  1788                           ;main.c: 431:                 break;
  1789  0F7B  0008               	return
  1790  0F7C                     l2331:	
  1791                           
  1792                           ;main.c: 433:                  ErrFlush(3);
  1793  0F7C  3003               	movlw	3
  1794  0F7D  00F2               	movwf	ErrFlush@count
  1795  0F7E  3000               	movlw	0
  1796  0F7F  00F3               	movwf	ErrFlush@count+1
  1797  0F80  318F  272D  318F   	fcall	_ErrFlush
  1798                           
  1799                           ;main.c: 434:                 temperatureCheck();
  1800  0F83  3185  2518         	fcall	_temperatureCheck
  1801                           
  1802                           ;main.c: 435:                  break;
  1803  0F85  0008               	return
  1804  0F86                     l2333:	
  1805                           
  1806                           ;main.c: 437:                  ErrFlush(4);
  1807  0F86  3004               	movlw	4
  1808  0F87  00F2               	movwf	ErrFlush@count
  1809  0F88  3000               	movlw	0
  1810  0F89  00F3               	movwf	ErrFlush@count+1
  1811  0F8A  318F  272D  318F   	fcall	_ErrFlush
  1812                           
  1813                           ;main.c: 438:                  ledFaultCheck();
  1814  0F8D  318E  26EE         	fcall	_ledFaultCheck
  1815                           
  1816                           ;main.c: 439:             break;
  1817  0F8F  0008               	return
  1818  0F90                     l2335:	
  1819                           
  1820                           ;main.c: 441:                  ErrFlush(5);
  1821  0F90  3005               	movlw	5
  1822  0F91  00F2               	movwf	ErrFlush@count
  1823  0F92  3000               	movlw	0
  1824  0F93  00F3               	movwf	ErrFlush@count+1
  1825  0F94  318F  272D         	fcall	_ErrFlush
  1826                           
  1827                           ;main.c: 442:             break;
  1828  0F96  0008               	return
  1829  0F97                     l2339:	
  1830  0F97  087B               	movf	_errReason,w
  1831  0F98  0140               	movlb	0	; select bank0
  1832  0F99  00EC               	movwf	??_ErrHanler
  1833  0F9A  01ED               	clrf	??_ErrHanler+1
  1834                           
  1835                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1836                           ; Switch size 1, requested type "simple"
  1837                           ; Number of cases is 1, Range of values is 0 to 0
  1838                           ; switch strategies available:
  1839                           ; Name         Instructions Cycles
  1840                           ; simple_byte            4     3 (average)
  1841                           ; direct_byte            8     6 (fixed)
  1842                           ; jumptable            260     6 (fixed)
  1843                           ;	Chosen strategy is simple_byte
  1844  0F9B  086D               	movf	??_ErrHanler+1,w
  1845  0F9C  3A00               	xorlw	0	; case 0
  1846  0F9D  1903               	skipnz
  1847  0F9E  2FA0               	goto	l2435
  1848  0F9F  2F90               	goto	l2335
  1849  0FA0                     l2435:	
  1850                           
  1851                           ; Switch size 1, requested type "simple"
  1852                           ; Number of cases is 4, Range of values is 1 to 4
  1853                           ; switch strategies available:
  1854                           ; Name         Instructions Cycles
  1855                           ; simple_byte           13     7 (average)
  1856                           ; direct_byte           17     9 (fixed)
  1857                           ; jumptable            263     9 (fixed)
  1858                           ;	Chosen strategy is simple_byte
  1859  0FA0  086C               	movf	??_ErrHanler,w
  1860  0FA1  3A01               	xorlw	1	; case 1
  1861  0FA2  1903               	skipnz
  1862  0FA3  2F6F               	goto	l166
  1863  0FA4  3A03               	xorlw	3	; case 2
  1864  0FA5  1903               	skipnz
  1865  0FA6  2F72               	goto	l2329
  1866  0FA7  3A01               	xorlw	1	; case 3
  1867  0FA8  1903               	skipnz
  1868  0FA9  2F7C               	goto	l2331
  1869  0FAA  3A07               	xorlw	7	; case 4
  1870  0FAB  1903               	skipnz
  1871  0FAC  2F86               	goto	l2333
  1872  0FAD  2F90               	goto	l2335
  1873  0FAE  0008               	return
  1874  0FAF                     __end_of_ErrHanler:	
  1875                           
  1876                           	psect	text7
  1877  0518                     __ptext7:	
  1878 ;; *************** function _temperatureCheck *****************
  1879 ;; Defined at:
  1880 ;;		line 363 in file "main.c"
  1881 ;; Parameters:    Size  Location     Type
  1882 ;;		None
  1883 ;; Auto vars:     Size  Location     Type
  1884 ;;		None
  1885 ;; Return value:  Size  Location     Type
  1886 ;;                  1    wreg      void 
  1887 ;; Registers used:
  1888 ;;		wreg, status,2, status,0, pclath, cstack
  1889 ;; Tracked objects:
  1890 ;;		On entry : 0/0
  1891 ;;		On exit  : 0/0
  1892 ;;		Unchanged: 0/0
  1893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1894 ;;      Params:         0       0       0       0       0       0       0       0
  1895 ;;      Locals:         0       0       0       0       0       0       0       0
  1896 ;;      Temps:          0       1       0       0       0       0       0       0
  1897 ;;      Totals:         0       1       0       0       0       0       0       0
  1898 ;;Total ram usage:        1 bytes
  1899 ;; Hardware stack levels used:    1
  1900 ;; Hardware stack levels required when called:    4
  1901 ;; This function calls:
  1902 ;;		___flge
  1903 ;;		_getNTCV
  1904 ;; This function is called by:
  1905 ;;		_ErrHanler
  1906 ;;		_main
  1907 ;; This function uses a non-reentrant model
  1908 ;;
  1909                           
  1910                           
  1911                           ;psect for function _temperatureCheck
  1912  0518                     _temperatureCheck:	
  1913                           
  1914                           ;main.c: 364:     intNTCV = getNTCV(0x00);
  1915                           
  1916                           ;incstack = 0
  1917                           ; Regs used in _temperatureCheck: [wreg+status,2+status,0+pclath+cstack]
  1918  0518  3000               	movlw	0
  1919  0519  0140               	movlb	0	; select bank0
  1920  051A  00DA               	movwf	getNTCV@channel
  1921  051B  00DB               	movwf	getNTCV@channel+1
  1922  051C  3184  243B  3185   	fcall	_getNTCV
  1923  051F  0140               	movlb	0	; select bank0
  1924  0520  085D               	movf	?_getNTCV+3,w
  1925  0521  0141               	movlb	1	; select bank1
  1926  0522  00B7               	movwf	(_intNTCV+3)^(0+128)
  1927  0523  0140               	movlb	0	; select bank0
  1928  0524  085C               	movf	?_getNTCV+2,w
  1929  0525  0141               	movlb	1	; select bank1
  1930  0526  00B6               	movwf	(_intNTCV+2)^(0+128)
  1931  0527  0140               	movlb	0	; select bank0
  1932  0528  085B               	movf	?_getNTCV+1,w
  1933  0529  0141               	movlb	1	; select bank1
  1934  052A  00B5               	movwf	(_intNTCV+1)^(0+128)
  1935  052B  0140               	movlb	0	; select bank0
  1936  052C  085A               	movf	?_getNTCV,w
  1937  052D  0141               	movlb	1	; select bank1
  1938  052E  00B4               	movwf	_intNTCV^(0+128)
  1939                           
  1940                           ;main.c: 365:     extNTCV = getNTCV(0x01);
  1941  052F  3001               	movlw	1
  1942  0530  0140               	movlb	0	; select bank0
  1943  0531  00DA               	movwf	getNTCV@channel
  1944  0532  3000               	movlw	0
  1945  0533  00DB               	movwf	getNTCV@channel+1
  1946  0534  3184  243B  3185   	fcall	_getNTCV
  1947  0537  0140               	movlb	0	; select bank0
  1948  0538  085D               	movf	?_getNTCV+3,w
  1949  0539  0141               	movlb	1	; select bank1
  1950  053A  00B3               	movwf	(_extNTCV+3)^(0+128)
  1951  053B  0140               	movlb	0	; select bank0
  1952  053C  085C               	movf	?_getNTCV+2,w
  1953  053D  0141               	movlb	1	; select bank1
  1954  053E  00B2               	movwf	(_extNTCV+2)^(0+128)
  1955  053F  0140               	movlb	0	; select bank0
  1956  0540  085B               	movf	?_getNTCV+1,w
  1957  0541  0141               	movlb	1	; select bank1
  1958  0542  00B1               	movwf	(_extNTCV+1)^(0+128)
  1959  0543  0140               	movlb	0	; select bank0
  1960  0544  085A               	movf	?_getNTCV,w
  1961  0545  0141               	movlb	1	; select bank1
  1962  0546  00B0               	movwf	_extNTCV^(0+128)
  1963                           
  1964                           ;main.c: 366:     if(currentStatus == Normal){
  1965  0547  087A               	movf	_currentStatus,w
  1966  0548  1D03               	btfss	3,2
  1967  0549  2D88               	goto	l2291
  1968                           
  1969                           ;main.c: 367:         if( intNTCV < upperLimit){
  1970  054A  0837               	movf	(_intNTCV+3)^(0+128),w
  1971  054B  00F5               	movwf	___flge@ff1+3
  1972  054C  0836               	movf	(_intNTCV+2)^(0+128),w
  1973  054D  00F4               	movwf	___flge@ff1+2
  1974  054E  0835               	movf	(_intNTCV+1)^(0+128),w
  1975  054F  00F3               	movwf	___flge@ff1+1
  1976  0550  0834               	movf	_intNTCV^(0+128),w
  1977  0551  00F2               	movwf	___flge@ff1
  1978  0552  303F               	movlw	63
  1979  0553  00F9               	movwf	___flge@ff2+3
  1980  0554  305C               	movlw	92
  1981  0555  00F8               	movwf	___flge@ff2+2
  1982  0556  3028               	movlw	40
  1983  0557  00F7               	movwf	___flge@ff2+1
  1984  0558  30F6               	movlw	246
  1985  0559  00F6               	movwf	___flge@ff2
  1986  055A  3186  26D9  3185   	fcall	___flge
  1987  055D  1803               	btfsc	3,0
  1988  055E  2D68               	goto	l2287
  1989                           
  1990                           ;main.c: 368:             currentStatus = Error;
  1991  055F  3002               	movlw	2
  1992  0560  0140               	movlb	0	; select bank0
  1993  0561  00EB               	movwf	??_temperatureCheck
  1994  0562  086B               	movf	??_temperatureCheck,w
  1995  0563  00FA               	movwf	_currentStatus
  1996                           
  1997                           ;main.c: 369:             errReason = BoardHiTempErr;
  1998  0564  3003               	movlw	3
  1999  0565  00EB               	movwf	??_temperatureCheck
  2000  0566  086B               	movf	??_temperatureCheck,w
  2001  0567  00FB               	movwf	_errReason
  2002  0568                     l2287:	
  2003                           
  2004                           ;main.c: 371:         if( extNTCV < upperLimit) {
  2005  0568  0141               	movlb	1	; select bank1
  2006  0569  0833               	movf	(_extNTCV+3)^(0+128),w
  2007  056A  00F5               	movwf	___flge@ff1+3
  2008  056B  0832               	movf	(_extNTCV+2)^(0+128),w
  2009  056C  00F4               	movwf	___flge@ff1+2
  2010  056D  0831               	movf	(_extNTCV+1)^(0+128),w
  2011  056E  00F3               	movwf	___flge@ff1+1
  2012  056F  0830               	movf	_extNTCV^(0+128),w
  2013  0570  00F2               	movwf	___flge@ff1
  2014  0571  303F               	movlw	63
  2015  0572  00F9               	movwf	___flge@ff2+3
  2016  0573  305C               	movlw	92
  2017  0574  00F8               	movwf	___flge@ff2+2
  2018  0575  3028               	movlw	40
  2019  0576  00F7               	movwf	___flge@ff2+1
  2020  0577  30F6               	movlw	246
  2021  0578  00F6               	movwf	___flge@ff2
  2022  0579  3186  26D9  3185   	fcall	___flge
  2023  057C  1803               	btfsc	3,0
  2024  057D  0008               	return
  2025                           
  2026                           ;main.c: 372:             currentStatus = Error;
  2027  057E  3002               	movlw	2
  2028  057F  0140               	movlb	0	; select bank0
  2029  0580  00EB               	movwf	??_temperatureCheck
  2030  0581  086B               	movf	??_temperatureCheck,w
  2031  0582  00FA               	movwf	_currentStatus
  2032                           
  2033                           ;main.c: 373:             errReason = LEDHiTempErr;
  2034  0583  3002               	movlw	2
  2035  0584  00EB               	movwf	??_temperatureCheck
  2036  0585  086B               	movf	??_temperatureCheck,w
  2037  0586  00FB               	movwf	_errReason
  2038  0587  0008               	return
  2039  0588                     l2291:	
  2040  0588  3002               	movlw	2
  2041  0589  067A               	xorwf	_currentStatus,w
  2042  058A  1D03               	btfss	3,2
  2043  058B  0008               	return
  2044                           
  2045                           ;main.c: 377:         if(((intNTCV > restoreLevel) && (errReason == BoardHiTempErr)) || 
      +                          ((extNTCV > restoreLevel) && (errReason == LEDHiTempErr))){
  2046  058C  303F               	movlw	63
  2047  058D  00F5               	movwf	___flge@ff1+3
  2048  058E  3083               	movlw	131
  2049  058F  00F4               	movwf	___flge@ff1+2
  2050  0590  30D7               	movlw	215
  2051  0591  00F3               	movwf	___flge@ff1+1
  2052  0592  300A               	movlw	10
  2053  0593  00F2               	movwf	___flge@ff1
  2054  0594  0837               	movf	(_intNTCV+3)^(0+128),w
  2055  0595  00F9               	movwf	___flge@ff2+3
  2056  0596  0836               	movf	(_intNTCV+2)^(0+128),w
  2057  0597  00F8               	movwf	___flge@ff2+2
  2058  0598  0835               	movf	(_intNTCV+1)^(0+128),w
  2059  0599  00F7               	movwf	___flge@ff2+1
  2060  059A  0834               	movf	_intNTCV^(0+128),w
  2061  059B  00F6               	movwf	___flge@ff2
  2062  059C  3186  26D9  3185   	fcall	___flge
  2063  059F  1803               	btfsc	3,0
  2064  05A0  2DA5               	goto	l2297
  2065  05A1  3003               	movlw	3
  2066  05A2  067B               	xorwf	_errReason,w
  2067  05A3  1903               	btfsc	3,2
  2068  05A4  2DBF               	goto	l2301
  2069  05A5                     l2297:	
  2070  05A5  303F               	movlw	63
  2071  05A6  00F5               	movwf	___flge@ff1+3
  2072  05A7  3083               	movlw	131
  2073  05A8  00F4               	movwf	___flge@ff1+2
  2074  05A9  30D7               	movlw	215
  2075  05AA  00F3               	movwf	___flge@ff1+1
  2076  05AB  300A               	movlw	10
  2077  05AC  00F2               	movwf	___flge@ff1
  2078  05AD  0141               	movlb	1	; select bank1
  2079  05AE  0833               	movf	(_extNTCV+3)^(0+128),w
  2080  05AF  00F9               	movwf	___flge@ff2+3
  2081  05B0  0832               	movf	(_extNTCV+2)^(0+128),w
  2082  05B1  00F8               	movwf	___flge@ff2+2
  2083  05B2  0831               	movf	(_extNTCV+1)^(0+128),w
  2084  05B3  00F7               	movwf	___flge@ff2+1
  2085  05B4  0830               	movf	_extNTCV^(0+128),w
  2086  05B5  00F6               	movwf	___flge@ff2
  2087  05B6  3186  26D9  3185   	fcall	___flge
  2088  05B9  1803               	btfsc	3,0
  2089  05BA  0008               	return
  2090  05BB  3002               	movlw	2
  2091  05BC  067B               	xorwf	_errReason,w
  2092  05BD  1D03               	btfss	3,2
  2093  05BE  0008               	return
  2094  05BF                     l2301:	
  2095                           
  2096                           ;main.c: 378:             currentStatus = Normal;
  2097  05BF  01FA               	clrf	_currentStatus
  2098                           
  2099                           ;main.c: 379:             errReason = NoErr;
  2100  05C0  01FB               	clrf	_errReason
  2101  05C1  0008               	return
  2102  05C2                     __end_of_temperatureCheck:	
  2103                           
  2104                           	psect	text8
  2105  043B                     __ptext8:	
  2106 ;; *************** function _getNTCV *****************
  2107 ;; Defined at:
  2108 ;;		line 256 in file "main.c"
  2109 ;; Parameters:    Size  Location     Type
  2110 ;;  channel         2   58[BANK0 ] unsigned int 
  2111 ;; Auto vars:     Size  Location     Type
  2112 ;;  voltage         4   71[BANK0 ] float 
  2113 ;;  VDD             4   67[BANK0 ] float 
  2114 ;; Return value:  Size  Location     Type
  2115 ;;                  4   58[BANK0 ] float 
  2116 ;; Registers used:
  2117 ;;		wreg, status,2, status,0, pclath, cstack
  2118 ;; Tracked objects:
  2119 ;;		On entry : 0/0
  2120 ;;		On exit  : 0/0
  2121 ;;		Unchanged: 0/0
  2122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2123 ;;      Params:         0       4       0       0       0       0       0       0
  2124 ;;      Locals:         0      12       0       0       0       0       0       0
  2125 ;;      Temps:          0       1       0       0       0       0       0       0
  2126 ;;      Totals:         0      17       0       0       0       0       0       0
  2127 ;;Total ram usage:       17 bytes
  2128 ;; Hardware stack levels used:    1
  2129 ;; Hardware stack levels required when called:    3
  2130 ;; This function calls:
  2131 ;;		___fldiv
  2132 ;;		___flmul
  2133 ;;		___xxtofl
  2134 ;; This function is called by:
  2135 ;;		_temperatureCheck
  2136 ;;		_FANFaultCheck
  2137 ;; This function uses a non-reentrant model
  2138 ;;
  2139                           
  2140                           
  2141                           ;psect for function _getNTCV
  2142  043B                     _getNTCV:	
  2143                           
  2144                           ;main.c: 260:     float voltage = 0;
  2145                           
  2146                           ;incstack = 0
  2147                           ; Regs used in _getNTCV: [wreg+status,2+status,0+pclath+cstack]
  2148  043B  3000               	movlw	0
  2149  043C  0140               	movlb	0	; select bank0
  2150  043D  00EA               	movwf	getNTCV@voltage+3
  2151  043E  3000               	movlw	0
  2152  043F  00E9               	movwf	getNTCV@voltage+2
  2153  0440  3000               	movlw	0
  2154  0441  00E8               	movwf	getNTCV@voltage+1
  2155  0442  3000               	movlw	0
  2156  0443  00E7               	movwf	getNTCV@voltage
  2157                           
  2158                           ;main.c: 262:     ADCON0bits.ADON = 1;
  2159  0444  0141               	movlb	1	; select bank1
  2160  0445  141D               	bsf	29,0	;volatile
  2161                           
  2162                           ;main.c: 266:         ADCON0bits.CHS = 0x3F;
  2163  0446  30FC               	movlw	252
  2164  0447  049D               	iorwf	29,f	;volatile
  2165                           
  2166                           ;main.c: 267:         _delay((unsigned long)((100)*(32000000/4000000.0)));
  2167  0448  30A0               	movlw	160
  2168  0449                     u2977:	
  2169  0449  3200               	nop2
  2170  044A  0B89               	decfsz	9,f
  2171  044B  2C49               	goto	u2977
  2172                           
  2173                           ;main.c: 268:         ADCON0bits.GO = 1;
  2174  044C  0141               	movlb	1	; select bank1
  2175  044D  149D               	bsf	29,1	;volatile
  2176  044E                     l2259:	
  2177                           ;main.c: 269:         while(ADCON0bits.GOnDONE){
  2178                           
  2179                           
  2180                           ;main.c: 269:         while(ADCON0bits.GOnDONE){
  2181  044E  0141               	movlb	1	; select bank1
  2182  044F  1C9D               	btfss	29,1	;volatile
  2183  0450  2C56               	goto	l2261
  2184                           
  2185                           ;main.c: 270:             _delay((unsigned long)((8)*(32000000/4000000.0)));
  2186  0451  3015               	movlw	21
  2187  0452                     u2987:	
  2188  0452  0B89               	decfsz	9,f
  2189  0453  2C52               	goto	u2987
  2190  0454  0000               	nop
  2191  0455  2C4E               	goto	l2259
  2192  0456                     l2261:	
  2193                           
  2194                           ;main.c: 272:         VDD = ((float)1024/(float)ADRES)*DIA_Table.FVRA4X;
  2195  0456  0828               	movf	(_DIA_Table^(0+128)+8),w
  2196  0457  00F2               	movwf	___xxtofl@val
  2197  0458  0829               	movf	((_DIA_Table+1)^(0+128)+8),w
  2198  0459  00F3               	movwf	___xxtofl@val+1
  2199  045A  01F4               	clrf	___xxtofl@val+2
  2200  045B  01F5               	clrf	___xxtofl@val+3
  2201  045C  3000               	movlw	0
  2202  045D  3185  25C2  3184   	fcall	___xxtofl
  2203  0460  0875               	movf	?___xxtofl+3,w
  2204  0461  0140               	movlb	0	; select bank0
  2205  0462  00C3               	movwf	___flmul@b+3
  2206  0463  0874               	movf	?___xxtofl+2,w
  2207  0464  00C2               	movwf	___flmul@b+2
  2208  0465  0873               	movf	?___xxtofl+1,w
  2209  0466  00C1               	movwf	___flmul@b+1
  2210  0467  0872               	movf	?___xxtofl,w
  2211  0468  00C0               	movwf	___flmul@b
  2212  0469  0141               	movlb	1	; select bank1
  2213  046A  081B               	movf	27,w	;volatile
  2214  046B  00F2               	movwf	___xxtofl@val
  2215  046C  081C               	movf	28,w	;volatile
  2216  046D  00F3               	movwf	___xxtofl@val+1
  2217  046E  01F4               	clrf	___xxtofl@val+2
  2218  046F  01F5               	clrf	___xxtofl@val+3
  2219  0470  3000               	movlw	0
  2220  0471  3185  25C2  3184   	fcall	___xxtofl
  2221  0474  0875               	movf	?___xxtofl+3,w
  2222  0475  0140               	movlb	0	; select bank0
  2223  0476  00A9               	movwf	___fldiv@a+3
  2224  0477  0874               	movf	?___xxtofl+2,w
  2225  0478  00A8               	movwf	___fldiv@a+2
  2226  0479  0873               	movf	?___xxtofl+1,w
  2227  047A  00A7               	movwf	___fldiv@a+1
  2228  047B  0872               	movf	?___xxtofl,w
  2229  047C  00A6               	movwf	___fldiv@a
  2230  047D  3044               	movlw	68
  2231  047E  00AD               	movwf	___fldiv@b+3
  2232  047F  3080               	movlw	128
  2233  0480  00AC               	movwf	___fldiv@b+2
  2234  0481  3000               	movlw	0
  2235  0482  00AB               	movwf	___fldiv@b+1
  2236  0483  3000               	movlw	0
  2237  0484  00AA               	movwf	___fldiv@b
  2238  0485  3182  22C1  3184   	fcall	___fldiv
  2239  0488  0140               	movlb	0	; select bank0
  2240  0489  0829               	movf	?___fldiv+3,w
  2241  048A  00C7               	movwf	___flmul@a+3
  2242  048B  0828               	movf	?___fldiv+2,w
  2243  048C  00C6               	movwf	___flmul@a+2
  2244  048D  0827               	movf	?___fldiv+1,w
  2245  048E  00C5               	movwf	___flmul@a+1
  2246  048F  0826               	movf	?___fldiv,w
  2247  0490  00C4               	movwf	___flmul@a
  2248  0491  3180  2095  3184   	fcall	___flmul
  2249  0494  0140               	movlb	0	; select bank0
  2250  0495  0843               	movf	?___flmul+3,w
  2251  0496  00E6               	movwf	getNTCV@VDD+3
  2252  0497  0842               	movf	?___flmul+2,w
  2253  0498  00E5               	movwf	getNTCV@VDD+2
  2254  0499  0841               	movf	?___flmul+1,w
  2255  049A  00E4               	movwf	getNTCV@VDD+1
  2256  049B  0840               	movf	?___flmul,w
  2257  049C  00E3               	movwf	getNTCV@VDD
  2258                           
  2259                           ;main.c: 275:         ADCON0bits.CHS = channel;
  2260  049D  085A               	movf	getNTCV@channel,w
  2261  049E  00DE               	movwf	??_getNTCV
  2262  049F  0DDE               	rlf	??_getNTCV,f
  2263  04A0  0DDE               	rlf	??_getNTCV,f
  2264  04A1  0141               	movlb	1	; select bank1
  2265  04A2  081D               	movf	29,w	;volatile
  2266  04A3  0140               	movlb	0	; select bank0
  2267  04A4  065E               	xorwf	??_getNTCV,w
  2268  04A5  3903               	andlw	-253
  2269  04A6  065E               	xorwf	??_getNTCV,w
  2270  04A7  0141               	movlb	1	; select bank1
  2271  04A8  009D               	movwf	29	;volatile
  2272                           
  2273                           ;main.c: 277:         _delay((unsigned long)((100)*(32000000/4000000.0)));
  2274  04A9  30A0               	movlw	160
  2275  04AA                     u2997:	
  2276  04AA  3200               	nop2
  2277  04AB  0B89               	decfsz	9,f
  2278  04AC  2CAA               	goto	u2997
  2279                           
  2280                           ;main.c: 278:         ADCON0bits.GO = 1;
  2281  04AD  0141               	movlb	1	; select bank1
  2282  04AE  149D               	bsf	29,1	;volatile
  2283  04AF                     l2271:	
  2284                           ;main.c: 279:         while(ADCON0bits.GOnDONE){
  2285                           
  2286                           
  2287                           ;main.c: 279:         while(ADCON0bits.GOnDONE){
  2288  04AF  0141               	movlb	1	; select bank1
  2289  04B0  1C9D               	btfss	29,1	;volatile
  2290  04B1  2CB7               	goto	l2273
  2291                           
  2292                           ;main.c: 280:             _delay((unsigned long)((8)*(32000000/4000000.0)));
  2293  04B2  3015               	movlw	21
  2294  04B3                     u3007:	
  2295  04B3  0B89               	decfsz	9,f
  2296  04B4  2CB3               	goto	u3007
  2297  04B5  0000               	nop
  2298  04B6  2CAF               	goto	l2271
  2299  04B7                     l2273:	
  2300                           
  2301                           ;main.c: 282:         voltage = ((float)ADRES/(float)1023)*VDD*0.001;
  2302  04B7  0140               	movlb	0	; select bank0
  2303  04B8  0866               	movf	getNTCV@VDD+3,w
  2304  04B9  00C3               	movwf	___flmul@b+3
  2305  04BA  0865               	movf	getNTCV@VDD+2,w
  2306  04BB  00C2               	movwf	___flmul@b+2
  2307  04BC  0864               	movf	getNTCV@VDD+1,w
  2308  04BD  00C1               	movwf	___flmul@b+1
  2309  04BE  0863               	movf	getNTCV@VDD,w
  2310  04BF  00C0               	movwf	___flmul@b
  2311  04C0  3044               	movlw	68
  2312  04C1  00A9               	movwf	___fldiv@a+3
  2313  04C2  307F               	movlw	127
  2314  04C3  00A8               	movwf	___fldiv@a+2
  2315  04C4  30C0               	movlw	192
  2316  04C5  00A7               	movwf	___fldiv@a+1
  2317  04C6  3000               	movlw	0
  2318  04C7  00A6               	movwf	___fldiv@a
  2319  04C8  0141               	movlb	1	; select bank1
  2320  04C9  081B               	movf	27,w	;volatile
  2321  04CA  00F2               	movwf	___xxtofl@val
  2322  04CB  081C               	movf	28,w	;volatile
  2323  04CC  00F3               	movwf	___xxtofl@val+1
  2324  04CD  01F4               	clrf	___xxtofl@val+2
  2325  04CE  01F5               	clrf	___xxtofl@val+3
  2326  04CF  3000               	movlw	0
  2327  04D0  3185  25C2  3184   	fcall	___xxtofl
  2328  04D3  0875               	movf	?___xxtofl+3,w
  2329  04D4  0140               	movlb	0	; select bank0
  2330  04D5  00AD               	movwf	___fldiv@b+3
  2331  04D6  0874               	movf	?___xxtofl+2,w
  2332  04D7  00AC               	movwf	___fldiv@b+2
  2333  04D8  0873               	movf	?___xxtofl+1,w
  2334  04D9  00AB               	movwf	___fldiv@b+1
  2335  04DA  0872               	movf	?___xxtofl,w
  2336  04DB  00AA               	movwf	___fldiv@b
  2337  04DC  3182  22C1  3184   	fcall	___fldiv
  2338  04DF  0140               	movlb	0	; select bank0
  2339  04E0  0829               	movf	?___fldiv+3,w
  2340  04E1  00C7               	movwf	___flmul@a+3
  2341  04E2  0828               	movf	?___fldiv+2,w
  2342  04E3  00C6               	movwf	___flmul@a+2
  2343  04E4  0827               	movf	?___fldiv+1,w
  2344  04E5  00C5               	movwf	___flmul@a+1
  2345  04E6  0826               	movf	?___fldiv,w
  2346  04E7  00C4               	movwf	___flmul@a
  2347  04E8  3180  2095  3184   	fcall	___flmul
  2348  04EB  0140               	movlb	0	; select bank0
  2349  04EC  0843               	movf	?___flmul+3,w
  2350  04ED  00E2               	movwf	_getNTCV$1091+3
  2351  04EE  0842               	movf	?___flmul+2,w
  2352  04EF  00E1               	movwf	_getNTCV$1091+2
  2353  04F0  0841               	movf	?___flmul+1,w
  2354  04F1  00E0               	movwf	_getNTCV$1091+1
  2355  04F2  0840               	movf	?___flmul,w
  2356  04F3  00DF               	movwf	_getNTCV$1091
  2357                           
  2358                           ;main.c: 282:         voltage = ((float)ADRES/(float)1023)*VDD*0.001;
  2359  04F4  303A               	movlw	58
  2360  04F5  00C3               	movwf	___flmul@b+3
  2361  04F6  3083               	movlw	131
  2362  04F7  00C2               	movwf	___flmul@b+2
  2363  04F8  3012               	movlw	18
  2364  04F9  00C1               	movwf	___flmul@b+1
  2365  04FA  306F               	movlw	111
  2366  04FB  00C0               	movwf	___flmul@b
  2367  04FC  0862               	movf	_getNTCV$1091+3,w
  2368  04FD  00C7               	movwf	___flmul@a+3
  2369  04FE  0861               	movf	_getNTCV$1091+2,w
  2370  04FF  00C6               	movwf	___flmul@a+2
  2371  0500  0860               	movf	_getNTCV$1091+1,w
  2372  0501  00C5               	movwf	___flmul@a+1
  2373  0502  085F               	movf	_getNTCV$1091,w
  2374  0503  00C4               	movwf	___flmul@a
  2375  0504  3180  2095         	fcall	___flmul
  2376  0506  0140               	movlb	0	; select bank0
  2377  0507  0843               	movf	?___flmul+3,w
  2378  0508  00EA               	movwf	getNTCV@voltage+3
  2379  0509  0842               	movf	?___flmul+2,w
  2380  050A  00E9               	movwf	getNTCV@voltage+2
  2381  050B  0841               	movf	?___flmul+1,w
  2382  050C  00E8               	movwf	getNTCV@voltage+1
  2383  050D  0840               	movf	?___flmul,w
  2384  050E  00E7               	movwf	getNTCV@voltage
  2385                           
  2386                           ;main.c: 284:     return voltage;
  2387  050F  086A               	movf	getNTCV@voltage+3,w
  2388  0510  00DD               	movwf	?_getNTCV+3
  2389  0511  0869               	movf	getNTCV@voltage+2,w
  2390  0512  00DC               	movwf	?_getNTCV+2
  2391  0513  0868               	movf	getNTCV@voltage+1,w
  2392  0514  00DB               	movwf	?_getNTCV+1
  2393  0515  0867               	movf	getNTCV@voltage,w
  2394  0516  00DA               	movwf	?_getNTCV
  2395  0517  0008               	return
  2396  0518                     __end_of_getNTCV:	
  2397                           
  2398                           	psect	text9
  2399  05C2                     __ptext9:	
  2400 ;; *************** function ___xxtofl *****************
  2401 ;; Defined at:
  2402 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  2403 ;; Parameters:    Size  Location     Type
  2404 ;;  sign            1    wreg     unsigned char 
  2405 ;;  val             4    2[COMMON] long 
  2406 ;; Auto vars:     Size  Location     Type
  2407 ;;  sign            1    0[BANK0 ] unsigned char 
  2408 ;;  arg             4    2[BANK0 ] unsigned long 
  2409 ;;  exp             1    1[BANK0 ] unsigned char 
  2410 ;; Return value:  Size  Location     Type
  2411 ;;                  4    2[COMMON] unsigned char 
  2412 ;; Registers used:
  2413 ;;		wreg, status,2, status,0
  2414 ;; Tracked objects:
  2415 ;;		On entry : 0/0
  2416 ;;		On exit  : 0/0
  2417 ;;		Unchanged: 0/0
  2418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2419 ;;      Params:         4       0       0       0       0       0       0       0
  2420 ;;      Locals:         0       6       0       0       0       0       0       0
  2421 ;;      Temps:          4       0       0       0       0       0       0       0
  2422 ;;      Totals:         8       6       0       0       0       0       0       0
  2423 ;;Total ram usage:       14 bytes
  2424 ;; Hardware stack levels used:    1
  2425 ;; Hardware stack levels required when called:    1
  2426 ;; This function calls:
  2427 ;;		Nothing
  2428 ;; This function is called by:
  2429 ;;		_getNTCV
  2430 ;; This function uses a non-reentrant model
  2431 ;;
  2432                           
  2433                           
  2434                           ;psect for function ___xxtofl
  2435  05C2                     ___xxtofl:	
  2436                           
  2437                           ;incstack = 0
  2438                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2439                           ;___xxtofl@sign stored from wreg
  2440  05C2  0140               	movlb	0	; select bank0
  2441  05C3  00A0               	movwf	___xxtofl@sign
  2442  05C4  0820               	movf	___xxtofl@sign,w
  2443  05C5  1D03               	btfss	3,2
  2444  05C6  1FF5               	btfss	___xxtofl@val+3,7
  2445  05C7  2DD8               	goto	l1711
  2446  05C8  0972               	comf	___xxtofl@val,w
  2447  05C9  00A2               	movwf	___xxtofl@arg
  2448  05CA  0973               	comf	___xxtofl@val+1,w
  2449  05CB  00A3               	movwf	___xxtofl@arg+1
  2450  05CC  0974               	comf	___xxtofl@val+2,w
  2451  05CD  00A4               	movwf	___xxtofl@arg+2
  2452  05CE  0975               	comf	___xxtofl@val+3,w
  2453  05CF  00A5               	movwf	___xxtofl@arg+3
  2454  05D0  0AA2               	incf	___xxtofl@arg,f
  2455  05D1  1903               	skipnz
  2456  05D2  0AA3               	incf	___xxtofl@arg+1,f
  2457  05D3  1903               	skipnz
  2458  05D4  0AA4               	incf	___xxtofl@arg+2,f
  2459  05D5  1903               	skipnz
  2460  05D6  0AA5               	incf	___xxtofl@arg+3,f
  2461  05D7  2DE0               	goto	l710
  2462  05D8                     l1711:	
  2463  05D8  0875               	movf	___xxtofl@val+3,w
  2464  05D9  00A5               	movwf	___xxtofl@arg+3
  2465  05DA  0874               	movf	___xxtofl@val+2,w
  2466  05DB  00A4               	movwf	___xxtofl@arg+2
  2467  05DC  0873               	movf	___xxtofl@val+1,w
  2468  05DD  00A3               	movwf	___xxtofl@arg+1
  2469  05DE  0872               	movf	___xxtofl@val,w
  2470  05DF  00A2               	movwf	___xxtofl@arg
  2471  05E0                     l710:	
  2472  05E0  0875               	movf	___xxtofl@val+3,w
  2473  05E1  0474               	iorwf	___xxtofl@val+2,w
  2474  05E2  0473               	iorwf	___xxtofl@val+1,w
  2475  05E3  0472               	iorwf	___xxtofl@val,w
  2476  05E4  1D03               	skipz
  2477  05E5  2DEF               	goto	l1717
  2478  05E6  3000               	movlw	0
  2479  05E7  00F5               	movwf	?___xxtofl+3
  2480  05E8  3000               	movlw	0
  2481  05E9  00F4               	movwf	?___xxtofl+2
  2482  05EA  3000               	movlw	0
  2483  05EB  00F3               	movwf	?___xxtofl+1
  2484  05EC  3000               	movlw	0
  2485  05ED  00F2               	movwf	?___xxtofl
  2486  05EE  0008               	return
  2487  05EF                     l1717:	
  2488  05EF  3096               	movlw	150
  2489  05F0  00F6               	movwf	??___xxtofl
  2490  05F1  0876               	movf	??___xxtofl,w
  2491  05F2  00A1               	movwf	___xxtofl@exp
  2492  05F3                     l1721:	
  2493  05F3  30FE               	movlw	254
  2494  05F4  0525               	andwf	___xxtofl@arg+3,w
  2495  05F5  1903               	btfsc	3,2
  2496  05F6  2E16               	goto	l716
  2497  05F7  3001               	movlw	1
  2498  05F8  00F6               	movwf	??___xxtofl
  2499  05F9  0876               	movf	??___xxtofl,w
  2500  05FA  07A1               	addwf	___xxtofl@exp,f
  2501  05FB  3001               	movlw	1
  2502  05FC                     u1855:	
  2503  05FC  36A5               	lsrf	___xxtofl@arg+3,f
  2504  05FD  0CA4               	rrf	___xxtofl@arg+2,f
  2505  05FE  0CA3               	rrf	___xxtofl@arg+1,f
  2506  05FF  0CA2               	rrf	___xxtofl@arg,f
  2507  0600  0B89               	decfsz	9,f
  2508  0601  2DFC               	goto	u1855
  2509  0602  2DF3               	goto	l1721
  2510  0603                     l1723:	
  2511  0603  3001               	movlw	1
  2512  0604  00F6               	movwf	??___xxtofl
  2513  0605  0876               	movf	??___xxtofl,w
  2514  0606  07A1               	addwf	___xxtofl@exp,f
  2515  0607  3001               	movlw	1
  2516  0608  07A2               	addwf	___xxtofl@arg,f
  2517  0609  3000               	movlw	0
  2518  060A  3DA3               	addwfc	___xxtofl@arg+1,f
  2519  060B  3000               	movlw	0
  2520  060C  3DA4               	addwfc	___xxtofl@arg+2,f
  2521  060D  3000               	movlw	0
  2522  060E  3DA5               	addwfc	___xxtofl@arg+3,f
  2523  060F  3001               	movlw	1
  2524  0610                     u1875:	
  2525  0610  36A5               	lsrf	___xxtofl@arg+3,f
  2526  0611  0CA4               	rrf	___xxtofl@arg+2,f
  2527  0612  0CA3               	rrf	___xxtofl@arg+1,f
  2528  0613  0CA2               	rrf	___xxtofl@arg,f
  2529  0614  0B89               	decfsz	9,f
  2530  0615  2E10               	goto	u1875
  2531  0616                     l716:	
  2532  0616  30FF               	movlw	255
  2533  0617  0525               	andwf	___xxtofl@arg+3,w
  2534  0618  1903               	btfsc	3,2
  2535  0619  2E28               	goto	l1731
  2536  061A  2E03               	goto	l1723
  2537  061B                     l1733:	
  2538  061B  3002               	movlw	2
  2539  061C  0221               	subwf	___xxtofl@exp,w
  2540  061D  1C03               	btfss	3,0
  2541  061E  2E2A               	goto	l723
  2542  061F  3001               	movlw	1
  2543  0620  02A1               	subwf	___xxtofl@exp,f
  2544  0621  3001               	movlw	1
  2545  0622                     u1895:	
  2546  0622  35A2               	lslf	___xxtofl@arg,f
  2547  0623  0DA3               	rlf	___xxtofl@arg+1,f
  2548  0624  0DA4               	rlf	___xxtofl@arg+2,f
  2549  0625  0DA5               	rlf	___xxtofl@arg+3,f
  2550  0626  0B89               	decfsz	9,f
  2551  0627  2E22               	goto	u1895
  2552  0628                     l1731:	
  2553  0628  1FA4               	btfss	___xxtofl@arg+2,7
  2554  0629  2E1B               	goto	l1733
  2555  062A                     l723:	
  2556  062A  1821               	btfsc	___xxtofl@exp,0
  2557  062B  2E34               	goto	l724
  2558  062C  30FF               	movlw	255
  2559  062D  05A2               	andwf	___xxtofl@arg,f
  2560  062E  30FF               	movlw	255
  2561  062F  05A3               	andwf	___xxtofl@arg+1,f
  2562  0630  307F               	movlw	127
  2563  0631  05A4               	andwf	___xxtofl@arg+2,f
  2564  0632  30FF               	movlw	255
  2565  0633  05A5               	andwf	___xxtofl@arg+3,f
  2566  0634                     l724:	
  2567  0634  1003               	clrc
  2568  0635  0CA1               	rrf	___xxtofl@exp,f
  2569  0636  0821               	movf	___xxtofl@exp,w
  2570  0637  00F6               	movwf	??___xxtofl
  2571  0638  01F7               	clrf	??___xxtofl+1
  2572  0639  01F8               	clrf	??___xxtofl+2
  2573  063A  01F9               	clrf	??___xxtofl+3
  2574  063B  3018               	movlw	24
  2575  063C                     u1935:	
  2576  063C  35F6               	lslf	??___xxtofl,f
  2577  063D  0DF7               	rlf	??___xxtofl+1,f
  2578  063E  0DF8               	rlf	??___xxtofl+2,f
  2579  063F  0DF9               	rlf	??___xxtofl+3,f
  2580  0640  0B89               	decfsz	9,f
  2581  0641  2E3C               	goto	u1935
  2582  0642  0876               	movf	??___xxtofl,w
  2583  0643  04A2               	iorwf	___xxtofl@arg,f
  2584  0644  0877               	movf	??___xxtofl+1,w
  2585  0645  04A3               	iorwf	___xxtofl@arg+1,f
  2586  0646  0878               	movf	??___xxtofl+2,w
  2587  0647  04A4               	iorwf	___xxtofl@arg+2,f
  2588  0648  0879               	movf	??___xxtofl+3,w
  2589  0649  04A5               	iorwf	___xxtofl@arg+3,f
  2590  064A  0820               	movf	___xxtofl@sign,w
  2591  064B  1D03               	btfss	3,2
  2592  064C  1FF5               	btfss	___xxtofl@val+3,7
  2593  064D  2E4F               	goto	l1745
  2594  064E  17A5               	bsf	___xxtofl@arg+3,7
  2595  064F                     l1745:	
  2596  064F  0825               	movf	___xxtofl@arg+3,w
  2597  0650  00F5               	movwf	?___xxtofl+3
  2598  0651  0824               	movf	___xxtofl@arg+2,w
  2599  0652  00F4               	movwf	?___xxtofl+2
  2600  0653  0823               	movf	___xxtofl@arg+1,w
  2601  0654  00F3               	movwf	?___xxtofl+1
  2602  0655  0822               	movf	___xxtofl@arg,w
  2603  0656  00F2               	movwf	?___xxtofl
  2604  0657  0008               	return
  2605  0658                     __end_of___xxtofl:	
  2606                           
  2607                           	psect	text10
  2608  0095                     __ptext10:	
  2609 ;; *************** function ___flmul *****************
  2610 ;; Defined at:
  2611 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  2612 ;; Parameters:    Size  Location     Type
  2613 ;;  b               4   32[BANK0 ] unsigned char 
  2614 ;;  a               4   36[BANK0 ] unsigned char 
  2615 ;; Auto vars:     Size  Location     Type
  2616 ;;  prod            4   52[BANK0 ] struct .
  2617 ;;  grs             4   47[BANK0 ] unsigned long 
  2618 ;;  temp            2   56[BANK0 ] struct .
  2619 ;;  bexp            1   51[BANK0 ] unsigned char 
  2620 ;;  aexp            1   46[BANK0 ] unsigned char 
  2621 ;;  sign            1   45[BANK0 ] unsigned char 
  2622 ;; Return value:  Size  Location     Type
  2623 ;;                  4   32[BANK0 ] unsigned char 
  2624 ;; Registers used:
  2625 ;;		wreg, status,2, status,0, pclath, cstack
  2626 ;; Tracked objects:
  2627 ;;		On entry : 0/0
  2628 ;;		On exit  : 0/0
  2629 ;;		Unchanged: 0/0
  2630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2631 ;;      Params:         0       8       0       0       0       0       0       0
  2632 ;;      Locals:         0      13       0       0       0       0       0       0
  2633 ;;      Temps:          0       5       0       0       0       0       0       0
  2634 ;;      Totals:         0      26       0       0       0       0       0       0
  2635 ;;Total ram usage:       26 bytes
  2636 ;; Hardware stack levels used:    1
  2637 ;; Hardware stack levels required when called:    2
  2638 ;; This function calls:
  2639 ;;		__Umul8_16
  2640 ;; This function is called by:
  2641 ;;		_getNTCV
  2642 ;; This function uses a non-reentrant model
  2643 ;;
  2644                           
  2645                           
  2646                           ;psect for function ___flmul
  2647  0095                     ___flmul:	
  2648                           
  2649                           ;incstack = 0
  2650                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  2651  0095  0140               	movlb	0	; select bank0
  2652  0096  0843               	movf	___flmul@b+3,w
  2653  0097  3980               	andlw	128
  2654  0098  00C8               	movwf	??___flmul
  2655  0099  0848               	movf	??___flmul,w
  2656  009A  00CD               	movwf	___flmul@sign
  2657  009B  3543               	lslf	___flmul@b+3,w
  2658  009C  00C8               	movwf	??___flmul
  2659  009D  0848               	movf	??___flmul,w
  2660  009E  00D3               	movwf	___flmul@bexp
  2661  009F  1BC2               	btfsc	___flmul@b+2,7
  2662  00A0  1453               	bsf	___flmul@bexp,0
  2663  00A1  0853               	movf	___flmul@bexp,w
  2664  00A2  1903               	btfsc	3,2
  2665  00A3  28B1               	goto	l2123
  2666  00A4  0A53               	incf	___flmul@bexp,w
  2667  00A5  1D03               	btfss	3,2
  2668  00A6  28AF               	goto	l2121
  2669  00A7  3000               	movlw	0
  2670  00A8  00C3               	movwf	___flmul@b+3
  2671  00A9  3000               	movlw	0
  2672  00AA  00C2               	movwf	___flmul@b+2
  2673  00AB  3000               	movlw	0
  2674  00AC  00C1               	movwf	___flmul@b+1
  2675  00AD  3000               	movlw	0
  2676  00AE  00C0               	movwf	___flmul@b
  2677  00AF                     l2121:	
  2678  00AF  17C2               	bsf	___flmul@b+2,7
  2679  00B0  28B9               	goto	l2125
  2680  00B1                     l2123:	
  2681  00B1  3000               	movlw	0
  2682  00B2  00C3               	movwf	___flmul@b+3
  2683  00B3  3000               	movlw	0
  2684  00B4  00C2               	movwf	___flmul@b+2
  2685  00B5  3000               	movlw	0
  2686  00B6  00C1               	movwf	___flmul@b+1
  2687  00B7  3000               	movlw	0
  2688  00B8  00C0               	movwf	___flmul@b
  2689  00B9                     l2125:	
  2690  00B9  0847               	movf	___flmul@a+3,w
  2691  00BA  3980               	andlw	128
  2692  00BB  00C8               	movwf	??___flmul
  2693  00BC  0848               	movf	??___flmul,w
  2694  00BD  06CD               	xorwf	___flmul@sign,f
  2695  00BE  3547               	lslf	___flmul@a+3,w
  2696  00BF  00C8               	movwf	??___flmul
  2697  00C0  0848               	movf	??___flmul,w
  2698  00C1  00CE               	movwf	___flmul@aexp
  2699  00C2  1BC6               	btfsc	___flmul@a+2,7
  2700  00C3  144E               	bsf	___flmul@aexp,0
  2701  00C4  084E               	movf	___flmul@aexp,w
  2702  00C5  1903               	btfsc	3,2
  2703  00C6  28D4               	goto	l2141
  2704  00C7  0A4E               	incf	___flmul@aexp,w
  2705  00C8  1D03               	btfss	3,2
  2706  00C9  28D2               	goto	l2139
  2707  00CA  3000               	movlw	0
  2708  00CB  00C7               	movwf	___flmul@a+3
  2709  00CC  3000               	movlw	0
  2710  00CD  00C6               	movwf	___flmul@a+2
  2711  00CE  3000               	movlw	0
  2712  00CF  00C5               	movwf	___flmul@a+1
  2713  00D0  3000               	movlw	0
  2714  00D1  00C4               	movwf	___flmul@a
  2715  00D2                     l2139:	
  2716  00D2  17C6               	bsf	___flmul@a+2,7
  2717  00D3  28DC               	goto	l2143
  2718  00D4                     l2141:	
  2719  00D4  3000               	movlw	0
  2720  00D5  00C7               	movwf	___flmul@a+3
  2721  00D6  3000               	movlw	0
  2722  00D7  00C6               	movwf	___flmul@a+2
  2723  00D8  3000               	movlw	0
  2724  00D9  00C5               	movwf	___flmul@a+1
  2725  00DA  3000               	movlw	0
  2726  00DB  00C4               	movwf	___flmul@a
  2727  00DC                     l2143:	
  2728  00DC  084E               	movf	___flmul@aexp,w
  2729  00DD  1D03               	btfss	3,2
  2730  00DE  0853               	movf	___flmul@bexp,w
  2731  00DF  1D03               	btfss	3,2
  2732  00E0  28EA               	goto	l2151
  2733  00E1  3000               	movlw	0
  2734  00E2  00C3               	movwf	?___flmul+3
  2735  00E3  3000               	movlw	0
  2736  00E4  00C2               	movwf	?___flmul+2
  2737  00E5  3000               	movlw	0
  2738  00E6  00C1               	movwf	?___flmul+1
  2739  00E7  3000               	movlw	0
  2740  00E8  00C0               	movwf	?___flmul
  2741  00E9  0008               	return
  2742  00EA                     l2151:	
  2743  00EA  0840               	movf	___flmul@b,w
  2744  00EB  00C8               	movwf	??___flmul
  2745  00EC  0848               	movf	??___flmul,w
  2746  00ED  00F2               	movwf	__Umul8_16@multiplicand
  2747  00EE  0846               	movf	___flmul@a+2,w
  2748  00EF  318F  270D  3180   	fcall	__Umul8_16
  2749  00F2  0873               	movf	?__Umul8_16+1,w
  2750  00F3  0140               	movlb	0	; select bank0
  2751  00F4  00D9               	movwf	___flmul@temp+1
  2752  00F5  0872               	movf	?__Umul8_16,w
  2753  00F6  00D8               	movwf	___flmul@temp
  2754  00F7  0858               	movf	___flmul@temp,w
  2755  00F8  00C8               	movwf	??___flmul
  2756  00F9  01C9               	clrf	??___flmul+1
  2757  00FA  01CA               	clrf	??___flmul+2
  2758  00FB  01CB               	clrf	??___flmul+3
  2759  00FC  084B               	movf	??___flmul+3,w
  2760  00FD  00D2               	movwf	___flmul@grs+3
  2761  00FE  084A               	movf	??___flmul+2,w
  2762  00FF  00D1               	movwf	___flmul@grs+2
  2763  0100  0849               	movf	??___flmul+1,w
  2764  0101  00D0               	movwf	___flmul@grs+1
  2765  0102  0848               	movf	??___flmul,w
  2766  0103  00CF               	movwf	___flmul@grs
  2767  0104  0859               	movf	___flmul@temp+1,w
  2768  0105  00C8               	movwf	??___flmul
  2769  0106  01C9               	clrf	??___flmul+1
  2770  0107  01CA               	clrf	??___flmul+2
  2771  0108  01CB               	clrf	??___flmul+3
  2772  0109  084B               	movf	??___flmul+3,w
  2773  010A  00D7               	movwf	___flmul@prod+3
  2774  010B  084A               	movf	??___flmul+2,w
  2775  010C  00D6               	movwf	___flmul@prod+2
  2776  010D  0849               	movf	??___flmul+1,w
  2777  010E  00D5               	movwf	___flmul@prod+1
  2778  010F  0848               	movf	??___flmul,w
  2779  0110  00D4               	movwf	___flmul@prod
  2780  0111  0841               	movf	___flmul@b+1,w
  2781  0112  00C8               	movwf	??___flmul
  2782  0113  0848               	movf	??___flmul,w
  2783  0114  00F2               	movwf	__Umul8_16@multiplicand
  2784  0115  0845               	movf	___flmul@a+1,w
  2785  0116  318F  270D  3180   	fcall	__Umul8_16
  2786  0119  0873               	movf	?__Umul8_16+1,w
  2787  011A  0140               	movlb	0	; select bank0
  2788  011B  00D9               	movwf	___flmul@temp+1
  2789  011C  0872               	movf	?__Umul8_16,w
  2790  011D  00D8               	movwf	___flmul@temp
  2791  011E  0858               	movf	___flmul@temp,w
  2792  011F  00C8               	movwf	??___flmul
  2793  0120  01C9               	clrf	??___flmul+1
  2794  0121  01CA               	clrf	??___flmul+2
  2795  0122  01CB               	clrf	??___flmul+3
  2796  0123  0848               	movf	??___flmul,w
  2797  0124  07CF               	addwf	___flmul@grs,f
  2798  0125  0849               	movf	??___flmul+1,w
  2799  0126  3DD0               	addwfc	___flmul@grs+1,f
  2800  0127  084A               	movf	??___flmul+2,w
  2801  0128  3DD1               	addwfc	___flmul@grs+2,f
  2802  0129  084B               	movf	??___flmul+3,w
  2803  012A  3DD2               	addwfc	___flmul@grs+3,f
  2804  012B  0859               	movf	___flmul@temp+1,w
  2805  012C  00C8               	movwf	??___flmul
  2806  012D  01C9               	clrf	??___flmul+1
  2807  012E  01CA               	clrf	??___flmul+2
  2808  012F  01CB               	clrf	??___flmul+3
  2809  0130  0848               	movf	??___flmul,w
  2810  0131  07D4               	addwf	___flmul@prod,f
  2811  0132  0849               	movf	??___flmul+1,w
  2812  0133  3DD5               	addwfc	___flmul@prod+1,f
  2813  0134  084A               	movf	??___flmul+2,w
  2814  0135  3DD6               	addwfc	___flmul@prod+2,f
  2815  0136  084B               	movf	??___flmul+3,w
  2816  0137  3DD7               	addwfc	___flmul@prod+3,f
  2817  0138  0842               	movf	___flmul@b+2,w
  2818  0139  00C8               	movwf	??___flmul
  2819  013A  0848               	movf	??___flmul,w
  2820  013B  00F2               	movwf	__Umul8_16@multiplicand
  2821  013C  0844               	movf	___flmul@a,w
  2822  013D  318F  270D  3180   	fcall	__Umul8_16
  2823  0140  0873               	movf	?__Umul8_16+1,w
  2824  0141  0140               	movlb	0	; select bank0
  2825  0142  00D9               	movwf	___flmul@temp+1
  2826  0143  0872               	movf	?__Umul8_16,w
  2827  0144  00D8               	movwf	___flmul@temp
  2828  0145  0858               	movf	___flmul@temp,w
  2829  0146  00C8               	movwf	??___flmul
  2830  0147  01C9               	clrf	??___flmul+1
  2831  0148  01CA               	clrf	??___flmul+2
  2832  0149  01CB               	clrf	??___flmul+3
  2833  014A  0848               	movf	??___flmul,w
  2834  014B  07CF               	addwf	___flmul@grs,f
  2835  014C  0849               	movf	??___flmul+1,w
  2836  014D  3DD0               	addwfc	___flmul@grs+1,f
  2837  014E  084A               	movf	??___flmul+2,w
  2838  014F  3DD1               	addwfc	___flmul@grs+2,f
  2839  0150  084B               	movf	??___flmul+3,w
  2840  0151  3DD2               	addwfc	___flmul@grs+3,f
  2841  0152  0859               	movf	___flmul@temp+1,w
  2842  0153  00C8               	movwf	??___flmul
  2843  0154  01C9               	clrf	??___flmul+1
  2844  0155  01CA               	clrf	??___flmul+2
  2845  0156  01CB               	clrf	??___flmul+3
  2846  0157  0848               	movf	??___flmul,w
  2847  0158  07D4               	addwf	___flmul@prod,f
  2848  0159  0849               	movf	??___flmul+1,w
  2849  015A  3DD5               	addwfc	___flmul@prod+1,f
  2850  015B  084A               	movf	??___flmul+2,w
  2851  015C  3DD6               	addwfc	___flmul@prod+2,f
  2852  015D  084B               	movf	??___flmul+3,w
  2853  015E  3DD7               	addwfc	___flmul@prod+3,f
  2854  015F  3008               	movlw	8
  2855  0160                     u2585:	
  2856  0160  35CF               	lslf	___flmul@grs,f
  2857  0161  0DD0               	rlf	___flmul@grs+1,f
  2858  0162  0DD1               	rlf	___flmul@grs+2,f
  2859  0163  0DD2               	rlf	___flmul@grs+3,f
  2860  0164  0B89               	decfsz	9,f
  2861  0165  2960               	goto	u2585
  2862  0166  0841               	movf	___flmul@b+1,w
  2863  0167  00C8               	movwf	??___flmul
  2864  0168  0848               	movf	??___flmul,w
  2865  0169  00F2               	movwf	__Umul8_16@multiplicand
  2866  016A  0844               	movf	___flmul@a,w
  2867  016B  318F  270D  3180   	fcall	__Umul8_16
  2868  016E  0873               	movf	?__Umul8_16+1,w
  2869  016F  0140               	movlb	0	; select bank0
  2870  0170  00D9               	movwf	___flmul@temp+1
  2871  0171  0872               	movf	?__Umul8_16,w
  2872  0172  00D8               	movwf	___flmul@temp
  2873  0173  0858               	movf	___flmul@temp,w
  2874  0174  07CF               	addwf	___flmul@grs,f
  2875  0175  0859               	movf	___flmul@temp+1,w
  2876  0176  3DD0               	addwfc	___flmul@grs+1,f
  2877  0177  3000               	movlw	0
  2878  0178  3DD1               	addwfc	___flmul@grs+2,f
  2879  0179  3DD2               	addwfc	___flmul@grs+3,f
  2880  017A  0840               	movf	___flmul@b,w
  2881  017B  00C8               	movwf	??___flmul
  2882  017C  0848               	movf	??___flmul,w
  2883  017D  00F2               	movwf	__Umul8_16@multiplicand
  2884  017E  0845               	movf	___flmul@a+1,w
  2885  017F  318F  270D  3180   	fcall	__Umul8_16
  2886  0182  0873               	movf	?__Umul8_16+1,w
  2887  0183  0140               	movlb	0	; select bank0
  2888  0184  00D9               	movwf	___flmul@temp+1
  2889  0185  0872               	movf	?__Umul8_16,w
  2890  0186  00D8               	movwf	___flmul@temp
  2891  0187  0858               	movf	___flmul@temp,w
  2892  0188  07CF               	addwf	___flmul@grs,f
  2893  0189  0859               	movf	___flmul@temp+1,w
  2894  018A  3DD0               	addwfc	___flmul@grs+1,f
  2895  018B  3000               	movlw	0
  2896  018C  3DD1               	addwfc	___flmul@grs+2,f
  2897  018D  3DD2               	addwfc	___flmul@grs+3,f
  2898  018E  3008               	movlw	8
  2899  018F                     u2595:	
  2900  018F  35CF               	lslf	___flmul@grs,f
  2901  0190  0DD0               	rlf	___flmul@grs+1,f
  2902  0191  0DD1               	rlf	___flmul@grs+2,f
  2903  0192  0DD2               	rlf	___flmul@grs+3,f
  2904  0193  0B89               	decfsz	9,f
  2905  0194  298F               	goto	u2595
  2906  0195  0840               	movf	___flmul@b,w
  2907  0196  00C8               	movwf	??___flmul
  2908  0197  0848               	movf	??___flmul,w
  2909  0198  00F2               	movwf	__Umul8_16@multiplicand
  2910  0199  0844               	movf	___flmul@a,w
  2911  019A  318F  270D  3180   	fcall	__Umul8_16
  2912  019D  0873               	movf	?__Umul8_16+1,w
  2913  019E  0140               	movlb	0	; select bank0
  2914  019F  00D9               	movwf	___flmul@temp+1
  2915  01A0  0872               	movf	?__Umul8_16,w
  2916  01A1  00D8               	movwf	___flmul@temp
  2917  01A2  0858               	movf	___flmul@temp,w
  2918  01A3  07CF               	addwf	___flmul@grs,f
  2919  01A4  0859               	movf	___flmul@temp+1,w
  2920  01A5  3DD0               	addwfc	___flmul@grs+1,f
  2921  01A6  3000               	movlw	0
  2922  01A7  3DD1               	addwfc	___flmul@grs+2,f
  2923  01A8  3DD2               	addwfc	___flmul@grs+3,f
  2924  01A9  0841               	movf	___flmul@b+1,w
  2925  01AA  00C8               	movwf	??___flmul
  2926  01AB  0848               	movf	??___flmul,w
  2927  01AC  00F2               	movwf	__Umul8_16@multiplicand
  2928  01AD  0846               	movf	___flmul@a+2,w
  2929  01AE  318F  270D  3180   	fcall	__Umul8_16
  2930  01B1  0873               	movf	?__Umul8_16+1,w
  2931  01B2  0140               	movlb	0	; select bank0
  2932  01B3  00D9               	movwf	___flmul@temp+1
  2933  01B4  0872               	movf	?__Umul8_16,w
  2934  01B5  00D8               	movwf	___flmul@temp
  2935  01B6  0858               	movf	___flmul@temp,w
  2936  01B7  07D4               	addwf	___flmul@prod,f
  2937  01B8  0859               	movf	___flmul@temp+1,w
  2938  01B9  3DD5               	addwfc	___flmul@prod+1,f
  2939  01BA  3000               	movlw	0
  2940  01BB  3DD6               	addwfc	___flmul@prod+2,f
  2941  01BC  3DD7               	addwfc	___flmul@prod+3,f
  2942  01BD  0842               	movf	___flmul@b+2,w
  2943  01BE  00C8               	movwf	??___flmul
  2944  01BF  0848               	movf	??___flmul,w
  2945  01C0  00F2               	movwf	__Umul8_16@multiplicand
  2946  01C1  0845               	movf	___flmul@a+1,w
  2947  01C2  318F  270D  3180   	fcall	__Umul8_16
  2948  01C5  0873               	movf	?__Umul8_16+1,w
  2949  01C6  0140               	movlb	0	; select bank0
  2950  01C7  00D9               	movwf	___flmul@temp+1
  2951  01C8  0872               	movf	?__Umul8_16,w
  2952  01C9  00D8               	movwf	___flmul@temp
  2953  01CA  0858               	movf	___flmul@temp,w
  2954  01CB  07D4               	addwf	___flmul@prod,f
  2955  01CC  0859               	movf	___flmul@temp+1,w
  2956  01CD  3DD5               	addwfc	___flmul@prod+1,f
  2957  01CE  3000               	movlw	0
  2958  01CF  3DD6               	addwfc	___flmul@prod+2,f
  2959  01D0  3DD7               	addwfc	___flmul@prod+3,f
  2960  01D1  0842               	movf	___flmul@b+2,w
  2961  01D2  00C8               	movwf	??___flmul
  2962  01D3  0848               	movf	??___flmul,w
  2963  01D4  00F2               	movwf	__Umul8_16@multiplicand
  2964  01D5  0846               	movf	___flmul@a+2,w
  2965  01D6  318F  270D  3180   	fcall	__Umul8_16
  2966  01D9  0873               	movf	?__Umul8_16+1,w
  2967  01DA  0140               	movlb	0	; select bank0
  2968  01DB  00D9               	movwf	___flmul@temp+1
  2969  01DC  0872               	movf	?__Umul8_16,w
  2970  01DD  00D8               	movwf	___flmul@temp
  2971  01DE  0858               	movf	___flmul@temp,w
  2972  01DF  00C8               	movwf	??___flmul
  2973  01E0  0859               	movf	___flmul@temp+1,w
  2974  01E1  00C9               	movwf	??___flmul+1
  2975  01E2  01CA               	clrf	??___flmul+2
  2976  01E3  01CB               	clrf	??___flmul+3
  2977  01E4  3008               	movlw	8
  2978  01E5                     u2605:	
  2979  01E5  35C8               	lslf	??___flmul,f
  2980  01E6  0DC9               	rlf	??___flmul+1,f
  2981  01E7  0DCA               	rlf	??___flmul+2,f
  2982  01E8  0DCB               	rlf	??___flmul+3,f
  2983  01E9  0B89               	decfsz	9,f
  2984  01EA  29E5               	goto	u2605
  2985  01EB  0848               	movf	??___flmul,w
  2986  01EC  07D4               	addwf	___flmul@prod,f
  2987  01ED  0849               	movf	??___flmul+1,w
  2988  01EE  3DD5               	addwfc	___flmul@prod+1,f
  2989  01EF  084A               	movf	??___flmul+2,w
  2990  01F0  3DD6               	addwfc	___flmul@prod+2,f
  2991  01F1  084B               	movf	??___flmul+3,w
  2992  01F2  3DD7               	addwfc	___flmul@prod+3,f
  2993  01F3  084F               	movf	___flmul@grs,w
  2994  01F4  00C8               	movwf	??___flmul
  2995  01F5  0850               	movf	___flmul@grs+1,w
  2996  01F6  00C9               	movwf	??___flmul+1
  2997  01F7  0851               	movf	___flmul@grs+2,w
  2998  01F8  00CA               	movwf	??___flmul+2
  2999  01F9  0852               	movf	___flmul@grs+3,w
  3000  01FA  00CB               	movwf	??___flmul+3
  3001  01FB  3018               	movlw	24
  3002  01FC                     u2615:	
  3003  01FC  36CB               	lsrf	??___flmul+3,f
  3004  01FD  0CCA               	rrf	??___flmul+2,f
  3005  01FE  0CC9               	rrf	??___flmul+1,f
  3006  01FF  0CC8               	rrf	??___flmul,f
  3007  0200  0B89               	decfsz	9,f
  3008  0201  29FC               	goto	u2615
  3009  0202  0848               	movf	??___flmul,w
  3010  0203  07D4               	addwf	___flmul@prod,f
  3011  0204  0849               	movf	??___flmul+1,w
  3012  0205  3DD5               	addwfc	___flmul@prod+1,f
  3013  0206  084A               	movf	??___flmul+2,w
  3014  0207  3DD6               	addwfc	___flmul@prod+2,f
  3015  0208  084B               	movf	??___flmul+3,w
  3016  0209  3DD7               	addwfc	___flmul@prod+3,f
  3017  020A  3008               	movlw	8
  3018  020B                     u2625:	
  3019  020B  35CF               	lslf	___flmul@grs,f
  3020  020C  0DD0               	rlf	___flmul@grs+1,f
  3021  020D  0DD1               	rlf	___flmul@grs+2,f
  3022  020E  0DD2               	rlf	___flmul@grs+3,f
  3023  020F  0B89               	decfsz	9,f
  3024  0210  2A0B               	goto	u2625
  3025  0211  0853               	movf	___flmul@bexp,w
  3026  0212  074E               	addwf	___flmul@aexp,w
  3027  0213  00C8               	movwf	??___flmul
  3028  0214  01C9               	clrf	??___flmul+1
  3029  0215  0DC9               	rlf	??___flmul+1,f
  3030  0216  0848               	movf	??___flmul,w
  3031  0217  3E82               	addlw	130
  3032  0218  00D8               	movwf	___flmul@temp
  3033  0219  30FF               	movlw	255
  3034  021A  3D49               	addwfc	??___flmul+1,w
  3035  021B  00D9               	movwf	___flmul@temp+1
  3036  021C                     l2203:	
  3037  021C  1BD6               	btfsc	___flmul@prod+2,7
  3038  021D  2A33               	goto	l2205
  3039  021E  3001               	movlw	1
  3040  021F                     u2635:	
  3041  021F  35D4               	lslf	___flmul@prod,f
  3042  0220  0DD5               	rlf	___flmul@prod+1,f
  3043  0221  0DD6               	rlf	___flmul@prod+2,f
  3044  0222  0DD7               	rlf	___flmul@prod+3,f
  3045  0223  0B89               	decfsz	9,f
  3046  0224  2A1F               	goto	u2635
  3047  0225  1BD2               	btfsc	___flmul@grs+3,7
  3048  0226  1454               	bsf	___flmul@prod,0
  3049  0227  3001               	movlw	1
  3050  0228                     u2655:	
  3051  0228  35CF               	lslf	___flmul@grs,f
  3052  0229  0DD0               	rlf	___flmul@grs+1,f
  3053  022A  0DD1               	rlf	___flmul@grs+2,f
  3054  022B  0DD2               	rlf	___flmul@grs+3,f
  3055  022C  0B89               	decfsz	9,f
  3056  022D  2A28               	goto	u2655
  3057  022E  30FF               	movlw	255
  3058  022F  07D8               	addwf	___flmul@temp,f
  3059  0230  30FF               	movlw	255
  3060  0231  3DD9               	addwfc	___flmul@temp+1,f
  3061  0232  2A1C               	goto	l2203
  3062  0233                     l2205:	
  3063  0233  01CE               	clrf	___flmul@aexp
  3064  0234  1FD2               	btfss	___flmul@grs+3,7
  3065  0235  2A4C               	goto	l2215
  3066  0236  30FF               	movlw	255
  3067  0237  054F               	andwf	___flmul@grs,w
  3068  0238  00C8               	movwf	??___flmul
  3069  0239  30FF               	movlw	255
  3070  023A  0550               	andwf	___flmul@grs+1,w
  3071  023B  00C9               	movwf	??___flmul+1
  3072  023C  30FF               	movlw	255
  3073  023D  0551               	andwf	___flmul@grs+2,w
  3074  023E  00CA               	movwf	??___flmul+2
  3075  023F  307F               	movlw	127
  3076  0240  0552               	andwf	___flmul@grs+3,w
  3077  0241  00CB               	movwf	??___flmul+3
  3078  0242  084B               	movf	??___flmul+3,w
  3079  0243  044A               	iorwf	??___flmul+2,w
  3080  0244  0449               	iorwf	??___flmul+1,w
  3081  0245  0448               	iorwf	??___flmul,w
  3082  0246  1903               	skipnz
  3083  0247  1854               	btfsc	___flmul@prod,0
  3084  0248  2A4A               	goto	l2211
  3085  0249  2A4C               	goto	l2215
  3086  024A                     l2211:	
  3087  024A  01CE               	clrf	___flmul@aexp
  3088  024B  0ACE               	incf	___flmul@aexp,f
  3089  024C                     l2215:	
  3090  024C  084E               	movf	___flmul@aexp,w
  3091  024D  1903               	btfsc	3,2
  3092  024E  2A75               	goto	l2225
  3093  024F  3001               	movlw	1
  3094  0250  07D4               	addwf	___flmul@prod,f
  3095  0251  3000               	movlw	0
  3096  0252  3DD5               	addwfc	___flmul@prod+1,f
  3097  0253  3000               	movlw	0
  3098  0254  3DD6               	addwfc	___flmul@prod+2,f
  3099  0255  3000               	movlw	0
  3100  0256  3DD7               	addwfc	___flmul@prod+3,f
  3101  0257  1C57               	btfss	___flmul@prod+3,0
  3102  0258  2A75               	goto	l2225
  3103  0259  0854               	movf	___flmul@prod,w
  3104  025A  00C8               	movwf	??___flmul
  3105  025B  0855               	movf	___flmul@prod+1,w
  3106  025C  00C9               	movwf	??___flmul+1
  3107  025D  0856               	movf	___flmul@prod+2,w
  3108  025E  00CA               	movwf	??___flmul+2
  3109  025F  0857               	movf	___flmul@prod+3,w
  3110  0260  00CB               	movwf	??___flmul+3
  3111  0261  3001               	movlw	1
  3112  0262  00CC               	movwf	??___flmul+4
  3113  0263                     u2725:	
  3114  0263  37CB               	asrf	??___flmul+3,f
  3115  0264  0CCA               	rrf	??___flmul+2,f
  3116  0265  0CC9               	rrf	??___flmul+1,f
  3117  0266  0CC8               	rrf	??___flmul,f
  3118  0267  0BCC               	decfsz	??___flmul+4,f
  3119  0268  2A63               	goto	u2725
  3120  0269  084B               	movf	??___flmul+3,w
  3121  026A  00D7               	movwf	___flmul@prod+3
  3122  026B  084A               	movf	??___flmul+2,w
  3123  026C  00D6               	movwf	___flmul@prod+2
  3124  026D  0849               	movf	??___flmul+1,w
  3125  026E  00D5               	movwf	___flmul@prod+1
  3126  026F  0848               	movf	??___flmul,w
  3127  0270  00D4               	movwf	___flmul@prod
  3128  0271  3001               	movlw	1
  3129  0272  07D8               	addwf	___flmul@temp,f
  3130  0273  3000               	movlw	0
  3131  0274  3DD9               	addwfc	___flmul@temp+1,f
  3132  0275                     l2225:	
  3133  0275  0859               	movf	___flmul@temp+1,w
  3134  0276  3A80               	xorlw	128
  3135  0277  00C8               	movwf	??___flmul
  3136  0278  3080               	movlw	128
  3137  0279  0248               	subwf	??___flmul,w
  3138  027A  1D03               	skipz
  3139  027B  2A7E               	goto	u2735
  3140  027C  30FF               	movlw	255
  3141  027D  0258               	subwf	___flmul@temp,w
  3142  027E                     u2735:	
  3143  027E  1C03               	skipc
  3144  027F  2A8A               	goto	l2229
  3145  0280  307F               	movlw	127
  3146  0281  0140               	movlb	0	; select bank0
  3147  0282  00D7               	movwf	___flmul@prod+3
  3148  0283  3080               	movlw	128
  3149  0284  00D6               	movwf	___flmul@prod+2
  3150  0285  3000               	movlw	0
  3151  0286  00D5               	movwf	___flmul@prod+1
  3152  0287  3000               	movlw	0
  3153  0288  00D4               	movwf	___flmul@prod
  3154  0289  2AB4               	goto	l684
  3155  028A                     l2229:	
  3156  028A  0140               	movlb	0	; select bank0
  3157  028B  0859               	movf	___flmul@temp+1,w
  3158  028C  3A80               	xorlw	128
  3159  028D  00C8               	movwf	??___flmul
  3160  028E  3080               	movlw	128
  3161  028F  0248               	subwf	??___flmul,w
  3162  0290  1D03               	skipz
  3163  0291  2A94               	goto	u2745
  3164  0292  3001               	movlw	1
  3165  0293  0258               	subwf	___flmul@temp,w
  3166  0294                     u2745:	
  3167  0294  1803               	skipnc
  3168  0295  2AA1               	goto	l2235
  3169  0296  3000               	movlw	0
  3170  0297  0140               	movlb	0	; select bank0
  3171  0298  00D7               	movwf	___flmul@prod+3
  3172  0299  3000               	movlw	0
  3173  029A  00D6               	movwf	___flmul@prod+2
  3174  029B  3000               	movlw	0
  3175  029C  00D5               	movwf	___flmul@prod+1
  3176  029D  3000               	movlw	0
  3177  029E  00D4               	movwf	___flmul@prod
  3178  029F  01CD               	clrf	___flmul@sign
  3179  02A0  2AB4               	goto	l684
  3180  02A1                     l2235:	
  3181  02A1  0140               	movlb	0	; select bank0
  3182  02A2  0858               	movf	___flmul@temp,w
  3183  02A3  00C8               	movwf	??___flmul
  3184  02A4  0848               	movf	??___flmul,w
  3185  02A5  00D3               	movwf	___flmul@bexp
  3186  02A6  30FF               	movlw	255
  3187  02A7  05D4               	andwf	___flmul@prod,f
  3188  02A8  30FF               	movlw	255
  3189  02A9  05D5               	andwf	___flmul@prod+1,f
  3190  02AA  307F               	movlw	127
  3191  02AB  05D6               	andwf	___flmul@prod+2,f
  3192  02AC  3000               	movlw	0
  3193  02AD  05D7               	andwf	___flmul@prod+3,f
  3194  02AE  1853               	btfsc	___flmul@bexp,0
  3195  02AF  17D6               	bsf	___flmul@prod+2,7
  3196  02B0  3653               	lsrf	___flmul@bexp,w
  3197  02B1  00C8               	movwf	??___flmul
  3198  02B2  0848               	movf	??___flmul,w
  3199  02B3  00D7               	movwf	___flmul@prod+3
  3200  02B4                     l684:	
  3201  02B4  084D               	movf	___flmul@sign,w
  3202  02B5  00C8               	movwf	??___flmul
  3203  02B6  0848               	movf	??___flmul,w
  3204  02B7  04D7               	iorwf	___flmul@prod+3,f
  3205  02B8  0857               	movf	___flmul@prod+3,w
  3206  02B9  00C3               	movwf	?___flmul+3
  3207  02BA  0856               	movf	___flmul@prod+2,w
  3208  02BB  00C2               	movwf	?___flmul+2
  3209  02BC  0855               	movf	___flmul@prod+1,w
  3210  02BD  00C1               	movwf	?___flmul+1
  3211  02BE  0854               	movf	___flmul@prod,w
  3212  02BF  00C0               	movwf	?___flmul
  3213  02C0  0008               	return
  3214  02C1                     __end_of___flmul:	
  3215                           
  3216                           	psect	text11
  3217  0F0D                     __ptext11:	
  3218 ;; *************** function __Umul8_16 *****************
  3219 ;; Defined at:
  3220 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul8_16.c"
  3221 ;; Parameters:    Size  Location     Type
  3222 ;;  multiplier      1    wreg     unsigned char 
  3223 ;;  multiplicand    1    2[COMMON] unsigned char 
  3224 ;; Auto vars:     Size  Location     Type
  3225 ;;  multiplier      1    4[BANK0 ] unsigned char 
  3226 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  3227 ;;  product         2    0[BANK0 ] unsigned int 
  3228 ;; Return value:  Size  Location     Type
  3229 ;;                  2    2[COMMON] unsigned int 
  3230 ;; Registers used:
  3231 ;;		wreg, status,2, status,0
  3232 ;; Tracked objects:
  3233 ;;		On entry : 0/0
  3234 ;;		On exit  : 0/0
  3235 ;;		Unchanged: 0/0
  3236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3237 ;;      Params:         2       0       0       0       0       0       0       0
  3238 ;;      Locals:         0       5       0       0       0       0       0       0
  3239 ;;      Temps:          2       0       0       0       0       0       0       0
  3240 ;;      Totals:         4       5       0       0       0       0       0       0
  3241 ;;Total ram usage:        9 bytes
  3242 ;; Hardware stack levels used:    1
  3243 ;; Hardware stack levels required when called:    1
  3244 ;; This function calls:
  3245 ;;		Nothing
  3246 ;; This function is called by:
  3247 ;;		___flmul
  3248 ;; This function uses a non-reentrant model
  3249 ;;
  3250                           
  3251                           
  3252                           ;psect for function __Umul8_16
  3253  0F0D                     __Umul8_16:	
  3254                           
  3255                           ;incstack = 0
  3256                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  3257                           ;__Umul8_16@multiplier stored from wreg
  3258  0F0D  0140               	movlb	0	; select bank0
  3259  0F0E  00A4               	movwf	__Umul8_16@multiplier
  3260  0F0F  01A0               	clrf	__Umul8_16@product
  3261  0F10  01A1               	clrf	__Umul8_16@product+1
  3262  0F11  0872               	movf	__Umul8_16@multiplicand,w
  3263  0F12  00F4               	movwf	??__Umul8_16
  3264  0F13  01F5               	clrf	??__Umul8_16+1
  3265  0F14  0874               	movf	??__Umul8_16,w
  3266  0F15  00A2               	movwf	__Umul8_16@word_mpld
  3267  0F16  0875               	movf	??__Umul8_16+1,w
  3268  0F17  00A3               	movwf	__Umul8_16@word_mpld+1
  3269  0F18                     l2097:	
  3270  0F18  1C24               	btfss	__Umul8_16@multiplier,0
  3271  0F19  2F1E               	goto	l729
  3272  0F1A  0822               	movf	__Umul8_16@word_mpld,w
  3273  0F1B  07A0               	addwf	__Umul8_16@product,f
  3274  0F1C  0823               	movf	__Umul8_16@word_mpld+1,w
  3275  0F1D  3DA1               	addwfc	__Umul8_16@product+1,f
  3276  0F1E                     l729:	
  3277  0F1E  3001               	movlw	1
  3278  0F1F                     u2485:	
  3279  0F1F  35A2               	lslf	__Umul8_16@word_mpld,f
  3280  0F20  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  3281  0F21  0B89               	decfsz	9,f
  3282  0F22  2F1F               	goto	u2485
  3283  0F23  1003               	clrc
  3284  0F24  0CA4               	rrf	__Umul8_16@multiplier,f
  3285  0F25  0824               	movf	__Umul8_16@multiplier,w
  3286  0F26  1D03               	btfss	3,2
  3287  0F27  2F18               	goto	l2097
  3288  0F28  0821               	movf	__Umul8_16@product+1,w
  3289  0F29  00F3               	movwf	?__Umul8_16+1
  3290  0F2A  0820               	movf	__Umul8_16@product,w
  3291  0F2B  00F2               	movwf	?__Umul8_16
  3292  0F2C  0008               	return
  3293  0F2D                     __end_of__Umul8_16:	
  3294                           
  3295                           	psect	text12
  3296  02C1                     __ptext12:	
  3297 ;; *************** function ___fldiv *****************
  3298 ;; Defined at:
  3299 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
  3300 ;; Parameters:    Size  Location     Type
  3301 ;;  a               4    6[BANK0 ] unsigned int 
  3302 ;;  b               4   10[BANK0 ] unsigned int 
  3303 ;; Auto vars:     Size  Location     Type
  3304 ;;  grs             4   26[BANK0 ] unsigned long 
  3305 ;;  rem             4   19[BANK0 ] unsigned long 
  3306 ;;  new_exp         2   24[BANK0 ] int 
  3307 ;;  aexp            1   31[BANK0 ] unsigned char 
  3308 ;;  bexp            1   30[BANK0 ] unsigned char 
  3309 ;;  sign            1   23[BANK0 ] unsigned char 
  3310 ;; Return value:  Size  Location     Type
  3311 ;;                  4    6[BANK0 ] unsigned char 
  3312 ;; Registers used:
  3313 ;;		wreg, status,2, status,0
  3314 ;; Tracked objects:
  3315 ;;		On entry : 0/0
  3316 ;;		On exit  : 0/0
  3317 ;;		Unchanged: 0/0
  3318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3319 ;;      Params:         0       8       0       0       0       0       0       0
  3320 ;;      Locals:         0      13       0       0       0       0       0       0
  3321 ;;      Temps:          0       5       0       0       0       0       0       0
  3322 ;;      Totals:         0      26       0       0       0       0       0       0
  3323 ;;Total ram usage:       26 bytes
  3324 ;; Hardware stack levels used:    1
  3325 ;; Hardware stack levels required when called:    1
  3326 ;; This function calls:
  3327 ;;		Nothing
  3328 ;; This function is called by:
  3329 ;;		_getNTCV
  3330 ;; This function uses a non-reentrant model
  3331 ;;
  3332                           
  3333                           
  3334                           ;psect for function ___fldiv
  3335  02C1                     ___fldiv:	
  3336                           
  3337                           ;incstack = 0
  3338                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  3339  02C1  0140               	movlb	0	; select bank0
  3340  02C2  082D               	movf	___fldiv@b+3,w
  3341  02C3  3980               	andlw	128
  3342  02C4  00AE               	movwf	??___fldiv
  3343  02C5  082E               	movf	??___fldiv,w
  3344  02C6  00B7               	movwf	___fldiv@sign
  3345  02C7  352D               	lslf	___fldiv@b+3,w
  3346  02C8  00AE               	movwf	??___fldiv
  3347  02C9  082E               	movf	??___fldiv,w
  3348  02CA  00BE               	movwf	___fldiv@bexp
  3349  02CB  1BAC               	btfsc	___fldiv@b+2,7
  3350  02CC  143E               	bsf	___fldiv@bexp,0
  3351  02CD  083E               	movf	___fldiv@bexp,w
  3352  02CE  1903               	btfsc	3,2
  3353  02CF  2ADE               	goto	l1443
  3354  02D0  0A3E               	incf	___fldiv@bexp,w
  3355  02D1  1D03               	btfss	3,2
  3356  02D2  2ADB               	goto	l1439
  3357  02D3  3000               	movlw	0
  3358  02D4  00AD               	movwf	___fldiv@b+3
  3359  02D5  3000               	movlw	0
  3360  02D6  00AC               	movwf	___fldiv@b+2
  3361  02D7  3000               	movlw	0
  3362  02D8  00AB               	movwf	___fldiv@b+1
  3363  02D9  3000               	movlw	0
  3364  02DA  00AA               	movwf	___fldiv@b
  3365  02DB                     l1439:	
  3366  02DB  17AC               	bsf	___fldiv@b+2,7
  3367  02DC  01AD               	clrf	___fldiv@b+3
  3368  02DD  2AE6               	goto	l1445
  3369  02DE                     l1443:	
  3370  02DE  3000               	movlw	0
  3371  02DF  00AD               	movwf	___fldiv@b+3
  3372  02E0  3000               	movlw	0
  3373  02E1  00AC               	movwf	___fldiv@b+2
  3374  02E2  3000               	movlw	0
  3375  02E3  00AB               	movwf	___fldiv@b+1
  3376  02E4  3000               	movlw	0
  3377  02E5  00AA               	movwf	___fldiv@b
  3378  02E6                     l1445:	
  3379  02E6  0829               	movf	___fldiv@a+3,w
  3380  02E7  3980               	andlw	128
  3381  02E8  00AE               	movwf	??___fldiv
  3382  02E9  082E               	movf	??___fldiv,w
  3383  02EA  06B7               	xorwf	___fldiv@sign,f
  3384  02EB  3529               	lslf	___fldiv@a+3,w
  3385  02EC  00AE               	movwf	??___fldiv
  3386  02ED  082E               	movf	??___fldiv,w
  3387  02EE  00BF               	movwf	___fldiv@aexp
  3388  02EF  1BA8               	btfsc	___fldiv@a+2,7
  3389  02F0  143F               	bsf	___fldiv@aexp,0
  3390  02F1  083F               	movf	___fldiv@aexp,w
  3391  02F2  1903               	btfsc	3,2
  3392  02F3  2B02               	goto	l1463
  3393  02F4  0A3F               	incf	___fldiv@aexp,w
  3394  02F5  1D03               	btfss	3,2
  3395  02F6  2AFF               	goto	l1459
  3396  02F7  3000               	movlw	0
  3397  02F8  00A9               	movwf	___fldiv@a+3
  3398  02F9  3000               	movlw	0
  3399  02FA  00A8               	movwf	___fldiv@a+2
  3400  02FB  3000               	movlw	0
  3401  02FC  00A7               	movwf	___fldiv@a+1
  3402  02FD  3000               	movlw	0
  3403  02FE  00A6               	movwf	___fldiv@a
  3404  02FF                     l1459:	
  3405  02FF  17A8               	bsf	___fldiv@a+2,7
  3406  0300  01A9               	clrf	___fldiv@a+3
  3407  0301  2B0A               	goto	l632
  3408  0302                     l1463:	
  3409  0302  3000               	movlw	0
  3410  0303  00A9               	movwf	___fldiv@a+3
  3411  0304  3000               	movlw	0
  3412  0305  00A8               	movwf	___fldiv@a+2
  3413  0306  3000               	movlw	0
  3414  0307  00A7               	movwf	___fldiv@a+1
  3415  0308  3000               	movlw	0
  3416  0309  00A6               	movwf	___fldiv@a
  3417  030A                     l632:	
  3418  030A  0829               	movf	___fldiv@a+3,w
  3419  030B  0428               	iorwf	___fldiv@a+2,w
  3420  030C  0427               	iorwf	___fldiv@a+1,w
  3421  030D  0426               	iorwf	___fldiv@a,w
  3422  030E  1D03               	skipz
  3423  030F  2B29               	goto	l1473
  3424  0310  3000               	movlw	0
  3425  0311  00AD               	movwf	___fldiv@b+3
  3426  0312  3000               	movlw	0
  3427  0313  00AC               	movwf	___fldiv@b+2
  3428  0314  3000               	movlw	0
  3429  0315  00AB               	movwf	___fldiv@b+1
  3430  0316  3000               	movlw	0
  3431  0317  00AA               	movwf	___fldiv@b
  3432  0318  3080               	movlw	128
  3433  0319  04AC               	iorwf	___fldiv@b+2,f
  3434  031A  307F               	movlw	127
  3435  031B  04AD               	iorwf	___fldiv@b+3,f
  3436  031C                     L2:	
  3437  031C  0837               	movf	___fldiv@sign,w
  3438  031D  00AE               	movwf	??___fldiv
  3439  031E  082E               	movf	??___fldiv,w
  3440  031F  04AD               	iorwf	___fldiv@b+3,f
  3441  0320  082D               	movf	___fldiv@b+3,w
  3442  0321  00A9               	movwf	?___fldiv+3
  3443  0322  082C               	movf	___fldiv@b+2,w
  3444  0323  00A8               	movwf	?___fldiv+2
  3445  0324  082B               	movf	___fldiv@b+1,w
  3446  0325  00A7               	movwf	?___fldiv+1
  3447  0326  082A               	movf	___fldiv@b,w
  3448  0327  00A6               	movwf	?___fldiv
  3449  0328  0008               	return
  3450  0329                     l1473:	
  3451  0329  083E               	movf	___fldiv@bexp,w
  3452  032A  1D03               	btfss	3,2
  3453  032B  2B35               	goto	l1479
  3454  032C  3000               	movlw	0
  3455  032D  00A9               	movwf	?___fldiv+3
  3456  032E  3000               	movlw	0
  3457  032F  00A8               	movwf	?___fldiv+2
  3458  0330  3000               	movlw	0
  3459  0331  00A7               	movwf	?___fldiv+1
  3460  0332  3000               	movlw	0
  3461  0333  00A6               	movwf	?___fldiv
  3462  0334  0008               	return
  3463  0335                     l1479:	
  3464  0335  083E               	movf	___fldiv@bexp,w
  3465  0336  00AE               	movwf	??___fldiv
  3466  0337  01AF               	clrf	??___fldiv+1
  3467  0338  082F               	movf	??___fldiv+1,w
  3468  0339  00B1               	movwf	??___fldiv+3
  3469  033A  083F               	movf	___fldiv@aexp,w
  3470  033B  022E               	subwf	??___fldiv,w
  3471  033C  00B0               	movwf	??___fldiv+2
  3472  033D  1C03               	skipc
  3473  033E  03B1               	decf	??___fldiv+3,f
  3474  033F  0830               	movf	??___fldiv+2,w
  3475  0340  3E7F               	addlw	127
  3476  0341  00B8               	movwf	___fldiv@new_exp
  3477  0342  3000               	movlw	0
  3478  0343  3D31               	addwfc	??___fldiv+3,w
  3479  0344  00B9               	movwf	___fldiv@new_exp+1
  3480  0345  082D               	movf	___fldiv@b+3,w
  3481  0346  00B6               	movwf	___fldiv@rem+3
  3482  0347  082C               	movf	___fldiv@b+2,w
  3483  0348  00B5               	movwf	___fldiv@rem+2
  3484  0349  082B               	movf	___fldiv@b+1,w
  3485  034A  00B4               	movwf	___fldiv@rem+1
  3486  034B  082A               	movf	___fldiv@b,w
  3487  034C  00B3               	movwf	___fldiv@rem
  3488  034D  3000               	movlw	0
  3489  034E  00AD               	movwf	___fldiv@b+3
  3490  034F  3000               	movlw	0
  3491  0350  00AC               	movwf	___fldiv@b+2
  3492  0351  3000               	movlw	0
  3493  0352  00AB               	movwf	___fldiv@b+1
  3494  0353  3000               	movlw	0
  3495  0354  00AA               	movwf	___fldiv@b
  3496  0355  3000               	movlw	0
  3497  0356  00BD               	movwf	___fldiv@grs+3
  3498  0357  3000               	movlw	0
  3499  0358  00BC               	movwf	___fldiv@grs+2
  3500  0359  3000               	movlw	0
  3501  035A  00BB               	movwf	___fldiv@grs+1
  3502  035B  3000               	movlw	0
  3503  035C  00BA               	movwf	___fldiv@grs
  3504  035D  01BF               	clrf	___fldiv@aexp
  3505  035E                     l1507:	
  3506  035E  301A               	movlw	26
  3507  035F  023F               	subwf	___fldiv@aexp,w
  3508  0360  1803               	btfsc	3,0
  3509  0361  2B9A               	goto	l1509
  3510  0362  083F               	movf	___fldiv@aexp,w
  3511  0363  1903               	btfsc	3,2
  3512  0364  2B7C               	goto	l1499
  3513  0365  3001               	movlw	1
  3514  0366                     u1365:	
  3515  0366  35B3               	lslf	___fldiv@rem,f
  3516  0367  0DB4               	rlf	___fldiv@rem+1,f
  3517  0368  0DB5               	rlf	___fldiv@rem+2,f
  3518  0369  0DB6               	rlf	___fldiv@rem+3,f
  3519  036A  0B89               	decfsz	9,f
  3520  036B  2B66               	goto	u1365
  3521  036C  3001               	movlw	1
  3522  036D                     u1375:	
  3523  036D  35AA               	lslf	___fldiv@b,f
  3524  036E  0DAB               	rlf	___fldiv@b+1,f
  3525  036F  0DAC               	rlf	___fldiv@b+2,f
  3526  0370  0DAD               	rlf	___fldiv@b+3,f
  3527  0371  0B89               	decfsz	9,f
  3528  0372  2B6D               	goto	u1375
  3529  0373  1BBD               	btfsc	___fldiv@grs+3,7
  3530  0374  142A               	bsf	___fldiv@b,0
  3531  0375  3001               	movlw	1
  3532  0376                     u1395:	
  3533  0376  35BA               	lslf	___fldiv@grs,f
  3534  0377  0DBB               	rlf	___fldiv@grs+1,f
  3535  0378  0DBC               	rlf	___fldiv@grs+2,f
  3536  0379  0DBD               	rlf	___fldiv@grs+3,f
  3537  037A  0B89               	decfsz	9,f
  3538  037B  2B76               	goto	u1395
  3539  037C                     l1499:	
  3540  037C  0829               	movf	___fldiv@a+3,w
  3541  037D  0236               	subwf	___fldiv@rem+3,w
  3542  037E  1D03               	skipz
  3543  037F  2B8A               	goto	u1405
  3544  0380  0828               	movf	___fldiv@a+2,w
  3545  0381  0235               	subwf	___fldiv@rem+2,w
  3546  0382  1D03               	skipz
  3547  0383  2B8A               	goto	u1405
  3548  0384  0827               	movf	___fldiv@a+1,w
  3549  0385  0234               	subwf	___fldiv@rem+1,w
  3550  0386  1D03               	skipz
  3551  0387  2B8A               	goto	u1405
  3552  0388  0826               	movf	___fldiv@a,w
  3553  0389  0233               	subwf	___fldiv@rem,w
  3554  038A                     u1405:	
  3555  038A  1C03               	skipc
  3556  038B  2B95               	goto	l1505
  3557  038C  173D               	bsf	___fldiv@grs+3,6
  3558  038D  0826               	movf	___fldiv@a,w
  3559  038E  02B3               	subwf	___fldiv@rem,f
  3560  038F  0827               	movf	___fldiv@a+1,w
  3561  0390  3BB4               	subwfb	___fldiv@rem+1,f
  3562  0391  0828               	movf	___fldiv@a+2,w
  3563  0392  3BB5               	subwfb	___fldiv@rem+2,f
  3564  0393  0829               	movf	___fldiv@a+3,w
  3565  0394  3BB6               	subwfb	___fldiv@rem+3,f
  3566  0395                     l1505:	
  3567  0395  3001               	movlw	1
  3568  0396  00AE               	movwf	??___fldiv
  3569  0397  082E               	movf	??___fldiv,w
  3570  0398  07BF               	addwf	___fldiv@aexp,f
  3571  0399  2B5E               	goto	l1507
  3572  039A                     l1509:	
  3573  039A  0836               	movf	___fldiv@rem+3,w
  3574  039B  0435               	iorwf	___fldiv@rem+2,w
  3575  039C  0434               	iorwf	___fldiv@rem+1,w
  3576  039D  0433               	iorwf	___fldiv@rem,w
  3577  039E  1D03               	btfss	3,2
  3578  039F  143A               	bsf	___fldiv@grs,0
  3579  03A0                     l1523:	
  3580  03A0  1BAC               	btfsc	___fldiv@b+2,7
  3581  03A1  2BB7               	goto	l1525
  3582  03A2  3001               	movlw	1
  3583  03A3                     u1435:	
  3584  03A3  35AA               	lslf	___fldiv@b,f
  3585  03A4  0DAB               	rlf	___fldiv@b+1,f
  3586  03A5  0DAC               	rlf	___fldiv@b+2,f
  3587  03A6  0DAD               	rlf	___fldiv@b+3,f
  3588  03A7  0B89               	decfsz	9,f
  3589  03A8  2BA3               	goto	u1435
  3590  03A9  1BBD               	btfsc	___fldiv@grs+3,7
  3591  03AA  142A               	bsf	___fldiv@b,0
  3592  03AB  3001               	movlw	1
  3593  03AC                     u1455:	
  3594  03AC  35BA               	lslf	___fldiv@grs,f
  3595  03AD  0DBB               	rlf	___fldiv@grs+1,f
  3596  03AE  0DBC               	rlf	___fldiv@grs+2,f
  3597  03AF  0DBD               	rlf	___fldiv@grs+3,f
  3598  03B0  0B89               	decfsz	9,f
  3599  03B1  2BAC               	goto	u1455
  3600  03B2  30FF               	movlw	255
  3601  03B3  07B8               	addwf	___fldiv@new_exp,f
  3602  03B4  30FF               	movlw	255
  3603  03B5  3DB9               	addwfc	___fldiv@new_exp+1,f
  3604  03B6  2BA0               	goto	l1523
  3605  03B7                     l1525:	
  3606  03B7  01BF               	clrf	___fldiv@aexp
  3607  03B8  1FBD               	btfss	___fldiv@grs+3,7
  3608  03B9  2BD0               	goto	l1535
  3609  03BA  30FF               	movlw	255
  3610  03BB  053A               	andwf	___fldiv@grs,w
  3611  03BC  00AE               	movwf	??___fldiv
  3612  03BD  30FF               	movlw	255
  3613  03BE  053B               	andwf	___fldiv@grs+1,w
  3614  03BF  00AF               	movwf	??___fldiv+1
  3615  03C0  30FF               	movlw	255
  3616  03C1  053C               	andwf	___fldiv@grs+2,w
  3617  03C2  00B0               	movwf	??___fldiv+2
  3618  03C3  307F               	movlw	127
  3619  03C4  053D               	andwf	___fldiv@grs+3,w
  3620  03C5  00B1               	movwf	??___fldiv+3
  3621  03C6  0831               	movf	??___fldiv+3,w
  3622  03C7  0430               	iorwf	??___fldiv+2,w
  3623  03C8  042F               	iorwf	??___fldiv+1,w
  3624  03C9  042E               	iorwf	??___fldiv,w
  3625  03CA  1903               	skipnz
  3626  03CB  182A               	btfsc	___fldiv@b,0
  3627  03CC  2BCE               	goto	l1531
  3628  03CD  2BD0               	goto	l1535
  3629  03CE                     l1531:	
  3630  03CE  01BF               	clrf	___fldiv@aexp
  3631  03CF  0ABF               	incf	___fldiv@aexp,f
  3632  03D0                     l1535:	
  3633  03D0  083F               	movf	___fldiv@aexp,w
  3634  03D1  1903               	btfsc	3,2
  3635  03D2  2BF9               	goto	l1545
  3636  03D3  3001               	movlw	1
  3637  03D4  07AA               	addwf	___fldiv@b,f
  3638  03D5  3000               	movlw	0
  3639  03D6  3DAB               	addwfc	___fldiv@b+1,f
  3640  03D7  3000               	movlw	0
  3641  03D8  3DAC               	addwfc	___fldiv@b+2,f
  3642  03D9  3000               	movlw	0
  3643  03DA  3DAD               	addwfc	___fldiv@b+3,f
  3644  03DB  1C2D               	btfss	___fldiv@b+3,0
  3645  03DC  2BF9               	goto	l1545
  3646  03DD  082A               	movf	___fldiv@b,w
  3647  03DE  00AE               	movwf	??___fldiv
  3648  03DF  082B               	movf	___fldiv@b+1,w
  3649  03E0  00AF               	movwf	??___fldiv+1
  3650  03E1  082C               	movf	___fldiv@b+2,w
  3651  03E2  00B0               	movwf	??___fldiv+2
  3652  03E3  082D               	movf	___fldiv@b+3,w
  3653  03E4  00B1               	movwf	??___fldiv+3
  3654  03E5  3001               	movlw	1
  3655  03E6  00B2               	movwf	??___fldiv+4
  3656  03E7                     u1525:	
  3657  03E7  37B1               	asrf	??___fldiv+3,f
  3658  03E8  0CB0               	rrf	??___fldiv+2,f
  3659  03E9  0CAF               	rrf	??___fldiv+1,f
  3660  03EA  0CAE               	rrf	??___fldiv,f
  3661  03EB  0BB2               	decfsz	??___fldiv+4,f
  3662  03EC  2BE7               	goto	u1525
  3663  03ED  0831               	movf	??___fldiv+3,w
  3664  03EE  00AD               	movwf	___fldiv@b+3
  3665  03EF  0830               	movf	??___fldiv+2,w
  3666  03F0  00AC               	movwf	___fldiv@b+2
  3667  03F1  082F               	movf	??___fldiv+1,w
  3668  03F2  00AB               	movwf	___fldiv@b+1
  3669  03F3  082E               	movf	??___fldiv,w
  3670  03F4  00AA               	movwf	___fldiv@b
  3671  03F5  3001               	movlw	1
  3672  03F6  07B8               	addwf	___fldiv@new_exp,f
  3673  03F7  3000               	movlw	0
  3674  03F8  3DB9               	addwfc	___fldiv@new_exp+1,f
  3675  03F9                     l1545:	
  3676  03F9  0839               	movf	___fldiv@new_exp+1,w
  3677  03FA  3A80               	xorlw	128
  3678  03FB  00AE               	movwf	??___fldiv
  3679  03FC  3080               	movlw	128
  3680  03FD  022E               	subwf	??___fldiv,w
  3681  03FE  1D03               	skipz
  3682  03FF  2C02               	goto	u1535
  3683  0400  30FF               	movlw	255
  3684  0401  0238               	subwf	___fldiv@new_exp,w
  3685  0402                     u1535:	
  3686  0402  1C03               	skipc
  3687  0403  2C11               	goto	l653
  3688  0404  30FF               	movlw	255
  3689  0405  0140               	movlb	0	; select bank0
  3690  0406  00B8               	movwf	___fldiv@new_exp
  3691  0407  3000               	movlw	0
  3692  0408  00B9               	movwf	___fldiv@new_exp+1
  3693  0409  3000               	movlw	0
  3694  040A  00AD               	movwf	___fldiv@b+3
  3695  040B  3000               	movlw	0
  3696  040C  00AC               	movwf	___fldiv@b+2
  3697  040D  3000               	movlw	0
  3698  040E  00AB               	movwf	___fldiv@b+1
  3699  040F  3000               	movlw	0
  3700  0410  00AA               	movwf	___fldiv@b
  3701  0411                     l653:	
  3702  0411  0140               	movlb	0	; select bank0
  3703  0412  0839               	movf	___fldiv@new_exp+1,w
  3704  0413  3A80               	xorlw	128
  3705  0414  00AE               	movwf	??___fldiv
  3706  0415  3080               	movlw	128
  3707  0416  022E               	subwf	??___fldiv,w
  3708  0417  1D03               	skipz
  3709  0418  2C1B               	goto	u1545
  3710  0419  3001               	movlw	1
  3711  041A  0238               	subwf	___fldiv@new_exp,w
  3712  041B                     u1545:	
  3713  041B  1803               	skipnc
  3714  041C  2C29               	goto	l654
  3715  041D  0140               	movlb	0	; select bank0
  3716  041E  01B8               	clrf	___fldiv@new_exp
  3717  041F  01B9               	clrf	___fldiv@new_exp+1
  3718  0420  3000               	movlw	0
  3719  0421  00AD               	movwf	___fldiv@b+3
  3720  0422  3000               	movlw	0
  3721  0423  00AC               	movwf	___fldiv@b+2
  3722  0424  3000               	movlw	0
  3723  0425  00AB               	movwf	___fldiv@b+1
  3724  0426  3000               	movlw	0
  3725  0427  00AA               	movwf	___fldiv@b
  3726  0428  01B7               	clrf	___fldiv@sign
  3727  0429                     l654:	
  3728  0429  0140               	movlb	0	; select bank0
  3729  042A  0838               	movf	___fldiv@new_exp,w
  3730  042B  00AE               	movwf	??___fldiv
  3731  042C  082E               	movf	??___fldiv,w
  3732  042D  00BE               	movwf	___fldiv@bexp
  3733  042E  1C3E               	btfss	___fldiv@bexp,0
  3734  042F  2C32               	goto	l1559
  3735  0430  17AC               	bsf	___fldiv@b+2,7
  3736  0431  2C36               	goto	l656
  3737  0432                     l1559:	
  3738  0432  307F               	movlw	127
  3739  0433  00AE               	movwf	??___fldiv
  3740  0434  082E               	movf	??___fldiv,w
  3741  0435  05AC               	andwf	___fldiv@b+2,f
  3742  0436                     l656:	
  3743  0436  363E               	lsrf	___fldiv@bexp,w
  3744  0437  00AE               	movwf	??___fldiv
  3745  0438  082E               	movf	??___fldiv,w
  3746  0439  00AD               	movwf	___fldiv@b+3
  3747  043A  2B1C               	goto	L2
  3748  043B                     __end_of___fldiv:	
  3749                           
  3750                           	psect	text13
  3751  06D9                     __ptext13:	
  3752 ;; *************** function ___flge *****************
  3753 ;; Defined at:
  3754 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
  3755 ;; Parameters:    Size  Location     Type
  3756 ;;  ff1             4    2[COMMON] unsigned char 
  3757 ;;  ff2             4    6[COMMON] unsigned char 
  3758 ;; Auto vars:     Size  Location     Type
  3759 ;;		None
  3760 ;; Return value:  Size  Location     Type
  3761 ;;		None               void
  3762 ;; Registers used:
  3763 ;;		wreg, status,2, status,0
  3764 ;; Tracked objects:
  3765 ;;		On entry : 0/0
  3766 ;;		On exit  : 0/0
  3767 ;;		Unchanged: 0/0
  3768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3769 ;;      Params:         8       0       0       0       0       0       0       0
  3770 ;;      Locals:         0       0       0       0       0       0       0       0
  3771 ;;      Temps:          0       4       0       0       0       0       0       0
  3772 ;;      Totals:         8       4       0       0       0       0       0       0
  3773 ;;Total ram usage:       12 bytes
  3774 ;; Hardware stack levels used:    1
  3775 ;; Hardware stack levels required when called:    1
  3776 ;; This function calls:
  3777 ;;		Nothing
  3778 ;; This function is called by:
  3779 ;;		_temperatureCheck
  3780 ;;		_FANFaultCheck
  3781 ;; This function uses a non-reentrant model
  3782 ;;
  3783                           
  3784                           
  3785                           ;psect for function ___flge
  3786  06D9                     ___flge:	
  3787                           
  3788                           ;incstack = 0
  3789                           ; Regs used in ___flge: [wreg+status,2+status,0]
  3790  06D9  3000               	movlw	0
  3791  06DA  0572               	andwf	___flge@ff1,w
  3792  06DB  0140               	movlb	0	; select bank0
  3793  06DC  00A0               	movwf	??___flge
  3794  06DD  3000               	movlw	0
  3795  06DE  0573               	andwf	___flge@ff1+1,w
  3796  06DF  00A1               	movwf	??___flge+1
  3797  06E0  3080               	movlw	128
  3798  06E1  0574               	andwf	___flge@ff1+2,w
  3799  06E2  00A2               	movwf	??___flge+2
  3800  06E3  307F               	movlw	127
  3801  06E4  0575               	andwf	___flge@ff1+3,w
  3802  06E5  00A3               	movwf	??___flge+3
  3803  06E6  0823               	movf	??___flge+3,w
  3804  06E7  0422               	iorwf	??___flge+2,w
  3805  06E8  0421               	iorwf	??___flge+1,w
  3806  06E9  0420               	iorwf	??___flge,w
  3807  06EA  1D03               	skipz
  3808  06EB  2EF4               	goto	l453
  3809  06EC  3000               	movlw	0
  3810  06ED  00F5               	movwf	___flge@ff1+3
  3811  06EE  3000               	movlw	0
  3812  06EF  00F4               	movwf	___flge@ff1+2
  3813  06F0  3000               	movlw	0
  3814  06F1  00F3               	movwf	___flge@ff1+1
  3815  06F2  3000               	movlw	0
  3816  06F3  00F2               	movwf	___flge@ff1
  3817  06F4                     l453:	
  3818  06F4  3000               	movlw	0
  3819  06F5  0576               	andwf	___flge@ff2,w
  3820  06F6  00A0               	movwf	??___flge
  3821  06F7  3000               	movlw	0
  3822  06F8  0577               	andwf	___flge@ff2+1,w
  3823  06F9  00A1               	movwf	??___flge+1
  3824  06FA  3080               	movlw	128
  3825  06FB  0578               	andwf	___flge@ff2+2,w
  3826  06FC  00A2               	movwf	??___flge+2
  3827  06FD  307F               	movlw	127
  3828  06FE  0579               	andwf	___flge@ff2+3,w
  3829  06FF  00A3               	movwf	??___flge+3
  3830  0700  0823               	movf	??___flge+3,w
  3831  0701  0422               	iorwf	??___flge+2,w
  3832  0702  0421               	iorwf	??___flge+1,w
  3833  0703  0420               	iorwf	??___flge,w
  3834  0704  1D03               	skipz
  3835  0705  2F0E               	goto	l1801
  3836  0706  3000               	movlw	0
  3837  0707  00F9               	movwf	___flge@ff2+3
  3838  0708  3000               	movlw	0
  3839  0709  00F8               	movwf	___flge@ff2+2
  3840  070A  3000               	movlw	0
  3841  070B  00F7               	movwf	___flge@ff2+1
  3842  070C  3000               	movlw	0
  3843  070D  00F6               	movwf	___flge@ff2
  3844  070E                     l1801:	
  3845  070E  1FF5               	btfss	___flge@ff1+3,7
  3846  070F  2F28               	goto	l1805
  3847  0710  3000               	movlw	0
  3848  0711  00A0               	movwf	??___flge
  3849  0712  3000               	movlw	0
  3850  0713  00A1               	movwf	??___flge+1
  3851  0714  3000               	movlw	0
  3852  0715  00A2               	movwf	??___flge+2
  3853  0716  3080               	movlw	128
  3854  0717  00A3               	movwf	??___flge+3
  3855  0718  0872               	movf	___flge@ff1,w
  3856  0719  02A0               	subwf	??___flge,f
  3857  071A  0873               	movf	___flge@ff1+1,w
  3858  071B  3BA1               	subwfb	??___flge+1,f
  3859  071C  0874               	movf	___flge@ff1+2,w
  3860  071D  3BA2               	subwfb	??___flge+2,f
  3861  071E  0875               	movf	___flge@ff1+3,w
  3862  071F  3BA3               	subwfb	??___flge+3,f
  3863  0720  0823               	movf	??___flge+3,w
  3864  0721  00F5               	movwf	___flge@ff1+3
  3865  0722  0822               	movf	??___flge+2,w
  3866  0723  00F4               	movwf	___flge@ff1+2
  3867  0724  0821               	movf	??___flge+1,w
  3868  0725  00F3               	movwf	___flge@ff1+1
  3869  0726  0820               	movf	??___flge,w
  3870  0727  00F2               	movwf	___flge@ff1
  3871  0728                     l1805:	
  3872  0728  1FF9               	btfss	___flge@ff2+3,7
  3873  0729  2F42               	goto	l456
  3874  072A  3000               	movlw	0
  3875  072B  00A0               	movwf	??___flge
  3876  072C  3000               	movlw	0
  3877  072D  00A1               	movwf	??___flge+1
  3878  072E  3000               	movlw	0
  3879  072F  00A2               	movwf	??___flge+2
  3880  0730  3080               	movlw	128
  3881  0731  00A3               	movwf	??___flge+3
  3882  0732  0876               	movf	___flge@ff2,w
  3883  0733  02A0               	subwf	??___flge,f
  3884  0734  0877               	movf	___flge@ff2+1,w
  3885  0735  3BA1               	subwfb	??___flge+1,f
  3886  0736  0878               	movf	___flge@ff2+2,w
  3887  0737  3BA2               	subwfb	??___flge+2,f
  3888  0738  0879               	movf	___flge@ff2+3,w
  3889  0739  3BA3               	subwfb	??___flge+3,f
  3890  073A  0823               	movf	??___flge+3,w
  3891  073B  00F9               	movwf	___flge@ff2+3
  3892  073C  0822               	movf	??___flge+2,w
  3893  073D  00F8               	movwf	___flge@ff2+2
  3894  073E  0821               	movf	??___flge+1,w
  3895  073F  00F7               	movwf	___flge@ff2+1
  3896  0740  0820               	movf	??___flge,w
  3897  0741  00F6               	movwf	___flge@ff2
  3898  0742                     l456:	
  3899  0742  3080               	movlw	128
  3900  0743  06F5               	xorwf	___flge@ff1+3,f
  3901  0744  3080               	movlw	128
  3902  0745  06F9               	xorwf	___flge@ff2+3,f
  3903  0746  0879               	movf	___flge@ff2+3,w
  3904  0747  0275               	subwf	___flge@ff1+3,w
  3905  0748  1D03               	skipz
  3906  0749  0008               	return
  3907  074A  0878               	movf	___flge@ff2+2,w
  3908  074B  0274               	subwf	___flge@ff1+2,w
  3909  074C  1D03               	skipz
  3910  074D  0008               	return
  3911  074E  0877               	movf	___flge@ff2+1,w
  3912  074F  0273               	subwf	___flge@ff1+1,w
  3913  0750  1D03               	skipz
  3914  0751  0008               	return
  3915  0752  0876               	movf	___flge@ff2,w
  3916  0753  0272               	subwf	___flge@ff1,w
  3917  0754  0008               	return
  3918  0755                     __end_of___flge:	
  3919                           
  3920                           	psect	text14
  3921  0EEE                     __ptext14:	
  3922 ;; *************** function _ledFaultCheck *****************
  3923 ;; Defined at:
  3924 ;;		line 386 in file "main.c"
  3925 ;; Parameters:    Size  Location     Type
  3926 ;;		None
  3927 ;; Auto vars:     Size  Location     Type
  3928 ;;		None
  3929 ;; Return value:  Size  Location     Type
  3930 ;;                  1    wreg      void 
  3931 ;; Registers used:
  3932 ;;		wreg, status,2, status,0
  3933 ;; Tracked objects:
  3934 ;;		On entry : 0/0
  3935 ;;		On exit  : 0/0
  3936 ;;		Unchanged: 0/0
  3937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3938 ;;      Params:         0       0       0       0       0       0       0       0
  3939 ;;      Locals:         0       0       0       0       0       0       0       0
  3940 ;;      Temps:          1       0       0       0       0       0       0       0
  3941 ;;      Totals:         1       0       0       0       0       0       0       0
  3942 ;;Total ram usage:        1 bytes
  3943 ;; Hardware stack levels used:    1
  3944 ;; Hardware stack levels required when called:    1
  3945 ;; This function calls:
  3946 ;;		Nothing
  3947 ;; This function is called by:
  3948 ;;		_ErrHanler
  3949 ;;		_main
  3950 ;; This function uses a non-reentrant model
  3951 ;;
  3952                           
  3953                           
  3954                           ;psect for function _ledFaultCheck
  3955  0EEE                     _ledFaultCheck:	
  3956                           
  3957                           ;main.c: 387:     if( (currentStatus == Normal) && (LATCbits.LATC2 == 1) && (PORTBbits.R
      +                          B0 == 0)){
  3958                           
  3959                           ;incstack = 0
  3960                           ; Regs used in _ledFaultCheck: [wreg+status,2+status,0]
  3961  0EEE  087A               	movf	_currentStatus,w
  3962  0EEF  1D03               	btfss	3,2
  3963  0EF0  2EFD               	goto	l1861
  3964  0EF1  0140               	movlb	0	; select bank0
  3965  0EF2  191A               	btfsc	26,2	;volatile
  3966  0EF3  180D               	btfsc	13,0	;volatile
  3967  0EF4  2EFD               	goto	l1861
  3968                           
  3969                           ;main.c: 389:             currentStatus = Error;
  3970  0EF5  3002               	movlw	2
  3971  0EF6  00F2               	movwf	??_ledFaultCheck
  3972  0EF7  0872               	movf	??_ledFaultCheck,w
  3973  0EF8  00FA               	movwf	_currentStatus
  3974                           
  3975                           ;main.c: 390:             errReason = LEDDrvErr;
  3976  0EF9  3004               	movlw	4
  3977  0EFA  00F2               	movwf	??_ledFaultCheck
  3978  0EFB  0872               	movf	??_ledFaultCheck,w
  3979  0EFC  00FB               	movwf	_errReason
  3980  0EFD                     l1861:	
  3981                           
  3982                           ;main.c: 392:     if((currentStatus == Error) && (errReason == LEDDrvErr) &&(LATCbits.LA
      +                          TC2 == 1) && (PORTBbits.RB0 == 1)){
  3983  0EFD  3002               	movlw	2
  3984  0EFE  067A               	xorwf	_currentStatus,w
  3985  0EFF  1D03               	btfss	3,2
  3986  0F00  0008               	return
  3987  0F01  3004               	movlw	4
  3988  0F02  067B               	xorwf	_errReason,w
  3989  0F03  1D03               	btfss	3,2
  3990  0F04  0008               	return
  3991  0F05  0140               	movlb	0	; select bank0
  3992  0F06  1D1A               	btfss	26,2	;volatile
  3993  0F07  0008               	return
  3994  0F08  1C0D               	btfss	13,0	;volatile
  3995  0F09  0008               	return
  3996                           
  3997                           ;main.c: 393:         currentStatus = Normal;
  3998  0F0A  01FA               	clrf	_currentStatus
  3999                           
  4000                           ;main.c: 394:         errReason = NoErr;
  4001  0F0B  01FB               	clrf	_errReason
  4002  0F0C  0008               	return
  4003  0F0D                     __end_of_ledFaultCheck:	
  4004                           
  4005                           	psect	text15
  4006  0F2D                     __ptext15:	
  4007 ;; *************** function _ErrFlush *****************
  4008 ;; Defined at:
  4009 ;;		line 349 in file "main.c"
  4010 ;; Parameters:    Size  Location     Type
  4011 ;;  count           2    2[COMMON] int 
  4012 ;; Auto vars:     Size  Location     Type
  4013 ;;  i               2    6[COMMON] int 
  4014 ;; Return value:  Size  Location     Type
  4015 ;;                  1    wreg      void 
  4016 ;; Registers used:
  4017 ;;		wreg, status,2
  4018 ;; Tracked objects:
  4019 ;;		On entry : 0/0
  4020 ;;		On exit  : 0/0
  4021 ;;		Unchanged: 0/0
  4022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4023 ;;      Params:         2       0       0       0       0       0       0       0
  4024 ;;      Locals:         2       0       0       0       0       0       0       0
  4025 ;;      Temps:          2       0       0       0       0       0       0       0
  4026 ;;      Totals:         6       0       0       0       0       0       0       0
  4027 ;;Total ram usage:        6 bytes
  4028 ;; Hardware stack levels used:    1
  4029 ;; Hardware stack levels required when called:    1
  4030 ;; This function calls:
  4031 ;;		Nothing
  4032 ;; This function is called by:
  4033 ;;		_FANFaultCheck
  4034 ;;		_ErrHanler
  4035 ;; This function uses a non-reentrant model
  4036 ;;
  4037                           
  4038                           
  4039                           ;psect for function _ErrFlush
  4040  0F2D                     _ErrFlush:	
  4041                           
  4042                           ;main.c: 350:     TRISCbits.TRISC0 = 1;
  4043                           
  4044                           ;incstack = 0
  4045                           ; Regs used in _ErrFlush: [wreg+status,2]
  4046  0F2D  0140               	movlb	0	; select bank0
  4047  0F2E  1414               	bsf	20,0	;volatile
  4048                           
  4049                           ;main.c: 351:     _delay((unsigned long)((1000)*(32000000/4000.0)));
  4050  0F2F  3029               	movlw	41
  4051  0F30  00F5               	movwf	??_ErrFlush+1
  4052  0F31  3096               	movlw	150
  4053  0F32  00F4               	movwf	??_ErrFlush
  4054  0F33  307F               	movlw	127
  4055  0F34                     u3017:	
  4056  0F34  0B89               	decfsz	9,f
  4057  0F35  2F34               	goto	u3017
  4058  0F36  0BF4               	decfsz	??_ErrFlush,f
  4059  0F37  2F34               	goto	u3017
  4060  0F38  0BF5               	decfsz	??_ErrFlush+1,f
  4061  0F39  2F34               	goto	u3017
  4062  0F3A  0000               	nop
  4063                           
  4064                           ;main.c: 352:     LATCbits.LATC0 = 1;
  4065  0F3B  0140               	movlb	0	; select bank0
  4066  0F3C  141A               	bsf	26,0	;volatile
  4067                           
  4068                           ;main.c: 353:     for(int i=0;i<count; i++){
  4069  0F3D  01F6               	clrf	ErrFlush@i
  4070  0F3E  01F7               	clrf	ErrFlush@i+1
  4071  0F3F                     l132:	
  4072  0F3F  0877               	movf	ErrFlush@i+1,w
  4073  0F40  3A80               	xorlw	128
  4074  0F41  00F4               	movwf	??_ErrFlush
  4075  0F42  0873               	movf	ErrFlush@count+1,w
  4076  0F43  3A80               	xorlw	128
  4077  0F44  0274               	subwf	??_ErrFlush,w
  4078  0F45  1D03               	skipz
  4079  0F46  2F49               	goto	u2045
  4080  0F47  0872               	movf	ErrFlush@count,w
  4081  0F48  0276               	subwf	ErrFlush@i,w
  4082  0F49                     u2045:	
  4083  0F49  1803               	btfsc	3,0
  4084  0F4A  0008               	return
  4085                           
  4086                           ;main.c: 354:         TRISCbits.TRISC0 = 0;
  4087  0F4B  0140               	movlb	0	; select bank0
  4088  0F4C  1014               	bcf	20,0	;volatile
  4089                           
  4090                           ;main.c: 355:         _delay((unsigned long)((300)*(32000000/4000.0)));
  4091  0F4D  300D               	movlw	13
  4092  0F4E  00F5               	movwf	??_ErrFlush+1
  4093  0F4F  302D               	movlw	45
  4094  0F50  00F4               	movwf	??_ErrFlush
  4095  0F51  30D8               	movlw	216
  4096  0F52                     u3027:	
  4097  0F52  0B89               	decfsz	9,f
  4098  0F53  2F52               	goto	u3027
  4099  0F54  0BF4               	decfsz	??_ErrFlush,f
  4100  0F55  2F52               	goto	u3027
  4101  0F56  0BF5               	decfsz	??_ErrFlush+1,f
  4102  0F57  2F52               	goto	u3027
  4103                           
  4104                           ;main.c: 356:         TRISCbits.TRISC0 = 1;
  4105  0F58  0140               	movlb	0	; select bank0
  4106  0F59  1414               	bsf	20,0	;volatile
  4107                           
  4108                           ;main.c: 357:         _delay((unsigned long)((300)*(32000000/4000.0)));
  4109  0F5A  300D               	movlw	13
  4110  0F5B  00F5               	movwf	??_ErrFlush+1
  4111  0F5C  302D               	movlw	45
  4112  0F5D  00F4               	movwf	??_ErrFlush
  4113  0F5E  30D8               	movlw	216
  4114  0F5F                     u3037:	
  4115  0F5F  0B89               	decfsz	9,f
  4116  0F60  2F5F               	goto	u3037
  4117  0F61  0BF4               	decfsz	??_ErrFlush,f
  4118  0F62  2F5F               	goto	u3037
  4119  0F63  0BF5               	decfsz	??_ErrFlush+1,f
  4120  0F64  2F5F               	goto	u3037
  4121                           
  4122                           ;main.c: 358:     }
  4123  0F65  3001               	movlw	1
  4124  0F66  07F6               	addwf	ErrFlush@i,f
  4125  0F67  3000               	movlw	0
  4126  0F68  3DF7               	addwfc	ErrFlush@i+1,f
  4127  0F69  2F3F               	goto	l132
  4128  0F6A                     __end_of_ErrFlush:	
  4129                           
  4130                           	psect	intentry
  4131  0004                     __pintentry:	
  4132 ;; *************** function _int_handler *****************
  4133 ;; Defined at:
  4134 ;;		line 451 in file "main.c"
  4135 ;; Parameters:    Size  Location     Type
  4136 ;;		None
  4137 ;; Auto vars:     Size  Location     Type
  4138 ;;		None
  4139 ;; Return value:  Size  Location     Type
  4140 ;;                  1    wreg      void 
  4141 ;; Registers used:
  4142 ;;		wreg, status,2, status,0
  4143 ;; Tracked objects:
  4144 ;;		On entry : 0/0
  4145 ;;		On exit  : 0/0
  4146 ;;		Unchanged: 0/0
  4147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4148 ;;      Params:         0       0       0       0       0       0       0       0
  4149 ;;      Locals:         0       0       0       0       0       0       0       0
  4150 ;;      Temps:          2       0       0       0       0       0       0       0
  4151 ;;      Totals:         2       0       0       0       0       0       0       0
  4152 ;;Total ram usage:        2 bytes
  4153 ;; Hardware stack levels used:    1
  4154 ;; This function calls:
  4155 ;;		Nothing
  4156 ;; This function is called by:
  4157 ;;		Interrupt level 1
  4158 ;; This function uses a non-reentrant model
  4159 ;;
  4160                           
  4161  0004                     _int_handler:	
  4162                           
  4163                           ;incstack = 0
  4164  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  4165                           
  4166                           ; Regs used in _int_handler: [wreg+status,2+status,0]
  4167  0005  3180               	pagesel	$
  4168                           
  4169                           ;main.c: 454:     if(PIE0bits.IOCIE && IOCAF7 ){
  4170  0006  014E               	movlb	14	; select bank14
  4171  0007  1E16               	btfss	22,4	;volatile
  4172  0008  2849               	goto	i1l1991
  4173  0009  017E               	movlb	62	; select bank62
  4174  000A  1FBF               	btfss	63,7	;volatile
  4175  000B  2849               	goto	i1l1991
  4176                           
  4177                           ;main.c: 455:          IOCAF7 = 0;
  4178  000C  13BF               	bcf	63,7	;volatile
  4179                           
  4180                           ;main.c: 456:          if(currentStatus == Normal){
  4181  000D  087A               	movf	_currentStatus,w
  4182  000E  1D03               	btfss	3,2
  4183  000F  2849               	goto	i1l1991
  4184                           
  4185                           ;main.c: 458:             _delay((unsigned long)((150)*(32000000/4000.0)));
  4186  0010  3007               	movlw	7
  4187  0011  00F1               	movwf	??_int_handler+1
  4188  0012  3017               	movlw	23
  4189  0013  00F0               	movwf	??_int_handler
  4190  0014  306A               	movlw	106
  4191  0015                     u304_27:	
  4192  0015  0B89               	decfsz	9,f
  4193  0016  2815               	goto	u304_27
  4194  0017  0BF0               	decfsz	??_int_handler,f
  4195  0018  2815               	goto	u304_27
  4196  0019  0BF1               	decfsz	??_int_handler+1,f
  4197  001A  2815               	goto	u304_27
  4198  001B  3200               	nop2
  4199                           
  4200                           ;main.c: 459:             if(PORTAbits.RA7 == 0){
  4201  001C  0140               	movlb	0	; select bank0
  4202  001D  1B8C               	btfsc	12,7	;volatile
  4203  001E  2838               	goto	i1l1981
  4204                           
  4205                           ;main.c: 461:                 LATCbits.LATC2 = ~LATCbits.LATC2;
  4206  001F  1003               	clrc
  4207  0020  1D1A               	btfss	26,2	;volatile
  4208  0021  1403               	setc
  4209  0022  1C03               	btfss	3,0
  4210  0023  2827               	goto	u232_20
  4211  0024  0140               	movlb	0	; select bank0
  4212  0025  151A               	bsf	26,2	;volatile
  4213  0026  2829               	goto	u233_24
  4214  0027                     u232_20:	
  4215  0027  0140               	movlb	0	; select bank0
  4216  0028  111A               	bcf	26,2	;volatile
  4217  0029                     u233_24:	
  4218                           
  4219                           ;main.c: 462:                 LATCbits.LATC5 = ~LATCbits.LATC5;
  4220  0029  1003               	clrc
  4221  002A  1E9A               	btfss	26,5	;volatile
  4222  002B  1403               	setc
  4223  002C  1C03               	btfss	3,0
  4224  002D  2831               	goto	u234_20
  4225  002E  0140               	movlb	0	; select bank0
  4226  002F  169A               	bsf	26,5	;volatile
  4227  0030  2833               	goto	i1l1977
  4228  0031                     u234_20:	
  4229  0031  0140               	movlb	0	; select bank0
  4230  0032  129A               	bcf	26,5	;volatile
  4231  0033                     i1l1977:	
  4232                           
  4233                           ;main.c: 465:                 if(LATCbits.LATC2 == 1){
  4234  0033  1D1A               	btfss	26,2	;volatile
  4235  0034  2837               	goto	i1l180
  4236                           
  4237                           ;main.c: 466:                     LATCbits.LATC7 = 1;
  4238  0035  179A               	bsf	26,7	;volatile
  4239                           
  4240                           ;main.c: 467:                 }else {
  4241  0036  2838               	goto	i1l1981
  4242  0037                     i1l180:	
  4243                           
  4244                           ;main.c: 468:                     LATCbits.LATC7 = 0;
  4245  0037  139A               	bcf	26,7	;volatile
  4246  0038                     i1l1981:	
  4247                           
  4248                           ;main.c: 474:             TMR0H = 0xFD;
  4249  0038  30FD               	movlw	253
  4250  0039  014B               	movlb	11	; select bank11
  4251  003A  009D               	movwf	29	;volatile
  4252                           
  4253                           ;main.c: 475:             TMR0L = 0;
  4254  003B  019C               	clrf	28	;volatile
  4255                           
  4256                           ;main.c: 476:             TMR0IF = 0;
  4257  003C  014E               	movlb	14	; select bank14
  4258  003D  128C               	bcf	12,5	;volatile
  4259                           
  4260                           ;main.c: 477:             timerCounter = 0;
  4261  003E  3000               	movlw	0
  4262  003F  0141               	movlb	1	; select bank1
  4263  0040  00BB               	movwf	(_timerCounter+3)^(0+128)
  4264  0041  3000               	movlw	0
  4265  0042  00BA               	movwf	(_timerCounter+2)^(0+128)
  4266  0043  3000               	movlw	0
  4267  0044  00B9               	movwf	(_timerCounter+1)^(0+128)
  4268  0045  3000               	movlw	0
  4269  0046  00B8               	movwf	_timerCounter^(0+128)
  4270                           
  4271                           ;main.c: 478:             TMR0IE = 1;
  4272  0047  014E               	movlb	14	; select bank14
  4273  0048  1696               	bsf	22,5	;volatile
  4274  0049                     i1l1991:	
  4275                           
  4276                           ;main.c: 483:     if(TMR0IE && TMR0IF){
  4277  0049  014E               	movlb	14	; select bank14
  4278  004A  1A96               	btfsc	22,5	;volatile
  4279  004B  1E8C               	btfss	12,5	;volatile
  4280  004C  2871               	goto	i1l182
  4281                           
  4282                           ;main.c: 485:         TMR0IF = 0;
  4283  004D  128C               	bcf	12,5	;volatile
  4284                           
  4285                           ;main.c: 487:         if(currentStatus == Normal){
  4286  004E  087A               	movf	_currentStatus,w
  4287  004F  1D03               	btfss	3,2
  4288  0050  2871               	goto	i1l182
  4289                           
  4290                           ;main.c: 489:             if(timerCounter <= lightingOffDelay){
  4291  0051  0141               	movlb	1	; select bank1
  4292  0052  083B               	movf	(_timerCounter+3)^(0+128),w
  4293  0053  0247               	subwf	(_lightingOffDelay+3)^(0+128),w
  4294  0054  1D03               	skipz
  4295  0055  2860               	goto	u240_25
  4296  0056  083A               	movf	(_timerCounter+2)^(0+128),w
  4297  0057  0246               	subwf	(_lightingOffDelay+2)^(0+128),w
  4298  0058  1D03               	skipz
  4299  0059  2860               	goto	u240_25
  4300  005A  0839               	movf	(_timerCounter+1)^(0+128),w
  4301  005B  0245               	subwf	(_lightingOffDelay+1)^(0+128),w
  4302  005C  1D03               	skipz
  4303  005D  2860               	goto	u240_25
  4304  005E  0838               	movf	_timerCounter^(0+128),w
  4305  005F  0244               	subwf	_lightingOffDelay^(0+128),w
  4306  0060                     u240_25:	
  4307  0060  1C03               	skipc
  4308  0061  286B               	goto	i1l184
  4309                           
  4310                           ;main.c: 491:                 timerCounter++;
  4311  0062  3001               	movlw	1
  4312  0063  07B8               	addwf	_timerCounter^(0+128),f
  4313  0064  3000               	movlw	0
  4314  0065  3DB9               	addwfc	(_timerCounter+1)^(0+128),f
  4315  0066  3000               	movlw	0
  4316  0067  3DBA               	addwfc	(_timerCounter+2)^(0+128),f
  4317  0068  3000               	movlw	0
  4318  0069  3DBB               	addwfc	(_timerCounter+3)^(0+128),f
  4319                           
  4320                           ;main.c: 492:             }
  4321  006A  2871               	goto	i1l182
  4322  006B                     i1l184:	
  4323                           ;main.c: 493:             else{
  4324                           
  4325                           
  4326                           ;main.c: 494:                 TMR0IE = 0;
  4327  006B  014E               	movlb	14	; select bank14
  4328  006C  1296               	bcf	22,5	;volatile
  4329                           
  4330                           ;main.c: 495:                 LATCbits.LATC2 = 0;
  4331  006D  0140               	movlb	0	; select bank0
  4332  006E  111A               	bcf	26,2	;volatile
  4333                           
  4334                           ;main.c: 496:                 LATCbits.LATC5 = 0;
  4335  006F  129A               	bcf	26,5	;volatile
  4336                           
  4337                           ;main.c: 497:                 LATCbits.LATC7 = 0;
  4338  0070  139A               	bcf	26,7	;volatile
  4339  0071                     i1l182:	
  4340                           ;main.c: 501:     }
  4341                           
  4342                           
  4343                           ;main.c: 504:     if(PIE1bits.ADIE && PIR1bits.ADIF){
  4344  0071  014E               	movlb	14	; select bank14
  4345  0072  1817               	btfsc	23,0	;volatile
  4346  0073  080D               	movf	13,w	;volatile
  4347  0074  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  4348  0075  0009               	retfie
  4349  0076                     __end_of_int_handler:	
  4350  007E                     btemp	set	126	;btemp
  4351  007E                     int$flags	set	126
  4352  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    16
    Data        4
    BSS         29
    Persistent  33
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     79      79
    BANK1            80      8      40
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _initDIA->_read_DIA
    _FANFaultCheck->___flge
    _temperatureCheck->___flge
    _getNTCV->___xxtofl
    ___flmul->___xxtofl
    ___fldiv->___xxtofl

Critical Paths under _int_handler in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_FANFaultCheck
    _FANFaultCheck->_getNTCV
    _ErrHanler->_temperatureCheck
    _temperatureCheck->_getNTCV
    _getNTCV->___flmul
    ___flmul->___fldiv
    ___fldiv->___xxtofl

Critical Paths under _int_handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _int_handler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _int_handler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _int_handler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _int_handler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _int_handler in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _int_handler in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     4      4   23182
                                              0 BANK1      8     4      4
                          _ErrHanler
                      _FANFaultCheck
                     _HeartBeatFlush
                               _init
                      _ledFaultCheck
                   _temperatureCheck
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0     652
                            _initDIA
 ---------------------------------------------------------------------------------
 (2) _initDIA                                              0     0      0     652
                           _read_DIA
 ---------------------------------------------------------------------------------
 (3) _read_DIA                                             2     0      2     652
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _HeartBeatFlush                                       2     2      0       0
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _FANFaultCheck                                        4     4      0    7682
                                             75 BANK0      4     4      0
                           _ErrFlush
                             ___flge
                            _getNTCV
 ---------------------------------------------------------------------------------
 (1) _ErrHanler                                            2     2      0    7617
                                             76 BANK0      2     2      0
                           _ErrFlush
                      _ledFaultCheck
                   _temperatureCheck
 ---------------------------------------------------------------------------------
 (1) _temperatureCheck                                     1     1      0    7191
                                             75 BANK0      1     1      0
                             ___flge
                            _getNTCV
 ---------------------------------------------------------------------------------
 (2) _getNTCV                                             17    13      4    6097
                                             58 BANK0     17    13      4
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     550
                                              2 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    3713
                                             32 BANK0     26    18      8
                          __Umul8_16
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     980
                                              2 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             26    18      8    1425
                                              6 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    1094
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _ledFaultCheck                                        1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ErrFlush                                             6     4      2     426
                                              2 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _int_handler                                          2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ErrHanler
     _ErrFlush
     _ledFaultCheck
     _temperatureCheck
       ___flge
       _getNTCV
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
   _FANFaultCheck
     _ErrFlush
     ___flge
     _getNTCV
       ___fldiv
         ___xxtofl (ARG)
       ___flmul
         __Umul8_16
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
   _HeartBeatFlush
   _init
     _initDIA
       _read_DIA
   _ledFaultCheck
   _temperatureCheck
     ___flge
     _getNTCV
       ___fldiv
         ___xxtofl (ARG)
       ___flmul
         __Umul8_16
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl

 _int_handler (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      83       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     4F      4F       6       98.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      8      28       8       50.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      83      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Jul 29 17:01:56 2020

             ___fldiv@aexp 003F               ___fldiv@bexp 003E               ___fldiv@sign 0037  
             _FanFBUpLimit 0802                __CFG_CP$OFF 0000                         l97 0EC9  
            _FanFBLowLimit 07FE        __Umul8_16@word_mpld 0022                        l106 0694  
                      l203 0FE6                        l132 0F3F                        l109 06BB  
  __size_of_HeartBeatFlush 001E                        l166 0F6F                        l193 0FED  
                      l453 06F4                        l710 05E0                        l456 0742  
                      l632 030A                        l723 062A                        l724 0634  
                      l716 0616                        l653 0411                        l654 0429  
                      l656 0436                        l729 0F1E                        l684 02B4  
                      _GIE 005F               __CFG_BORV$LO 0000                        wreg 0009  
             ___flmul@aexp 004E               ___flmul@bexp 0053               ___flmul@sign 004D  
             ___flmul@temp 0058               ___flmul@prod 0054              __CFG_BBEN$OFF 0000  
             __CFG_LVP$OFF 0000               __CFG_ZCD$OFF 0000                       l2121 00AF  
                     l2211 024A                       l2203 021C                       l2123 00B1  
                     l2205 0233                       l2141 00D4                       l2125 00B9  
                     l2301 05BF                       l2215 024C                       l2151 00EA  
                     l2143 00DC                       l2311 07B9                       l1505 0395  
                     l2225 0275                       l2313 07F6                       l2305 07CF  
                     l1531 03CE                       l1523 03A0                       l1507 035E  
                     l1443 02DE                       l2235 02A1                       l2139 00D2  
                     l2331 0F7C                       l1525 03B7                       l1509 039A  
                     l1445 02E6                       l2229 028A                       l2261 0456  
                     l2333 0F86                       l2309 07D1                       l1535 03D0  
                     l1463 0302                       l1439 02DB                       l1711 05D8  
                     l2271 04AF                       l2335 0F90                       l1801 070E  
                     l1545 03F9                       l1473 0329                       l2097 0F18  
                     l1721 05F3                       l2273 04B7                       l2329 0F72  
                     l2433 0FF6                       l2353 0FBF                       l1459 02FF  
                     l1731 0628                       l1723 0603                       l2259 044E  
                     l2291 0588                       l2435 0FA0                       l2339 0F97  
                     l2371 0FEA                       l2363 0FD5                       l1805 0728  
                     l1733 061B                       l1717 05EF                       l2365 0FDA  
                     l2349 0FB6                       l1559 0432                       l1479 0335  
                     l2287 0568                       l2367 0FDE                       l2375 0FED  
                     l1745 064F                       l2297 05A5                       l1499 037C  
                     l1861 0EFD                       l1893 06B2                       l1897 06C6  
                     _ADFM 04F7                       _T0EN 2CF7                       u2045 0F49  
                     u1405 038A                       u3007 04B3                       u3017 0F34  
                     u3027 0F52                       u1435 03A3                       u3037 0F5F  
                     u1525 03E7                       u1365 0366                       u1535 0402  
                     u1455 03AC                       u1375 036D                       u1545 041B  
                     u1395 0376                       u2605 01E5                       u2615 01FC  
                     u2625 020B                       u2635 021F                       u2485 0F1F  
                     u2725 0263                       u2735 027E                       u2655 0228  
                     u1935 063C                       u1855 05FC                       u2745 0294  
                     u2585 0160                       u2595 018F                       u1875 0610  
                     u2925 0FCC                       u1895 0622                       u2957 0ED8  
                     u2967 0EE5                       u2977 0449                       u2987 0452  
                     u2997 04AA                       _main 0FAF                       _init 0658  
                     fsr0h 0005                       indf0 0000                       fsr0l 0004  
                     btemp 007E                       start 0076            ___fldiv@new_exp 0038  
            __CFG_CSWEN$ON 0000              __CFG_MCLRE$ON 0000          ?_temperatureCheck 0070  
                    ?_main 00BC                      ?_init 0070            __end_of___fldiv 043B  
                    _ADRES 009B              __CFG_WDTE$OFF 0000            __end_of___flmul 02C1  
                    i1l180 0037                      i1l182 0071                      i1l184 006B  
                    _FVREN 4867                      _TMR0H 059D                      _TMR0L 059C  
       ??_temperatureCheck 006B            __end_of_getNTCV 0518             __CFG_FCMEN$OFF 0000  
             ?_int_handler 0070              __CFG_WRTB$OFF 0000              __CFG_WRTC$OFF 0000  
          __end_of_initDIA 07B5             __CFG_BOREN$OFF 0000                      status 0003  
                    wtemp0 007E      __end_of_FANFaultCheck 07FE            __initialization 0078  
         __end_of_ErrFlush 0F6A               __end_of_main 1000               __end_of_init 06D9  
           __CFG_SAFEN$OFF 0000                     ??_main 00C0                     ??_init 0074  
              read_DIA@Add 0072         __size_of_ErrHanler 0045                     _IOCAF7 F9FF  
                   _IOCAN7 F9F7                     i1l1981 0038                     i1l1991 0049  
                   i1l1977 0033             __CFG_WDTCCS$SC 0000                     u232_20 0027  
                   u240_25 0060                     u304_27 0015                     u233_24 0029  
                   u234_20 0031                     _FVRRDY 4866                     _TMR0IE 38B5  
                   _TMR0IF 3865           __end_of___xxtofl 0658             __CFG_PWRTE$OFF 0000  
                   ___flge 06D9                  ??___fldiv 002E                  ??___flmul 0048  
         __end_of_read_DIA 0ED0                  ??_getNTCV 005E             _HeartBeatFlush 0ED0  
                ??_initDIA 0074         __size_of__Umul8_16 0020                 ___flge@ff1 0072  
               ___flge@ff2 0076               ___xxtofl@arg 0022               ___xxtofl@exp 0021  
             ___xxtofl@val 0072    __end_of__initialization 0091               _getNTCV$1091 005F  
           __pcstackCOMMON 0070          __end_of_ErrHanler 0FAF               __pidataBANK1 0EB8  
           main@checkCount 00C2     __end_of_HeartBeatFlush 0EEE      __end_of_ledFaultCheck 0F0D  
         _lightingOffDelay 00C4              _currentStatus 007A       __size_of_int_handler 0072  
                ?_ErrFlush 0072                 __pbssBANK1 00A0                 __pnvCOMMON 007A  
        __end_of__Umul8_16 0F2D                 __pmaintext 0FAF                    ?___flge 0072  
          __CFG_PPS1WAY$ON 0000                 __pintentry 0004            ?_HeartBeatFlush 0070  
                  _T016BIT 2CF4                  ?___xxtofl 0072                    _NVMADRH 081B  
                  _NVMADRL 081A                    _NVMDATH 081D                    _NVMDATL 081C  
               ??_ErrFlush 0074  __size_of_temperatureCheck 00AA                  ?_read_DIA 0072  
          __size_of___flge 007C                    ___fldiv 02C1                    ___flmul 0095  
          __CFG_STVREN$OFF 0000                  _DIA_Table 00A0                    _getNTCV 043B  
                  __ptext1 0658                    __ptext2 0755                    __ptext3 0EC2  
                  __ptext4 0ED0                    __ptext5 07B5                    __ptext6 0F6A  
                  __ptext7 0518                    __ptext8 043B                    __ptext9 05C2  
               getNTCV@VDD 0063                    _intNTCV 00B4            __CFG_WRTAPP$OFF 0000  
                  _initDIA 0755                    _extNTCV 00B0                 ??___xxtofl 0076  
          __CFG_WRTSAF$OFF 0000                    clrloop0 0EBD       end_of_initialization 0091  
               ??_read_DIA 0074      __CFG_WDTCPS$WDTCPS_31 0000                  _PORTAbits 000C  
                _PORTBbits 000D                  ErrFlush@i 0076              ___xxtofl@sign 0020  
   __size_of_FANFaultCheck 0049                  _TRISAbits 0012                  _TRISBbits 0013  
                _TRISCbits 0014                ___fldiv@grs 003A                ___fldiv@rem 0033  
         __CFG_FEXTOSC$OFF 0000                ___flmul@grs 004F                 _upperLimit 080A  
    __end_of_FanFBLowLimit 0802             __end_of___flge 0755                  _ErrHanler 0F6A  
      start_initialization 0078           _temperatureCheck 0518          __size_of_ErrFlush 003D  
            _FANFaultCheck 07B5           ??_HeartBeatFlush 0072           __CFG_LPBOREN$OFF 0000  
                 ??___flge 0020                  __Umul8_16 0F0D                __pdataBANK1 00C4  
               ?_ErrHanler 0070                  ___fldiv@a 0026                  ___fldiv@b 002A  
                ___flmul@a 0044                  ___flmul@b 0040                __pbssCOMMON 007B  
                ___latbits 0001              ??_int_handler 0070              __pcstackBANK0 0020  
            __pcstackBANK1 00BC          __size_of___xxtofl 0096          __size_of_read_DIA 000E  
           ?_FANFaultCheck 0070     __size_of_ledFaultCheck 001F                   ?___fldiv 0026  
                 ?___flmul 0040                 ?__Umul8_16 0072                   ?_getNTCV 005A  
     __end_of_restoreLevel 080A                   ?_initDIA 0070                  _errReason 007B  
     __CFG_RSTOSC$HFINTPLL 0000        __end_of_int_handler 0076                   _LATCbits 001A  
                clear_ram0 0EBC                   _PIE0bits 0716                   _PIE1bits 0717  
                 _PIR1bits 070D          __CFG_BBSIZE$BB512 0000                ??_ErrHanler 006C  
               _ADCON0bits 009D                 _ADCON1bits 009E              _ledFaultCheck 0EEE  
FANFaultCheck@fanFBVoltage 006B             getNTCV@channel 005A       __end_of_FanFBUpLimit 0806  
                 _ErrFlush 0F2D            ??_FANFaultCheck 007A             getNTCV@voltage 0067  
              ??__Umul8_16 0074           __size_of___fldiv 017A           __size_of___flmul 022C  
 __end_of_temperatureCheck 05C2           __size_of_getNTCV 00DD                 _ANSELAbits 1F38  
               _ANSELBbits 1F43                 _ANSELCbits 1F4E             ?_ledFaultCheck 0070  
         __size_of_initDIA 0060                   ___xxtofl 05C2                 _T0CON1bits 059F  
              _int_handler 0004                   __ptext10 0095                   __ptext11 0F0D  
                 __ptext12 02C1                   __ptext13 06D9                   __ptext14 0EEE  
                 __ptext15 0F2D                   _read_DIA 0EC2              __size_of_main 0051  
            __size_of_init 0081       __CFG_WDTCWS$WDTCWS_7 0000                   int$flags 007E  
                 main@argc 00BC                   main@argv 00BE                 _INTCONbits 000B  
              _NVMCON1bits 081E                 _FVRCONbits 090C                   intlevel1 0000  
             _timerCounter 00B8               _restoreLevel 0806          __CFG_CLKOUTEN$OFF 0000  
          ??_ledFaultCheck 0072              __pstringtext1 07FE              __pstringtext2 0802  
            __pstringtext3 0806              __pstringtext4 080A     __Umul8_16@multiplicand 0072  
            ErrFlush@count 0072         __end_of_upperLimit 080E       __Umul8_16@multiplier 0024  
        __Umul8_16@product 0020  
