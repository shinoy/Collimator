

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Jul 26 19:33:00 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F15354
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	stringtext4,global,class=STRCODE,delta=2
     8                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	intentry,global,class=CODE,delta=2
    33                           	dabs	1,0x7E,2
    34  0000                     
    35                           ; Version 2.05
    36                           ; Generated 20/12/2018 GMT
    37                           ; 
    38                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F15354 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     	;# 
    70  0001                     	;# 
    71  0002                     	;# 
    72  0003                     	;# 
    73  0004                     	;# 
    74  0005                     	;# 
    75  0006                     	;# 
    76  0007                     	;# 
    77  0008                     	;# 
    78  0009                     	;# 
    79  000A                     	;# 
    80  000B                     	;# 
    81  000C                     	;# 
    82  000D                     	;# 
    83  000E                     	;# 
    84  0010                     	;# 
    85  0012                     	;# 
    86  0013                     	;# 
    87  0014                     	;# 
    88  0016                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  009B                     	;# 
    93  009B                     	;# 
    94  009C                     	;# 
    95  009D                     	;# 
    96  009E                     	;# 
    97  009F                     	;# 
    98  0119                     	;# 
    99  0119                     	;# 
   100  0119                     	;# 
   101  011A                     	;# 
   102  011A                     	;# 
   103  011A                     	;# 
   104  011B                     	;# 
   105  011B                     	;# 
   106  011B                     	;# 
   107  011B                     	;# 
   108  011B                     	;# 
   109  011C                     	;# 
   110  011C                     	;# 
   111  011C                     	;# 
   112  011D                     	;# 
   113  011D                     	;# 
   114  011D                     	;# 
   115  011E                     	;# 
   116  011E                     	;# 
   117  011E                     	;# 
   118  011F                     	;# 
   119  011F                     	;# 
   120  011F                     	;# 
   121  011F                     	;# 
   122  011F                     	;# 
   123  018C                     	;# 
   124  018D                     	;# 
   125  018E                     	;# 
   126  018F                     	;# 
   127  0190                     	;# 
   128  0191                     	;# 
   129  0192                     	;# 
   130  0196                     	;# 
   131  0197                     	;# 
   132  0198                     	;# 
   133  0199                     	;# 
   134  019A                     	;# 
   135  019B                     	;# 
   136  019C                     	;# 
   137  020C                     	;# 
   138  020C                     	;# 
   139  020D                     	;# 
   140  020E                     	;# 
   141  020F                     	;# 
   142  020F                     	;# 
   143  0210                     	;# 
   144  0210                     	;# 
   145  0211                     	;# 
   146  0211                     	;# 
   147  028C                     	;# 
   148  028C                     	;# 
   149  028D                     	;# 
   150  028D                     	;# 
   151  028E                     	;# 
   152  028F                     	;# 
   153  0290                     	;# 
   154  0291                     	;# 
   155  030C                     	;# 
   156  030C                     	;# 
   157  030D                     	;# 
   158  030E                     	;# 
   159  030F                     	;# 
   160  0310                     	;# 
   161  0310                     	;# 
   162  0311                     	;# 
   163  0312                     	;# 
   164  0313                     	;# 
   165  0314                     	;# 
   166  0314                     	;# 
   167  0315                     	;# 
   168  0316                     	;# 
   169  0318                     	;# 
   170  0318                     	;# 
   171  0319                     	;# 
   172  031A                     	;# 
   173  031C                     	;# 
   174  031C                     	;# 
   175  031D                     	;# 
   176  031E                     	;# 
   177  038C                     	;# 
   178  038C                     	;# 
   179  038D                     	;# 
   180  038E                     	;# 
   181  058C                     	;# 
   182  058C                     	;# 
   183  058D                     	;# 
   184  058E                     	;# 
   185  058F                     	;# 
   186  058F                     	;# 
   187  0590                     	;# 
   188  0591                     	;# 
   189  0592                     	;# 
   190  0593                     	;# 
   191  059C                     	;# 
   192  059C                     	;# 
   193  059D                     	;# 
   194  059D                     	;# 
   195  059E                     	;# 
   196  059F                     	;# 
   197  060C                     	;# 
   198  060D                     	;# 
   199  060E                     	;# 
   200  060F                     	;# 
   201  0610                     	;# 
   202  0611                     	;# 
   203  0612                     	;# 
   204  0613                     	;# 
   205  0614                     	;# 
   206  070C                     	;# 
   207  070D                     	;# 
   208  070E                     	;# 
   209  070F                     	;# 
   210  0710                     	;# 
   211  0711                     	;# 
   212  0712                     	;# 
   213  0713                     	;# 
   214  0716                     	;# 
   215  0717                     	;# 
   216  0718                     	;# 
   217  0719                     	;# 
   218  071A                     	;# 
   219  071B                     	;# 
   220  071C                     	;# 
   221  071D                     	;# 
   222  0796                     	;# 
   223  0797                     	;# 
   224  0798                     	;# 
   225  0799                     	;# 
   226  079A                     	;# 
   227  079B                     	;# 
   228  080C                     	;# 
   229  080D                     	;# 
   230  080E                     	;# 
   231  080F                     	;# 
   232  0810                     	;# 
   233  0811                     	;# 
   234  0812                     	;# 
   235  0813                     	;# 
   236  0814                     	;# 
   237  081A                     	;# 
   238  081A                     	;# 
   239  081B                     	;# 
   240  081C                     	;# 
   241  081C                     	;# 
   242  081D                     	;# 
   243  081E                     	;# 
   244  081F                     	;# 
   245  088C                     	;# 
   246  088D                     	;# 
   247  088E                     	;# 
   248  088F                     	;# 
   249  0890                     	;# 
   250  0891                     	;# 
   251  0892                     	;# 
   252  0893                     	;# 
   253  0895                     	;# 
   254  0896                     	;# 
   255  090C                     	;# 
   256  090E                     	;# 
   257  090F                     	;# 
   258  091F                     	;# 
   259  098F                     	;# 
   260  098F                     	;# 
   261  0990                     	;# 
   262  0991                     	;# 
   263  0992                     	;# 
   264  0993                     	;# 
   265  0994                     	;# 
   266  0995                     	;# 
   267  0996                     	;# 
   268  0997                     	;# 
   269  0A19                     	;# 
   270  0A19                     	;# 
   271  0A1A                     	;# 
   272  0A1A                     	;# 
   273  0A1B                     	;# 
   274  0A1B                     	;# 
   275  0A1B                     	;# 
   276  0A1C                     	;# 
   277  0A1C                     	;# 
   278  0A1D                     	;# 
   279  0A1D                     	;# 
   280  0A1E                     	;# 
   281  0A1E                     	;# 
   282  0A1F                     	;# 
   283  0A1F                     	;# 
   284  0A1F                     	;# 
   285  1E0F                     	;# 
   286  1E10                     	;# 
   287  1E11                     	;# 
   288  1E12                     	;# 
   289  1E13                     	;# 
   290  1E14                     	;# 
   291  1E15                     	;# 
   292  1E16                     	;# 
   293  1E17                     	;# 
   294  1E18                     	;# 
   295  1E19                     	;# 
   296  1E1A                     	;# 
   297  1E1B                     	;# 
   298  1E1C                     	;# 
   299  1E1D                     	;# 
   300  1E1E                     	;# 
   301  1E1F                     	;# 
   302  1E20                     	;# 
   303  1E21                     	;# 
   304  1E22                     	;# 
   305  1E23                     	;# 
   306  1E24                     	;# 
   307  1E25                     	;# 
   308  1E26                     	;# 
   309  1E27                     	;# 
   310  1E28                     	;# 
   311  1E29                     	;# 
   312  1E2A                     	;# 
   313  1E2B                     	;# 
   314  1E2C                     	;# 
   315  1E2D                     	;# 
   316  1E2E                     	;# 
   317  1E2F                     	;# 
   318  1E30                     	;# 
   319  1E31                     	;# 
   320  1E32                     	;# 
   321  1E33                     	;# 
   322  1E34                     	;# 
   323  1E35                     	;# 
   324  1E36                     	;# 
   325  1E37                     	;# 
   326  1E8F                     	;# 
   327  1E90                     	;# 
   328  1E91                     	;# 
   329  1E92                     	;# 
   330  1E93                     	;# 
   331  1E9C                     	;# 
   332  1EA1                     	;# 
   333  1EA2                     	;# 
   334  1EB1                     	;# 
   335  1EBB                     	;# 
   336  1EBC                     	;# 
   337  1EBD                     	;# 
   338  1EBE                     	;# 
   339  1EC3                     	;# 
   340  1EC5                     	;# 
   341  1EC6                     	;# 
   342  1EC7                     	;# 
   343  1EC8                     	;# 
   344  1EC9                     	;# 
   345  1ECA                     	;# 
   346  1ECB                     	;# 
   347  1ECC                     	;# 
   348  1ECD                     	;# 
   349  1ECE                     	;# 
   350  1F10                     	;# 
   351  1F11                     	;# 
   352  1F12                     	;# 
   353  1F13                     	;# 
   354  1F14                     	;# 
   355  1F15                     	;# 
   356  1F16                     	;# 
   357  1F17                     	;# 
   358  1F18                     	;# 
   359  1F19                     	;# 
   360  1F1A                     	;# 
   361  1F1B                     	;# 
   362  1F1C                     	;# 
   363  1F1D                     	;# 
   364  1F1E                     	;# 
   365  1F1F                     	;# 
   366  1F20                     	;# 
   367  1F21                     	;# 
   368  1F22                     	;# 
   369  1F23                     	;# 
   370  1F24                     	;# 
   371  1F25                     	;# 
   372  1F26                     	;# 
   373  1F27                     	;# 
   374  1F38                     	;# 
   375  1F39                     	;# 
   376  1F3A                     	;# 
   377  1F3B                     	;# 
   378  1F3C                     	;# 
   379  1F3D                     	;# 
   380  1F3E                     	;# 
   381  1F3F                     	;# 
   382  1F43                     	;# 
   383  1F44                     	;# 
   384  1F45                     	;# 
   385  1F46                     	;# 
   386  1F47                     	;# 
   387  1F48                     	;# 
   388  1F49                     	;# 
   389  1F4A                     	;# 
   390  1F4E                     	;# 
   391  1F4F                     	;# 
   392  1F50                     	;# 
   393  1F51                     	;# 
   394  1F52                     	;# 
   395  1F53                     	;# 
   396  1F54                     	;# 
   397  1F55                     	;# 
   398  1F65                     	;# 
   399  1F68                     	;# 
   400  1F69                     	;# 
   401  1F6A                     	;# 
   402  1F6B                     	;# 
   403  1FE4                     	;# 
   404  1FE5                     	;# 
   405  1FE6                     	;# 
   406  1FE7                     	;# 
   407  1FE8                     	;# 
   408  1FE8                     	;# 
   409  1FE9                     	;# 
   410  1FEA                     	;# 
   411  1FEA                     	;# 
   412  1FEB                     	;# 
   413  1FED                     	;# 
   414  1FEE                     	;# 
   415  1FEF                     	;# 
   416                           
   417                           	psect	stringtext1
   418  07FC                     __pstringtext1:	
   419  07FC                     _FanFBLowLimit:	
   420  07FC  3400               	retlw	0
   421  07FD  3400               	retlw	0
   422  07FE  3400               	retlw	0
   423  07FF  343F               	retlw	63
   424  0800                     __end_of_FanFBLowLimit:	
   425                           
   426                           	psect	stringtext2
   427  0800                     __pstringtext2:	
   428  0800                     _FanFBUpLimit:	
   429  0800  349A               	retlw	154
   430  0801  3499               	retlw	153
   431  0802  3499               	retlw	153
   432  0803  343F               	retlw	63
   433  0804                     __end_of_FanFBUpLimit:	
   434                           
   435                           	psect	stringtext3
   436  0804                     __pstringtext3:	
   437  0804                     _restoreLevel:	
   438  0804  340A               	retlw	10
   439  0805  34D7               	retlw	215
   440  0806  3483               	retlw	131
   441  0807  343F               	retlw	63
   442  0808                     __end_of_restoreLevel:	
   443                           
   444                           	psect	stringtext4
   445  0808                     __pstringtext4:	
   446  0808                     _upperLimit:	
   447  0808  34F6               	retlw	246
   448  0809  3428               	retlw	40
   449  080A  345C               	retlw	92
   450  080B  343F               	retlw	63
   451  080C                     __end_of_upperLimit:	
   452                           
   453                           	psect	nvCOMMON
   454  007B                     __pnvCOMMON:	
   455  007B                     _currentStatus:	
   456  007B                     	ds	1
   457  000C                     _PORTAbits	set	12
   458  000D                     _PORTBbits	set	13
   459  0014                     _TRISCbits	set	20
   460  001A                     _LATCbits	set	26
   461  0013                     _TRISBbits	set	19
   462  0012                     _TRISAbits	set	18
   463  000B                     _INTCONbits	set	11
   464  005F                     _GIE	set	95
   465  009D                     _ADCON0bits	set	157
   466  009E                     _ADCON1bits	set	158
   467  009B                     _ADRES	set	155
   468  04F7                     _ADFM	set	1271
   469  059C                     _TMR0L	set	1436
   470  059D                     _TMR0H	set	1437
   471  059F                     _T0CON1bits	set	1439
   472  2CF4                     _T016BIT	set	11508
   473  2CF7                     _T0EN	set	11511
   474  0717                     _PIE1bits	set	1815
   475  070D                     _PIR1bits	set	1805
   476  0716                     _PIE0bits	set	1814
   477  3865                     _TMR0IF	set	14437
   478  38B5                     _TMR0IE	set	14517
   479  081C                     _NVMDATL	set	2076
   480  081D                     _NVMDATH	set	2077
   481  081A                     _NVMADRL	set	2074
   482  081B                     _NVMADRH	set	2075
   483  081E                     _NVMCON1bits	set	2078
   484  090C                     _FVRCONbits	set	2316
   485  4866                     _FVRRDY	set	18534
   486  4867                     _FVREN	set	18535
   487  1F4E                     _ANSELCbits	set	8014
   488  1F43                     _ANSELBbits	set	8003
   489  1F38                     _ANSELAbits	set	7992
   490  F9FF                     _IOCAF7	set	63999
   491  F9F7                     _IOCAN7	set	63991
   492                           
   493                           ; #config settings
   494  0000                     
   495                           	psect	cinit
   496  0075                     start_initialization:	
   497  0075                     __initialization:	
   498                           
   499                           ; Clear objects allocated to BANK0
   500  0075  0140               	movlb	0	; select bank0
   501  0076  01EE               	clrf	__pbssBANK0& (0+127)
   502                           
   503                           ; Clear objects allocated to BANK1
   504  0077  30A0               	movlw	low __pbssBANK1
   505  0078  0084               	movwf	4
   506  0079  3000               	movlw	high __pbssBANK1
   507  007A  0085               	movwf	5
   508  007B  301C               	movlw	28
   509  007C  3187  27F6         	fcall	clear_ram0
   510  007E                     end_of_initialization:	
   511                           ;End of C runtime variable initialization code
   512                           
   513  007E                     __end_of__initialization:	
   514  007E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   515  007F  0140               	movlb	0
   516  0080  3187  2F7B         	ljmp	_main	;jump to C main() function
   517                           
   518                           	psect	bssBANK0
   519  006E                     __pbssBANK0:	
   520  006E                     _errReason:	
   521  006E                     	ds	1
   522                           
   523                           	psect	bssBANK1
   524  00A0                     __pbssBANK1:	
   525  00A0                     _DIA_Table:	
   526  00A0                     	ds	16
   527  00B0                     _extNTCV:	
   528  00B0                     	ds	4
   529  00B4                     _intNTCV:	
   530  00B4                     	ds	4
   531  00B8                     _timerCounter:	
   532  00B8                     	ds	4
   533                           
   534                           	psect	clrtext
   535  07F6                     clear_ram0:	
   536                           ;	Called with FSR0 containing the base address, and
   537                           ;	WREG with the size to clear
   538                           
   539  07F6  0064               	clrwdt	;clear the watchdog before getting into this loop
   540  07F7                     clrloop0:	
   541  07F7  0180               	clrf	0	;clear RAM location pointed to by FSR
   542  07F8  3101               	addfsr 0,1
   543  07F9  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   544  07FA  2FF7               	goto	clrloop0	;have we reached the end yet?
   545  07FB  3400               	retlw	0	;all done for this memory range, return
   546                           
   547                           	psect	cstackBANK1
   548  00BC                     __pcstackBANK1:	
   549  00BC                     ?_main:	
   550  00BC                     main@argc:	
   551                           ; 2 bytes @ 0x0
   552                           
   553                           
   554                           ; 2 bytes @ 0x0
   555  00BC                     	ds	2
   556  00BE                     main@argv:	
   557                           
   558                           ; 2 bytes @ 0x2
   559  00BE                     	ds	2
   560  00C0                     ??_main:	
   561                           
   562                           ; 1 bytes @ 0x4
   563  00C0                     	ds	2
   564  00C2                     main@checkCount:	
   565                           
   566                           ; 2 bytes @ 0x6
   567  00C2                     	ds	2
   568                           
   569                           	psect	cstackCOMMON
   570  0070                     __pcstackCOMMON:	
   571  0070                     ?_initDIA:	
   572  0070                     ?_init:	
   573                           ; 1 bytes @ 0x0
   574                           
   575  0070                     ?_HeartBeatFlush:	
   576                           ; 1 bytes @ 0x0
   577                           
   578  0070                     ?_temperatureCheck:	
   579                           ; 1 bytes @ 0x0
   580                           
   581  0070                     ?_ledFaultCheck:	
   582                           ; 1 bytes @ 0x0
   583                           
   584  0070                     ?_FANFaultCheck:	
   585                           ; 1 bytes @ 0x0
   586                           
   587  0070                     ?_ErrHanler:	
   588                           ; 1 bytes @ 0x0
   589                           
   590  0070                     ?_int_handler:	
   591                           ; 1 bytes @ 0x0
   592                           
   593  0070                     ??_int_handler:	
   594                           ; 1 bytes @ 0x0
   595                           
   596                           
   597                           ; 1 bytes @ 0x0
   598  0070                     	ds	2
   599  0072                     ?___flge:	
   600  0072                     ??_HeartBeatFlush:	
   601                           ; 1 bit 
   602                           
   603  0072                     ?_ErrFlush:	
   604                           ; 1 bytes @ 0x2
   605                           
   606  0072                     ??_ledFaultCheck:	
   607                           ; 1 bytes @ 0x2
   608                           
   609  0072                     ??_FANFaultCheck:	
   610                           ; 1 bytes @ 0x2
   611                           
   612  0072                     ?__Umul8_16:	
   613                           ; 1 bytes @ 0x2
   614                           
   615  0072                     ?_read_DIA:	
   616                           ; 2 bytes @ 0x2
   617                           
   618  0072                     ?___xxtofl:	
   619                           ; 2 bytes @ 0x2
   620                           
   621  0072                     __Umul8_16@multiplicand:	
   622                           ; 4 bytes @ 0x2
   623                           
   624  0072                     read_DIA@Add:	
   625                           ; 1 bytes @ 0x2
   626                           
   627  0072                     ErrFlush@count:	
   628                           ; 2 bytes @ 0x2
   629                           
   630  0072                     ___flge@ff1:	
   631                           ; 2 bytes @ 0x2
   632                           
   633  0072                     ___xxtofl@val:	
   634                           ; 4 bytes @ 0x2
   635                           
   636                           
   637                           ; 4 bytes @ 0x2
   638  0072                     	ds	2
   639  0074                     ??__Umul8_16:	
   640  0074                     ??_read_DIA:	
   641                           ; 1 bytes @ 0x4
   642                           
   643  0074                     ??_initDIA:	
   644                           ; 1 bytes @ 0x4
   645                           
   646  0074                     ??_init:	
   647                           ; 1 bytes @ 0x4
   648                           
   649  0074                     ??_ErrFlush:	
   650                           ; 1 bytes @ 0x4
   651                           
   652                           
   653                           ; 1 bytes @ 0x4
   654  0074                     	ds	2
   655  0076                     ??___xxtofl:	
   656  0076                     ErrFlush@i:	
   657                           ; 1 bytes @ 0x6
   658                           
   659  0076                     __Umul8_16@product:	
   660                           ; 2 bytes @ 0x6
   661                           
   662  0076                     ___flge@ff2:	
   663                           ; 2 bytes @ 0x6
   664                           
   665                           
   666                           ; 4 bytes @ 0x6
   667  0076                     	ds	2
   668  0078                     __Umul8_16@word_mpld:	
   669                           
   670                           ; 2 bytes @ 0x8
   671  0078                     	ds	2
   672  007A                     __Umul8_16@multiplier:	
   673                           
   674                           ; 1 bytes @ 0xA
   675  007A                     	ds	1
   676                           
   677                           	psect	cstackBANK0
   678  0020                     __pcstackBANK0:	
   679  0020                     ??___flge:	
   680  0020                     ___xxtofl@sign:	
   681                           ; 1 bytes @ 0x0
   682                           
   683                           
   684                           ; 1 bytes @ 0x0
   685  0020                     	ds	1
   686  0021                     ___xxtofl@exp:	
   687                           
   688                           ; 1 bytes @ 0x1
   689  0021                     	ds	1
   690  0022                     ___xxtofl@arg:	
   691                           
   692                           ; 4 bytes @ 0x2
   693  0022                     	ds	4
   694  0026                     ?___fldiv:	
   695  0026                     ___fldiv@a:	
   696                           ; 4 bytes @ 0x6
   697                           
   698                           
   699                           ; 4 bytes @ 0x6
   700  0026                     	ds	4
   701  002A                     ___fldiv@b:	
   702                           
   703                           ; 4 bytes @ 0xA
   704  002A                     	ds	4
   705  002E                     ??___fldiv:	
   706                           
   707                           ; 1 bytes @ 0xE
   708  002E                     	ds	5
   709  0033                     ___fldiv@rem:	
   710                           
   711                           ; 4 bytes @ 0x13
   712  0033                     	ds	4
   713  0037                     ___fldiv@sign:	
   714                           
   715                           ; 1 bytes @ 0x17
   716  0037                     	ds	1
   717  0038                     ___fldiv@new_exp:	
   718                           
   719                           ; 2 bytes @ 0x18
   720  0038                     	ds	2
   721  003A                     ___fldiv@grs:	
   722                           
   723                           ; 4 bytes @ 0x1A
   724  003A                     	ds	4
   725  003E                     ___fldiv@bexp:	
   726                           
   727                           ; 1 bytes @ 0x1E
   728  003E                     	ds	1
   729  003F                     ___fldiv@aexp:	
   730                           
   731                           ; 1 bytes @ 0x1F
   732  003F                     	ds	1
   733  0040                     ?___flmul:	
   734  0040                     ___flmul@b:	
   735                           ; 4 bytes @ 0x20
   736                           
   737                           
   738                           ; 4 bytes @ 0x20
   739  0040                     	ds	4
   740  0044                     ___flmul@a:	
   741                           
   742                           ; 4 bytes @ 0x24
   743  0044                     	ds	4
   744  0048                     ??___flmul:	
   745                           
   746                           ; 1 bytes @ 0x28
   747  0048                     	ds	5
   748  004D                     ___flmul@sign:	
   749                           
   750                           ; 1 bytes @ 0x2D
   751  004D                     	ds	1
   752  004E                     ___flmul@grs:	
   753                           
   754                           ; 4 bytes @ 0x2E
   755  004E                     	ds	4
   756  0052                     ___flmul@aexp:	
   757                           
   758                           ; 1 bytes @ 0x32
   759  0052                     	ds	1
   760  0053                     ___flmul@bexp:	
   761                           
   762                           ; 1 bytes @ 0x33
   763  0053                     	ds	1
   764  0054                     ___flmul@prod:	
   765                           
   766                           ; 4 bytes @ 0x34
   767  0054                     	ds	4
   768  0058                     ___flmul@temp:	
   769                           
   770                           ; 2 bytes @ 0x38
   771  0058                     	ds	2
   772  005A                     ?_getNTCV:	
   773  005A                     getNTCV@channel:	
   774                           ; 4 bytes @ 0x3A
   775                           
   776                           
   777                           ; 2 bytes @ 0x3A
   778  005A                     	ds	4
   779  005E                     ??_getNTCV:	
   780                           
   781                           ; 1 bytes @ 0x3E
   782  005E                     	ds	1
   783  005F                     _getNTCV$1089:	
   784                           
   785                           ; 4 bytes @ 0x3F
   786  005F                     	ds	4
   787  0063                     getNTCV@VDD:	
   788                           
   789                           ; 4 bytes @ 0x43
   790  0063                     	ds	4
   791  0067                     getNTCV@voltage:	
   792                           
   793                           ; 4 bytes @ 0x47
   794  0067                     	ds	4
   795  006B                     ??_temperatureCheck:	
   796                           
   797                           ; 1 bytes @ 0x4B
   798  006B                     	ds	1
   799  006C                     ??_ErrHanler:	
   800                           
   801                           ; 1 bytes @ 0x4C
   802  006C                     	ds	2
   803                           
   804                           	psect	maintext
   805  077B                     __pmaintext:	
   806 ;;
   807 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   808 ;;
   809 ;; *************** function _main *****************
   810 ;; Defined at:
   811 ;;		line 476 in file "main.c"
   812 ;; Parameters:    Size  Location     Type
   813 ;;  argc            2    0[BANK1 ] int 
   814 ;;  argv            2    2[BANK1 ] PTR PTR unsigned char 
   815 ;; Auto vars:     Size  Location     Type
   816 ;;  checkCount      2    6[BANK1 ] int 
   817 ;; Return value:  Size  Location     Type
   818 ;;                  2    0[BANK1 ] int 
   819 ;; Registers used:
   820 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   821 ;; Tracked objects:
   822 ;;		On entry : B3F/0
   823 ;;		On exit  : 0/0
   824 ;;		Unchanged: 0/0
   825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   826 ;;      Params:         0       0       4       0       0       0       0       0
   827 ;;      Locals:         0       0       2       0       0       0       0       0
   828 ;;      Temps:          0       0       2       0       0       0       0       0
   829 ;;      Totals:         0       0       8       0       0       0       0       0
   830 ;;Total ram usage:        8 bytes
   831 ;; Hardware stack levels required when called:    6
   832 ;; This function calls:
   833 ;;		_ErrHanler
   834 ;;		_FANFaultCheck
   835 ;;		_HeartBeatFlush
   836 ;;		_init
   837 ;;		_ledFaultCheck
   838 ;;		_temperatureCheck
   839 ;; This function is called by:
   840 ;;		Startup code after reset
   841 ;; This function uses a non-reentrant model
   842 ;;
   843                           
   844                           
   845                           ;psect for function _main
   846  077B                     _main:	
   847                           
   848                           ;main.c: 478:     init();
   849                           
   850                           ;incstack = 0
   851                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   852  077B  3187  2723  3187   	fcall	_init
   853                           
   854                           ;main.c: 479:     int checkCount = 0;
   855  077E  0141               	movlb	1	; select bank1
   856  077F  01C2               	clrf	main@checkCount^(0+128)
   857  0780  01C3               	clrf	(main@checkCount+1)^(0+128)
   858  0781  2FB6               	goto	l2108
   859  0782                     l2084:	
   860                           
   861                           ;main.c: 485:                 HeartBeatFlush();
   862  0782  318F  2741  3187   	fcall	_HeartBeatFlush
   863                           
   864                           ;main.c: 488:                 if(LATCbits.LATC2 == 0){
   865  0785  0140               	movlb	0	; select bank0
   866  0786  1D1A               	btfss	26,2	;volatile
   867                           
   868                           ;main.c: 489:                     LATCbits.LATC7 = 0;
   869  0787  139A               	bcf	26,7	;volatile
   870                           
   871                           ;main.c: 491:                 if(checkCount >= 5){
   872  0788  0141               	movlb	1	; select bank1
   873  0789  0843               	movf	(main@checkCount+1)^(0+128),w
   874  078A  3A80               	xorlw	128
   875  078B  00C0               	movwf	??_main^(0+128)
   876  078C  3080               	movlw	128
   877  078D  0240               	subwf	??_main^(0+128),w
   878  078E  1D03               	skipz
   879  078F  2F92               	goto	u2455
   880  0790  3005               	movlw	5
   881  0791  0242               	subwf	main@checkCount^(0+128),w
   882  0792                     u2455:	
   883  0792  1C03               	skipc
   884  0793  2F9B               	goto	l2096
   885                           
   886                           ;main.c: 492:                   temperatureCheck();
   887  0794  3185  2505  3187   	fcall	_temperatureCheck
   888                           
   889                           ;main.c: 493:                   checkCount = 0;
   890  0797  0141               	movlb	1	; select bank1
   891  0798  01C2               	clrf	main@checkCount^(0+128)
   892  0799  01C3               	clrf	(main@checkCount+1)^(0+128)
   893                           
   894                           ;main.c: 494:                 } else {
   895  079A  2FA0               	goto	l2098
   896  079B                     l2096:	
   897                           
   898                           ;main.c: 495:                     checkCount ++;
   899  079B  3001               	movlw	1
   900  079C  0141               	movlb	1	; select bank1
   901  079D  07C2               	addwf	main@checkCount^(0+128),f
   902  079E  3000               	movlw	0
   903  079F  3DC3               	addwfc	(main@checkCount+1)^(0+128),f
   904  07A0                     l2098:	
   905                           
   906                           ;main.c: 497:                ledFaultCheck();
   907  07A0  318F  275F  3187   	fcall	_ledFaultCheck
   908                           
   909                           ;main.c: 498:                FANFaultCheck();
   910  07A3  3180  2003  3187   	fcall	_FANFaultCheck
   911                           
   912                           ;main.c: 499:             break;
   913  07A6  2FB6               	goto	l2108
   914  07A7                     l2100:	
   915                           
   916                           ;main.c: 503:                 if((errReason == BoardHiTempErr) || (errReason == LEDHiTem
      +                          pErr))
   917  07A7  3003               	movlw	3
   918  07A8  0140               	movlb	0	; select bank0
   919  07A9  066E               	xorwf	_errReason,w
   920  07AA  1903               	btfsc	3,2
   921  07AB  2FB0               	goto	l190
   922  07AC  3002               	movlw	2
   923  07AD  066E               	xorwf	_errReason,w
   924  07AE  1D03               	btfss	3,2
   925  07AF  2FB3               	goto	l2104
   926  07B0                     l190:	
   927                           
   928                           ;main.c: 504:                 {;main.c: 505:                   LATCbits.LATC2 = 0;
   929  07B0  111A               	bcf	26,2	;volatile
   930                           
   931                           ;main.c: 506:                   LATCbits.LATC5 = 0;
   932  07B1  129A               	bcf	26,5	;volatile
   933                           
   934                           ;main.c: 507:                   LATCbits.LATC7 = 1;
   935  07B2  179A               	bsf	26,7	;volatile
   936  07B3                     l2104:	
   937                           
   938                           ;main.c: 509:                ErrHanler();
   939  07B3  318F  27BB  3187   	fcall	_ErrHanler
   940  07B6                     l181:	
   941                           ;main.c: 510:             break;
   942                           
   943  07B6                     l2108:	
   944  07B6  087B               	movf	_currentStatus,w
   945  07B7  0141               	movlb	1	; select bank1
   946  07B8  00C0               	movwf	??_main^(0+128)
   947  07B9  01C1               	clrf	(??_main^(0+128)+1)
   948                           
   949                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   950                           ; Switch size 1, requested type "simple"
   951                           ; Number of cases is 1, Range of values is 0 to 0
   952                           ; switch strategies available:
   953                           ; Name         Instructions Cycles
   954                           ; simple_byte            4     3 (average)
   955                           ; direct_byte            8     6 (fixed)
   956                           ; jumptable            260     6 (fixed)
   957                           ;	Chosen strategy is simple_byte
   958  07BA  0841               	movf	(??_main+1)^(0+128),w
   959  07BB  3A00               	xorlw	0	; case 0
   960  07BC  1903               	skipnz
   961  07BD  2FBF               	goto	l2166
   962  07BE  2FB6               	goto	l181
   963  07BF                     l2166:	
   964                           
   965                           ; Switch size 1, requested type "simple"
   966                           ; Number of cases is 2, Range of values is 0 to 2
   967                           ; switch strategies available:
   968                           ; Name         Instructions Cycles
   969                           ; simple_byte            7     4 (average)
   970                           ; direct_byte           12     6 (fixed)
   971                           ; jumptable            260     6 (fixed)
   972                           ;	Chosen strategy is simple_byte
   973  07BF  0840               	movf	??_main^(0+128),w
   974  07C0  3A00               	xorlw	0	; case 0
   975  07C1  1903               	skipnz
   976  07C2  2F82               	goto	l2084
   977  07C3  3A02               	xorlw	2	; case 2
   978  07C4  1903               	skipnz
   979  07C5  2FA7               	goto	l2100
   980  07C6  2FB6               	goto	l181
   981  07C7  3180  2873         	ljmp	start
   982  07C9                     __end_of_main:	
   983                           
   984                           	psect	text1
   985  0723                     __ptext1:	
   986 ;; *************** function _init *****************
   987 ;; Defined at:
   988 ;;		line 141 in file "main.c"
   989 ;; Parameters:    Size  Location     Type
   990 ;;		None
   991 ;; Auto vars:     Size  Location     Type
   992 ;;		None
   993 ;; Return value:  Size  Location     Type
   994 ;;                  1    wreg      void 
   995 ;; Registers used:
   996 ;;		wreg, status,2, status,0, pclath, cstack
   997 ;; Tracked objects:
   998 ;;		On entry : 0/0
   999 ;;		On exit  : 0/0
  1000 ;;		Unchanged: 0/0
  1001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1002 ;;      Params:         0       0       0       0       0       0       0       0
  1003 ;;      Locals:         0       0       0       0       0       0       0       0
  1004 ;;      Temps:          0       0       0       0       0       0       0       0
  1005 ;;      Totals:         0       0       0       0       0       0       0       0
  1006 ;;Total ram usage:        0 bytes
  1007 ;; Hardware stack levels used:    1
  1008 ;; Hardware stack levels required when called:    3
  1009 ;; This function calls:
  1010 ;;		_initDIA
  1011 ;; This function is called by:
  1012 ;;		_main
  1013 ;; This function uses a non-reentrant model
  1014 ;;
  1015                           
  1016                           
  1017                           ;psect for function _init
  1018  0723                     _init:	
  1019                           
  1020                           ;main.c: 142:    currentStatus = Init;
  1021                           
  1022                           ;incstack = 0
  1023                           ; Regs used in _init: [wreg+status,2+status,0+pclath+cstack]
  1024  0723  01FB               	clrf	_currentStatus
  1025  0724  0AFB               	incf	_currentStatus,f
  1026                           
  1027                           ;main.c: 144:    GIE = 1;
  1028  0725  178B               	bsf	11,7	;volatile
  1029                           
  1030                           ;main.c: 145:    INTCONbits.PEIE = 1;
  1031  0726  170B               	bsf	11,6	;volatile
  1032                           
  1033                           ;main.c: 148:    TRISAbits.TRISA0 = 1;
  1034  0727  0140               	movlb	0	; select bank0
  1035  0728  1412               	bsf	18,0	;volatile
  1036                           
  1037                           ;main.c: 149:    ANSELAbits.ANSA0 = 1;
  1038  0729  017E               	movlb	62	; select bank62
  1039  072A  1438               	bsf	56,0	;volatile
  1040                           
  1041                           ;main.c: 151:    TRISAbits.TRISA1 = 1;
  1042  072B  0140               	movlb	0	; select bank0
  1043  072C  1492               	bsf	18,1	;volatile
  1044                           
  1045                           ;main.c: 152:    ANSELAbits.ANSA1 = 1;
  1046  072D  017E               	movlb	62	; select bank62
  1047  072E  14B8               	bsf	56,1	;volatile
  1048                           
  1049                           ;main.c: 155:    TRISAbits.TRISA2 = 1;
  1050  072F  0140               	movlb	0	; select bank0
  1051  0730  1512               	bsf	18,2	;volatile
  1052                           
  1053                           ;main.c: 156:    ANSELAbits.ANSA2 = 1;
  1054  0731  017E               	movlb	62	; select bank62
  1055  0732  1538               	bsf	56,2	;volatile
  1056                           
  1057                           ;main.c: 159:     TRISBbits.TRISB0 = 1;
  1058  0733  0140               	movlb	0	; select bank0
  1059  0734  1413               	bsf	19,0	;volatile
  1060                           
  1061                           ;main.c: 160:     ANSELBbits.ANSB0 = 0;
  1062  0735  017E               	movlb	62	; select bank62
  1063  0736  1043               	bcf	67,0	;volatile
  1064                           
  1065                           ;main.c: 164:     TRISAbits.TRISA7 = 1;
  1066  0737  0140               	movlb	0	; select bank0
  1067  0738  1792               	bsf	18,7	;volatile
  1068                           
  1069                           ;main.c: 165:     ANSELAbits.ANSA7 = 0;
  1070  0739  017E               	movlb	62	; select bank62
  1071  073A  13B8               	bcf	56,7	;volatile
  1072                           
  1073                           ;main.c: 168:     ANSELCbits.ANSC0 = 0;
  1074  073B  104E               	bcf	78,0	;volatile
  1075                           
  1076                           ;main.c: 169:     LATCbits.LATC0 = 0;
  1077  073C  0140               	movlb	0	; select bank0
  1078  073D  101A               	bcf	26,0	;volatile
  1079                           
  1080                           ;main.c: 170:     TRISCbits.TRISC0 = 1;
  1081  073E  1414               	bsf	20,0	;volatile
  1082                           
  1083                           ;main.c: 174:     LATCbits.LATC2 = 0;
  1084  073F  111A               	bcf	26,2	;volatile
  1085                           
  1086                           ;main.c: 175:     ANSELCbits.ANSC2 = 0;
  1087  0740  017E               	movlb	62	; select bank62
  1088  0741  114E               	bcf	78,2	;volatile
  1089                           
  1090                           ;main.c: 176:     TRISCbits.TRISC2 = 0;
  1091  0742  0140               	movlb	0	; select bank0
  1092  0743  1114               	bcf	20,2	;volatile
  1093                           
  1094                           ;main.c: 179:     LATCbits.LATC5 = 0;
  1095  0744  129A               	bcf	26,5	;volatile
  1096                           
  1097                           ;main.c: 180:     ANSELCbits.ANSC5 = 0;
  1098  0745  017E               	movlb	62	; select bank62
  1099  0746  12CE               	bcf	78,5	;volatile
  1100                           
  1101                           ;main.c: 181:     TRISCbits.TRISC5 = 0;
  1102  0747  0140               	movlb	0	; select bank0
  1103  0748  1294               	bcf	20,5	;volatile
  1104                           
  1105                           ;main.c: 184:     LATCbits.LATC7 = 0;
  1106  0749  139A               	bcf	26,7	;volatile
  1107                           
  1108                           ;main.c: 185:     ANSELCbits.ANSC7 = 0;
  1109  074A  017E               	movlb	62	; select bank62
  1110  074B  13CE               	bcf	78,7	;volatile
  1111                           
  1112                           ;main.c: 186:     TRISCbits.TRISC7 = 0;
  1113  074C  0140               	movlb	0	; select bank0
  1114  074D  1394               	bcf	20,7	;volatile
  1115                           
  1116                           ;main.c: 190:     PIE0bits.IOCIE = 1;
  1117  074E  014E               	movlb	14	; select bank14
  1118  074F  1616               	bsf	22,4	;volatile
  1119                           
  1120                           ;main.c: 191:     IOCAN7 = 1;
  1121  0750  017E               	movlb	62	; select bank62
  1122  0751  17BE               	bsf	62,7	;volatile
  1123                           
  1124                           ;main.c: 195:     FVRCONbits.ADFVR = 3;
  1125  0752  3003               	movlw	3
  1126  0753  0152               	movlb	18	; select bank18
  1127  0754  048C               	iorwf	12,f	;volatile
  1128                           
  1129                           ;main.c: 196:     FVRCONbits.CDAFVR = 3;
  1130  0755  300C               	movlw	12
  1131  0756  048C               	iorwf	12,f	;volatile
  1132                           
  1133                           ;main.c: 197:     FVREN = 1;
  1134  0757  178C               	bsf	12,7	;volatile
  1135  0758                     l104:	
  1136                           ;main.c: 200:     }
  1137                           
  1138                           
  1139                           ;main.c: 198:     while(!FVRRDY){
  1140  0758  1F0C               	btfss	12,6	;volatile
  1141  0759  2F58               	goto	l104
  1142                           
  1143                           ;main.c: 203:     ADCON1bits.ADCS = 0x01;
  1144  075A  0141               	movlb	1	; select bank1
  1145  075B  081E               	movf	30,w	;volatile
  1146  075C  398F               	andlw	-113
  1147  075D  3810               	iorlw	16
  1148  075E  009E               	movwf	30	;volatile
  1149                           
  1150                           ;main.c: 204:     ADCON1bits.ADPREF = 0;
  1151  075F  30FC               	movlw	-4
  1152  0760  059E               	andwf	30,f	;volatile
  1153                           
  1154                           ;main.c: 205:     ADCON0bits.CHS = 0x3F;
  1155  0761  30FC               	movlw	252
  1156  0762  049D               	iorwf	29,f	;volatile
  1157                           
  1158                           ;main.c: 206:     ADFM = 1;
  1159  0763  179E               	bsf	30,7	;volatile
  1160                           
  1161                           ;main.c: 207:     ADCON0bits.ADON = 0;
  1162  0764  101D               	bcf	29,0	;volatile
  1163                           
  1164                           ;main.c: 208:     PIR1bits.ADIF = 0;
  1165  0765  014E               	movlb	14	; select bank14
  1166  0766  100D               	bcf	13,0	;volatile
  1167                           
  1168                           ;main.c: 209:     PIE1bits.ADIE = 0;
  1169  0767  1017               	bcf	23,0	;volatile
  1170                           
  1171                           ;main.c: 214:      T0EN = 1;
  1172  0768  014B               	movlb	11	; select bank11
  1173  0769  179E               	bsf	30,7	;volatile
  1174                           
  1175                           ;main.c: 215:      TMR0IE = 0;
  1176  076A  014E               	movlb	14	; select bank14
  1177  076B  1296               	bcf	22,5	;volatile
  1178                           
  1179                           ;main.c: 216:      T016BIT = 0;
  1180  076C  014B               	movlb	11	; select bank11
  1181  076D  121E               	bcf	30,4	;volatile
  1182                           
  1183                           ;main.c: 217:      T0CON1bits.T0ASYNC = 1;
  1184  076E  161F               	bsf	31,4	;volatile
  1185                           
  1186                           ;main.c: 218:      T0CON1bits.T0CS = 5;
  1187  076F  081F               	movf	31,w	;volatile
  1188  0770  391F               	andlw	-225
  1189  0771  38A0               	iorlw	160
  1190  0772  009F               	movwf	31	;volatile
  1191                           
  1192                           ;main.c: 219:      T0CON1bits.T0CKPS = 8;
  1193  0773  081F               	movf	31,w	;volatile
  1194  0774  39F0               	andlw	-16
  1195  0775  3808               	iorlw	8
  1196  0776  009F               	movwf	31	;volatile
  1197                           
  1198                           ;main.c: 223:      initDIA();
  1199  0777  3186  26C3         	fcall	_initDIA
  1200                           
  1201                           ;main.c: 225:      currentStatus = Normal;
  1202  0779  01FB               	clrf	_currentStatus
  1203  077A  0008               	return
  1204  077B                     __end_of_init:	
  1205                           
  1206                           	psect	text2
  1207  06C3                     __ptext2:	
  1208 ;; *************** function _initDIA *****************
  1209 ;; Defined at:
  1210 ;;		line 76 in file "main.c"
  1211 ;; Parameters:    Size  Location     Type
  1212 ;;		None
  1213 ;; Auto vars:     Size  Location     Type
  1214 ;;		None
  1215 ;; Return value:  Size  Location     Type
  1216 ;;                  1    wreg      void 
  1217 ;; Registers used:
  1218 ;;		wreg, status,2, pclath, cstack
  1219 ;; Tracked objects:
  1220 ;;		On entry : 0/0
  1221 ;;		On exit  : 0/0
  1222 ;;		Unchanged: 0/0
  1223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1224 ;;      Params:         0       0       0       0       0       0       0       0
  1225 ;;      Locals:         0       0       0       0       0       0       0       0
  1226 ;;      Temps:          0       0       0       0       0       0       0       0
  1227 ;;      Totals:         0       0       0       0       0       0       0       0
  1228 ;;Total ram usage:        0 bytes
  1229 ;; Hardware stack levels used:    1
  1230 ;; Hardware stack levels required when called:    2
  1231 ;; This function calls:
  1232 ;;		_read_DIA
  1233 ;; This function is called by:
  1234 ;;		_init
  1235 ;; This function uses a non-reentrant model
  1236 ;;
  1237                           
  1238                           
  1239                           ;psect for function _initDIA
  1240  06C3                     _initDIA:	
  1241                           
  1242                           ;main.c: 77:     DIA_Table.TSLR2 = read_DIA(0x8113);
  1243                           
  1244                           ;incstack = 0
  1245                           ; Regs used in _initDIA: [wreg+status,2+pclath+cstack]
  1246  06C3  3013               	movlw	19
  1247  06C4  00F2               	movwf	read_DIA@Add
  1248  06C5  3081               	movlw	129
  1249  06C6  00F3               	movwf	read_DIA@Add+1
  1250  06C7  3187  27E8  3186   	fcall	_read_DIA
  1251  06CA  0873               	movf	?_read_DIA+1,w
  1252  06CB  0141               	movlb	1	; select bank1
  1253  06CC  00A1               	movwf	(_DIA_Table+1)^(0+128)
  1254  06CD  0872               	movf	?_read_DIA,w
  1255  06CE  00A0               	movwf	_DIA_Table^(0+128)
  1256                           
  1257                           ;main.c: 78:     DIA_Table.TSHR2 = read_DIA(0x8116);
  1258  06CF  3016               	movlw	22
  1259  06D0  00F2               	movwf	read_DIA@Add
  1260  06D1  3081               	movlw	129
  1261  06D2  00F3               	movwf	read_DIA@Add+1
  1262  06D3  3187  27E8  3186   	fcall	_read_DIA
  1263  06D6  0873               	movf	?_read_DIA+1,w
  1264  06D7  0141               	movlb	1	; select bank1
  1265  06D8  00A3               	movwf	((_DIA_Table+1)^(0+128)+2)
  1266  06D9  0872               	movf	?_read_DIA,w
  1267  06DA  00A2               	movwf	(_DIA_Table^(0+128)+2)
  1268                           
  1269                           ;main.c: 79:     DIA_Table.FVRA1X = read_DIA(0x8118);
  1270  06DB  3018               	movlw	24
  1271  06DC  00F2               	movwf	read_DIA@Add
  1272  06DD  3081               	movlw	129
  1273  06DE  00F3               	movwf	read_DIA@Add+1
  1274  06DF  3187  27E8  3186   	fcall	_read_DIA
  1275  06E2  0873               	movf	?_read_DIA+1,w
  1276  06E3  0141               	movlb	1	; select bank1
  1277  06E4  00A5               	movwf	((_DIA_Table+1)^(0+128)+4)
  1278  06E5  0872               	movf	?_read_DIA,w
  1279  06E6  00A4               	movwf	(_DIA_Table^(0+128)+4)
  1280                           
  1281                           ;main.c: 80:     DIA_Table.FVRA2X = read_DIA(0x8119);
  1282  06E7  3019               	movlw	25
  1283  06E8  00F2               	movwf	read_DIA@Add
  1284  06E9  3081               	movlw	129
  1285  06EA  00F3               	movwf	read_DIA@Add+1
  1286  06EB  3187  27E8  3186   	fcall	_read_DIA
  1287  06EE  0873               	movf	?_read_DIA+1,w
  1288  06EF  0141               	movlb	1	; select bank1
  1289  06F0  00A7               	movwf	((_DIA_Table+1)^(0+128)+6)
  1290  06F1  0872               	movf	?_read_DIA,w
  1291  06F2  00A6               	movwf	(_DIA_Table^(0+128)+6)
  1292                           
  1293                           ;main.c: 81:     DIA_Table.FVRA4X = read_DIA(0x811A);
  1294  06F3  301A               	movlw	26
  1295  06F4  00F2               	movwf	read_DIA@Add
  1296  06F5  3081               	movlw	129
  1297  06F6  00F3               	movwf	read_DIA@Add+1
  1298  06F7  3187  27E8  3186   	fcall	_read_DIA
  1299  06FA  0873               	movf	?_read_DIA+1,w
  1300  06FB  0141               	movlb	1	; select bank1
  1301  06FC  00A9               	movwf	((_DIA_Table+1)^(0+128)+8)
  1302  06FD  0872               	movf	?_read_DIA,w
  1303  06FE  00A8               	movwf	(_DIA_Table^(0+128)+8)
  1304                           
  1305                           ;main.c: 82:     DIA_Table.FVRC1X = read_DIA(0x811B);
  1306  06FF  301B               	movlw	27
  1307  0700  00F2               	movwf	read_DIA@Add
  1308  0701  3081               	movlw	129
  1309  0702  00F3               	movwf	read_DIA@Add+1
  1310  0703  3187  27E8  3186   	fcall	_read_DIA
  1311  0706  0873               	movf	?_read_DIA+1,w
  1312  0707  0141               	movlb	1	; select bank1
  1313  0708  00AB               	movwf	((_DIA_Table+1)^(0+128)+10)
  1314  0709  0872               	movf	?_read_DIA,w
  1315  070A  00AA               	movwf	(_DIA_Table^(0+128)+10)
  1316                           
  1317                           ;main.c: 83:     DIA_Table.FVRC2X = read_DIA(0x811C);
  1318  070B  301C               	movlw	28
  1319  070C  00F2               	movwf	read_DIA@Add
  1320  070D  3081               	movlw	129
  1321  070E  00F3               	movwf	read_DIA@Add+1
  1322  070F  3187  27E8  3186   	fcall	_read_DIA
  1323  0712  0873               	movf	?_read_DIA+1,w
  1324  0713  0141               	movlb	1	; select bank1
  1325  0714  00AD               	movwf	((_DIA_Table+1)^(0+128)+12)
  1326  0715  0872               	movf	?_read_DIA,w
  1327  0716  00AC               	movwf	(_DIA_Table^(0+128)+12)
  1328                           
  1329                           ;main.c: 84:     DIA_Table.FVRC4X = read_DIA(0x811D);
  1330  0717  301D               	movlw	29
  1331  0718  00F2               	movwf	read_DIA@Add
  1332  0719  3081               	movlw	129
  1333  071A  00F3               	movwf	read_DIA@Add+1
  1334  071B  3187  27E8         	fcall	_read_DIA
  1335  071D  0873               	movf	?_read_DIA+1,w
  1336  071E  0141               	movlb	1	; select bank1
  1337  071F  00AF               	movwf	((_DIA_Table+1)^(0+128)+14)
  1338  0720  0872               	movf	?_read_DIA,w
  1339  0721  00AE               	movwf	(_DIA_Table^(0+128)+14)
  1340  0722  0008               	return
  1341  0723                     __end_of_initDIA:	
  1342                           
  1343                           	psect	text3
  1344  07E8                     __ptext3:	
  1345 ;; *************** function _read_DIA *****************
  1346 ;; Defined at:
  1347 ;;		line 65 in file "main.c"
  1348 ;; Parameters:    Size  Location     Type
  1349 ;;  Add             2    2[COMMON] unsigned int 
  1350 ;; Auto vars:     Size  Location     Type
  1351 ;;		None
  1352 ;; Return value:  Size  Location     Type
  1353 ;;                  2    2[COMMON] unsigned int 
  1354 ;; Registers used:
  1355 ;;		wreg, status,2
  1356 ;; Tracked objects:
  1357 ;;		On entry : 0/0
  1358 ;;		On exit  : 0/0
  1359 ;;		Unchanged: 0/0
  1360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1361 ;;      Params:         2       0       0       0       0       0       0       0
  1362 ;;      Locals:         0       0       0       0       0       0       0       0
  1363 ;;      Temps:          0       0       0       0       0       0       0       0
  1364 ;;      Totals:         2       0       0       0       0       0       0       0
  1365 ;;Total ram usage:        2 bytes
  1366 ;; Hardware stack levels used:    1
  1367 ;; Hardware stack levels required when called:    1
  1368 ;; This function calls:
  1369 ;;		Nothing
  1370 ;; This function is called by:
  1371 ;;		_initDIA
  1372 ;; This function uses a non-reentrant model
  1373 ;;
  1374                           
  1375                           
  1376                           ;psect for function _read_DIA
  1377  07E8                     _read_DIA:	
  1378                           
  1379                           ;main.c: 65: unsigned int read_DIA (unsigned int Add);main.c: 66: {;main.c: 67:     NVMC
      +                          ON1bits.NVMREGS = 0x01;
  1380                           
  1381                           ;incstack = 0
  1382                           ; Regs used in _read_DIA: [wreg+status,2]
  1383  07E8  0150               	movlb	16	; select bank16
  1384  07E9  171E               	bsf	30,6	;volsfr
  1385                           
  1386                           ;main.c: 68:     NVMADRH = ((Add >> 8) & 0xFF);
  1387  07EA  0873               	movf	read_DIA@Add+1,w
  1388  07EB  009B               	movwf	27	;volatile
  1389                           
  1390                           ;main.c: 69:     NVMADRL = (Add & 0xFF);
  1391  07EC  0872               	movf	read_DIA@Add,w
  1392  07ED  009A               	movwf	26	;volatile
  1393                           
  1394                           ;main.c: 70:     NVMCON1bits.RD = 0x01;
  1395  07EE  141E               	bsf	30,0	;volsfr
  1396  07EF                     l95:	
  1397                           ;main.c: 71:     while (NVMCON1bits.RD == 1);
  1398                           
  1399  07EF  181E               	btfsc	30,0	;volsfr
  1400  07F0  2FEF               	goto	l95
  1401                           
  1402                           ;main.c: 72:     return ((NVMDATH<<8)+NVMDATL);
  1403  07F1  081D               	movf	29,w	;volatile
  1404  07F2  00F3               	movwf	?_read_DIA+1
  1405  07F3  081C               	movf	28,w	;volatile
  1406  07F4  00F2               	movwf	?_read_DIA
  1407  07F5  0008               	return
  1408  07F6                     __end_of_read_DIA:	
  1409                           
  1410                           	psect	text4
  1411  0F41                     __ptext4:	
  1412 ;; *************** function _HeartBeatFlush *****************
  1413 ;; Defined at:
  1414 ;;		line 304 in file "main.c"
  1415 ;; Parameters:    Size  Location     Type
  1416 ;;		None
  1417 ;; Auto vars:     Size  Location     Type
  1418 ;;		None
  1419 ;; Return value:  Size  Location     Type
  1420 ;;                  1    wreg      void 
  1421 ;; Registers used:
  1422 ;;		wreg
  1423 ;; Tracked objects:
  1424 ;;		On entry : 0/0
  1425 ;;		On exit  : 0/0
  1426 ;;		Unchanged: 0/0
  1427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1428 ;;      Params:         0       0       0       0       0       0       0       0
  1429 ;;      Locals:         0       0       0       0       0       0       0       0
  1430 ;;      Temps:          2       0       0       0       0       0       0       0
  1431 ;;      Totals:         2       0       0       0       0       0       0       0
  1432 ;;Total ram usage:        2 bytes
  1433 ;; Hardware stack levels used:    1
  1434 ;; Hardware stack levels required when called:    1
  1435 ;; This function calls:
  1436 ;;		Nothing
  1437 ;; This function is called by:
  1438 ;;		_main
  1439 ;; This function uses a non-reentrant model
  1440 ;;
  1441                           
  1442                           
  1443                           ;psect for function _HeartBeatFlush
  1444  0F41                     _HeartBeatFlush:	
  1445                           
  1446                           ;main.c: 306:     TRISCbits.TRISC0 = 1;
  1447                           
  1448                           ;incstack = 0
  1449                           ; Regs used in _HeartBeatFlush: [wreg]
  1450  0F41  0140               	movlb	0	; select bank0
  1451  0F42  1414               	bsf	20,0	;volatile
  1452                           
  1453                           ;main.c: 307:     LATCbits.LATC0 = 0;
  1454  0F43  101A               	bcf	26,0	;volatile
  1455                           
  1456                           ;main.c: 308:     _delay((unsigned long)((250)*(32000000/4000.0)));
  1457  0F44  300B               	movlw	11
  1458  0F45  00F3               	movwf	??_HeartBeatFlush+1
  1459  0F46  3026               	movlw	38
  1460  0F47  00F2               	movwf	??_HeartBeatFlush
  1461  0F48  305E               	movlw	94
  1462  0F49                     u2487:	
  1463  0F49  0B89               	decfsz	9,f
  1464  0F4A  2F49               	goto	u2487
  1465  0F4B  0BF2               	decfsz	??_HeartBeatFlush,f
  1466  0F4C  2F49               	goto	u2487
  1467  0F4D  0BF3               	decfsz	??_HeartBeatFlush+1,f
  1468  0F4E  2F49               	goto	u2487
  1469                           
  1470                           ;main.c: 309:     TRISCbits.TRISC0 = 0;
  1471  0F4F  0140               	movlb	0	; select bank0
  1472  0F50  1014               	bcf	20,0	;volatile
  1473                           
  1474                           ;main.c: 310:     _delay((unsigned long)((250)*(32000000/4000.0)));
  1475  0F51  300B               	movlw	11
  1476  0F52  00F3               	movwf	??_HeartBeatFlush+1
  1477  0F53  3026               	movlw	38
  1478  0F54  00F2               	movwf	??_HeartBeatFlush
  1479  0F55  305E               	movlw	94
  1480  0F56                     u2497:	
  1481  0F56  0B89               	decfsz	9,f
  1482  0F57  2F56               	goto	u2497
  1483  0F58  0BF2               	decfsz	??_HeartBeatFlush,f
  1484  0F59  2F56               	goto	u2497
  1485  0F5A  0BF3               	decfsz	??_HeartBeatFlush+1,f
  1486  0F5B  2F56               	goto	u2497
  1487                           
  1488                           ;main.c: 311:     TRISCbits.TRISC0 = 1;
  1489  0F5C  0140               	movlb	0	; select bank0
  1490  0F5D  1414               	bsf	20,0	;volatile
  1491  0F5E  0008               	return
  1492  0F5F                     __end_of_HeartBeatFlush:	
  1493                           
  1494                           	psect	text5
  1495  0003                     __ptext5:	
  1496 ;; *************** function _FANFaultCheck *****************
  1497 ;; Defined at:
  1498 ;;		line 374 in file "main.c"
  1499 ;; Parameters:    Size  Location     Type
  1500 ;;		None
  1501 ;; Auto vars:     Size  Location     Type
  1502 ;;		None
  1503 ;; Return value:  Size  Location     Type
  1504 ;;                  1    wreg      void 
  1505 ;; Registers used:
  1506 ;;		None
  1507 ;; Tracked objects:
  1508 ;;		On entry : 0/0
  1509 ;;		On exit  : 0/0
  1510 ;;		Unchanged: 0/0
  1511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1512 ;;      Params:         0       0       0       0       0       0       0       0
  1513 ;;      Locals:         0       0       0       0       0       0       0       0
  1514 ;;      Temps:          0       0       0       0       0       0       0       0
  1515 ;;      Totals:         0       0       0       0       0       0       0       0
  1516 ;;Total ram usage:        0 bytes
  1517 ;; Hardware stack levels used:    1
  1518 ;; Hardware stack levels required when called:    1
  1519 ;; This function calls:
  1520 ;;		Nothing
  1521 ;; This function is called by:
  1522 ;;		_main
  1523 ;; This function uses a non-reentrant model
  1524 ;;
  1525                           
  1526                           
  1527                           ;psect for function _FANFaultCheck
  1528  0003                     _FANFaultCheck:	
  1529                           
  1530                           ;incstack = 0
  1531                           ; Regs used in _FANFaultCheck: []
  1532  0003  0008               	return
  1533  0004                     __end_of_FANFaultCheck:	
  1534                           
  1535                           	psect	text6
  1536  0FBB                     __ptext6:	
  1537 ;; *************** function _ErrHanler *****************
  1538 ;; Defined at:
  1539 ;;		line 381 in file "main.c"
  1540 ;; Parameters:    Size  Location     Type
  1541 ;;		None
  1542 ;; Auto vars:     Size  Location     Type
  1543 ;;		None
  1544 ;; Return value:  Size  Location     Type
  1545 ;;                  1    wreg      void 
  1546 ;; Registers used:
  1547 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1548 ;; Tracked objects:
  1549 ;;		On entry : 0/0
  1550 ;;		On exit  : 0/0
  1551 ;;		Unchanged: 0/0
  1552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1553 ;;      Params:         0       0       0       0       0       0       0       0
  1554 ;;      Locals:         0       0       0       0       0       0       0       0
  1555 ;;      Temps:          0       2       0       0       0       0       0       0
  1556 ;;      Totals:         0       2       0       0       0       0       0       0
  1557 ;;Total ram usage:        2 bytes
  1558 ;; Hardware stack levels used:    1
  1559 ;; Hardware stack levels required when called:    5
  1560 ;; This function calls:
  1561 ;;		_ErrFlush
  1562 ;;		_ledFaultCheck
  1563 ;;		_temperatureCheck
  1564 ;; This function is called by:
  1565 ;;		_main
  1566 ;; This function uses a non-reentrant model
  1567 ;;
  1568                           
  1569                           
  1570                           ;psect for function _ErrHanler
  1571  0FBB                     _ErrHanler:	
  1572                           
  1573                           ;main.c: 383:     if(currentStatus == Error){
  1574                           
  1575                           ;incstack = 0
  1576                           ; Regs used in _ErrHanler: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1577  0FBB  3002               	movlw	2
  1578  0FBC  067B               	xorwf	_currentStatus,w
  1579  0FBD  1D03               	btfss	3,2
  1580  0FBE  0008               	return
  1581  0FBF  2FE8               	goto	l2074
  1582  0FC0                     l154:	
  1583                           ;main.c: 386:         {;main.c: 387:             case InitErr:
  1584                           
  1585                           
  1586                           ;main.c: 388:                  LATCbits.LATC0 = 0;
  1587  0FC0  101A               	bcf	26,0	;volatile
  1588                           
  1589                           ;main.c: 389:                  TRISCbits.TRISC0 = 0;
  1590  0FC1  1014               	bcf	20,0	;volatile
  1591                           
  1592                           ;main.c: 390:                  break;
  1593  0FC2  0008               	return
  1594  0FC3                     l2064:	
  1595                           
  1596                           ;main.c: 393:                 ErrFlush(2);
  1597  0FC3  3002               	movlw	2
  1598  0FC4  00F2               	movwf	ErrFlush@count
  1599  0FC5  3000               	movlw	0
  1600  0FC6  00F3               	movwf	ErrFlush@count+1
  1601  0FC7  318F  277E  318F   	fcall	_ErrFlush
  1602                           
  1603                           ;main.c: 394:                 temperatureCheck();
  1604  0FCA  3185  2505         	fcall	_temperatureCheck
  1605                           
  1606                           ;main.c: 395:                 break;
  1607  0FCC  0008               	return
  1608  0FCD                     l2066:	
  1609                           
  1610                           ;main.c: 397:                  ErrFlush(3);
  1611  0FCD  3003               	movlw	3
  1612  0FCE  00F2               	movwf	ErrFlush@count
  1613  0FCF  3000               	movlw	0
  1614  0FD0  00F3               	movwf	ErrFlush@count+1
  1615  0FD1  318F  277E  318F   	fcall	_ErrFlush
  1616                           
  1617                           ;main.c: 398:                 temperatureCheck();
  1618  0FD4  3185  2505         	fcall	_temperatureCheck
  1619                           
  1620                           ;main.c: 399:                  break;
  1621  0FD6  0008               	return
  1622  0FD7                     l2068:	
  1623                           
  1624                           ;main.c: 401:                  ErrFlush(4);
  1625  0FD7  3004               	movlw	4
  1626  0FD8  00F2               	movwf	ErrFlush@count
  1627  0FD9  3000               	movlw	0
  1628  0FDA  00F3               	movwf	ErrFlush@count+1
  1629  0FDB  318F  277E  318F   	fcall	_ErrFlush
  1630                           
  1631                           ;main.c: 402:                  ledFaultCheck();
  1632  0FDE  318F  275F         	fcall	_ledFaultCheck
  1633                           
  1634                           ;main.c: 403:             break;
  1635  0FE0  0008               	return
  1636  0FE1                     l2070:	
  1637                           
  1638                           ;main.c: 405:                  ErrFlush(5);
  1639  0FE1  3005               	movlw	5
  1640  0FE2  00F2               	movwf	ErrFlush@count
  1641  0FE3  3000               	movlw	0
  1642  0FE4  00F3               	movwf	ErrFlush@count+1
  1643  0FE5  318F  277E         	fcall	_ErrFlush
  1644                           
  1645                           ;main.c: 406:             break;
  1646  0FE7  0008               	return
  1647  0FE8                     l2074:	
  1648  0FE8  0140               	movlb	0	; select bank0
  1649  0FE9  086E               	movf	_errReason,w
  1650  0FEA  00EC               	movwf	??_ErrHanler
  1651  0FEB  01ED               	clrf	??_ErrHanler+1
  1652                           
  1653                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1654                           ; Switch size 1, requested type "simple"
  1655                           ; Number of cases is 1, Range of values is 0 to 0
  1656                           ; switch strategies available:
  1657                           ; Name         Instructions Cycles
  1658                           ; simple_byte            4     3 (average)
  1659                           ; direct_byte            8     6 (fixed)
  1660                           ; jumptable            260     6 (fixed)
  1661                           ;	Chosen strategy is simple_byte
  1662  0FEC  086D               	movf	??_ErrHanler+1,w
  1663  0FED  3A00               	xorlw	0	; case 0
  1664  0FEE  1903               	skipnz
  1665  0FEF  2FF1               	goto	l2168
  1666  0FF0  2FE1               	goto	l2070
  1667  0FF1                     l2168:	
  1668                           
  1669                           ; Switch size 1, requested type "simple"
  1670                           ; Number of cases is 4, Range of values is 1 to 4
  1671                           ; switch strategies available:
  1672                           ; Name         Instructions Cycles
  1673                           ; simple_byte           13     7 (average)
  1674                           ; direct_byte           17     9 (fixed)
  1675                           ; jumptable            263     9 (fixed)
  1676                           ;	Chosen strategy is simple_byte
  1677  0FF1  086C               	movf	??_ErrHanler,w
  1678  0FF2  3A01               	xorlw	1	; case 1
  1679  0FF3  1903               	skipnz
  1680  0FF4  2FC0               	goto	l154
  1681  0FF5  3A03               	xorlw	3	; case 2
  1682  0FF6  1903               	skipnz
  1683  0FF7  2FC3               	goto	l2064
  1684  0FF8  3A01               	xorlw	1	; case 3
  1685  0FF9  1903               	skipnz
  1686  0FFA  2FCD               	goto	l2066
  1687  0FFB  3A07               	xorlw	7	; case 4
  1688  0FFC  1903               	skipnz
  1689  0FFD  2FD7               	goto	l2068
  1690  0FFE  2FE1               	goto	l2070
  1691  0FFF  0008               	return
  1692  1000                     __end_of_ErrHanler:	
  1693                           
  1694                           	psect	text7
  1695  0505                     __ptext7:	
  1696 ;; *************** function _temperatureCheck *****************
  1697 ;; Defined at:
  1698 ;;		line 338 in file "main.c"
  1699 ;; Parameters:    Size  Location     Type
  1700 ;;		None
  1701 ;; Auto vars:     Size  Location     Type
  1702 ;;		None
  1703 ;; Return value:  Size  Location     Type
  1704 ;;                  1    wreg      void 
  1705 ;; Registers used:
  1706 ;;		wreg, status,2, status,0, pclath, cstack
  1707 ;; Tracked objects:
  1708 ;;		On entry : 0/0
  1709 ;;		On exit  : 0/0
  1710 ;;		Unchanged: 0/0
  1711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1712 ;;      Params:         0       0       0       0       0       0       0       0
  1713 ;;      Locals:         0       0       0       0       0       0       0       0
  1714 ;;      Temps:          0       1       0       0       0       0       0       0
  1715 ;;      Totals:         0       1       0       0       0       0       0       0
  1716 ;;Total ram usage:        1 bytes
  1717 ;; Hardware stack levels used:    1
  1718 ;; Hardware stack levels required when called:    4
  1719 ;; This function calls:
  1720 ;;		___flge
  1721 ;;		_getNTCV
  1722 ;; This function is called by:
  1723 ;;		_ErrHanler
  1724 ;;		_main
  1725 ;; This function uses a non-reentrant model
  1726 ;;
  1727                           
  1728                           
  1729                           ;psect for function _temperatureCheck
  1730  0505                     _temperatureCheck:	
  1731                           
  1732                           ;main.c: 339:     intNTCV = getNTCV(0x00);
  1733                           
  1734                           ;incstack = 0
  1735                           ; Regs used in _temperatureCheck: [wreg+status,2+status,0+pclath+cstack]
  1736  0505  3000               	movlw	0
  1737  0506  0140               	movlb	0	; select bank0
  1738  0507  00DA               	movwf	getNTCV@channel
  1739  0508  00DB               	movwf	getNTCV@channel+1
  1740  0509  3184  2428  3185   	fcall	_getNTCV
  1741  050C  0140               	movlb	0	; select bank0
  1742  050D  085D               	movf	?_getNTCV+3,w
  1743  050E  0141               	movlb	1	; select bank1
  1744  050F  00B7               	movwf	(_intNTCV+3)^(0+128)
  1745  0510  0140               	movlb	0	; select bank0
  1746  0511  085C               	movf	?_getNTCV+2,w
  1747  0512  0141               	movlb	1	; select bank1
  1748  0513  00B6               	movwf	(_intNTCV+2)^(0+128)
  1749  0514  0140               	movlb	0	; select bank0
  1750  0515  085B               	movf	?_getNTCV+1,w
  1751  0516  0141               	movlb	1	; select bank1
  1752  0517  00B5               	movwf	(_intNTCV+1)^(0+128)
  1753  0518  0140               	movlb	0	; select bank0
  1754  0519  085A               	movf	?_getNTCV,w
  1755  051A  0141               	movlb	1	; select bank1
  1756  051B  00B4               	movwf	_intNTCV^(0+128)
  1757                           
  1758                           ;main.c: 340:     extNTCV = getNTCV(0x01);
  1759  051C  3001               	movlw	1
  1760  051D  0140               	movlb	0	; select bank0
  1761  051E  00DA               	movwf	getNTCV@channel
  1762  051F  3000               	movlw	0
  1763  0520  00DB               	movwf	getNTCV@channel+1
  1764  0521  3184  2428  3185   	fcall	_getNTCV
  1765  0524  0140               	movlb	0	; select bank0
  1766  0525  085D               	movf	?_getNTCV+3,w
  1767  0526  0141               	movlb	1	; select bank1
  1768  0527  00B3               	movwf	(_extNTCV+3)^(0+128)
  1769  0528  0140               	movlb	0	; select bank0
  1770  0529  085C               	movf	?_getNTCV+2,w
  1771  052A  0141               	movlb	1	; select bank1
  1772  052B  00B2               	movwf	(_extNTCV+2)^(0+128)
  1773  052C  0140               	movlb	0	; select bank0
  1774  052D  085B               	movf	?_getNTCV+1,w
  1775  052E  0141               	movlb	1	; select bank1
  1776  052F  00B1               	movwf	(_extNTCV+1)^(0+128)
  1777  0530  0140               	movlb	0	; select bank0
  1778  0531  085A               	movf	?_getNTCV,w
  1779  0532  0141               	movlb	1	; select bank1
  1780  0533  00B0               	movwf	_extNTCV^(0+128)
  1781                           
  1782                           ;main.c: 341:     if(currentStatus == Normal){
  1783  0534  087B               	movf	_currentStatus,w
  1784  0535  1D03               	btfss	3,2
  1785  0536  2D75               	goto	l2048
  1786                           
  1787                           ;main.c: 342:         if( intNTCV < upperLimit){
  1788  0537  0837               	movf	(_intNTCV+3)^(0+128),w
  1789  0538  00F5               	movwf	___flge@ff1+3
  1790  0539  0836               	movf	(_intNTCV+2)^(0+128),w
  1791  053A  00F4               	movwf	___flge@ff1+2
  1792  053B  0835               	movf	(_intNTCV+1)^(0+128),w
  1793  053C  00F3               	movwf	___flge@ff1+1
  1794  053D  0834               	movf	_intNTCV^(0+128),w
  1795  053E  00F2               	movwf	___flge@ff1
  1796  053F  303F               	movlw	63
  1797  0540  00F9               	movwf	___flge@ff2+3
  1798  0541  305C               	movlw	92
  1799  0542  00F8               	movwf	___flge@ff2+2
  1800  0543  3028               	movlw	40
  1801  0544  00F7               	movwf	___flge@ff2+1
  1802  0545  30F6               	movlw	246
  1803  0546  00F6               	movwf	___flge@ff2
  1804  0547  3186  2647  3185   	fcall	___flge
  1805  054A  1803               	btfsc	3,0
  1806  054B  2D55               	goto	l2044
  1807                           
  1808                           ;main.c: 343:             currentStatus = Error;
  1809  054C  3002               	movlw	2
  1810  054D  0140               	movlb	0	; select bank0
  1811  054E  00EB               	movwf	??_temperatureCheck
  1812  054F  086B               	movf	??_temperatureCheck,w
  1813  0550  00FB               	movwf	_currentStatus
  1814                           
  1815                           ;main.c: 344:             errReason = BoardHiTempErr;
  1816  0551  3003               	movlw	3
  1817  0552  00EB               	movwf	??_temperatureCheck
  1818  0553  086B               	movf	??_temperatureCheck,w
  1819  0554  00EE               	movwf	_errReason
  1820  0555                     l2044:	
  1821                           
  1822                           ;main.c: 346:         if( extNTCV < upperLimit) {
  1823  0555  0141               	movlb	1	; select bank1
  1824  0556  0833               	movf	(_extNTCV+3)^(0+128),w
  1825  0557  00F5               	movwf	___flge@ff1+3
  1826  0558  0832               	movf	(_extNTCV+2)^(0+128),w
  1827  0559  00F4               	movwf	___flge@ff1+2
  1828  055A  0831               	movf	(_extNTCV+1)^(0+128),w
  1829  055B  00F3               	movwf	___flge@ff1+1
  1830  055C  0830               	movf	_extNTCV^(0+128),w
  1831  055D  00F2               	movwf	___flge@ff1
  1832  055E  303F               	movlw	63
  1833  055F  00F9               	movwf	___flge@ff2+3
  1834  0560  305C               	movlw	92
  1835  0561  00F8               	movwf	___flge@ff2+2
  1836  0562  3028               	movlw	40
  1837  0563  00F7               	movwf	___flge@ff2+1
  1838  0564  30F6               	movlw	246
  1839  0565  00F6               	movwf	___flge@ff2
  1840  0566  3186  2647  3185   	fcall	___flge
  1841  0569  1803               	btfsc	3,0
  1842  056A  0008               	return
  1843                           
  1844                           ;main.c: 347:             currentStatus = Error;
  1845  056B  3002               	movlw	2
  1846  056C  0140               	movlb	0	; select bank0
  1847  056D  00EB               	movwf	??_temperatureCheck
  1848  056E  086B               	movf	??_temperatureCheck,w
  1849  056F  00FB               	movwf	_currentStatus
  1850                           
  1851                           ;main.c: 348:             errReason = LEDHiTempErr;
  1852  0570  3002               	movlw	2
  1853  0571  00EB               	movwf	??_temperatureCheck
  1854  0572  086B               	movf	??_temperatureCheck,w
  1855  0573  00EE               	movwf	_errReason
  1856  0574  0008               	return
  1857  0575                     l2048:	
  1858  0575  3002               	movlw	2
  1859  0576  067B               	xorwf	_currentStatus,w
  1860  0577  1D03               	btfss	3,2
  1861  0578  0008               	return
  1862                           
  1863                           ;main.c: 352:         if(((intNTCV > restoreLevel) && (errReason == BoardHiTempErr)) || 
      +                          ((extNTCV > restoreLevel) && (errReason == LEDHiTempErr))){
  1864  0579  303F               	movlw	63
  1865  057A  00F5               	movwf	___flge@ff1+3
  1866  057B  3083               	movlw	131
  1867  057C  00F4               	movwf	___flge@ff1+2
  1868  057D  30D7               	movlw	215
  1869  057E  00F3               	movwf	___flge@ff1+1
  1870  057F  300A               	movlw	10
  1871  0580  00F2               	movwf	___flge@ff1
  1872  0581  0837               	movf	(_intNTCV+3)^(0+128),w
  1873  0582  00F9               	movwf	___flge@ff2+3
  1874  0583  0836               	movf	(_intNTCV+2)^(0+128),w
  1875  0584  00F8               	movwf	___flge@ff2+2
  1876  0585  0835               	movf	(_intNTCV+1)^(0+128),w
  1877  0586  00F7               	movwf	___flge@ff2+1
  1878  0587  0834               	movf	_intNTCV^(0+128),w
  1879  0588  00F6               	movwf	___flge@ff2
  1880  0589  3186  2647  3185   	fcall	___flge
  1881  058C  1803               	btfsc	3,0
  1882  058D  2D93               	goto	l2054
  1883  058E  3003               	movlw	3
  1884  058F  0140               	movlb	0	; select bank0
  1885  0590  066E               	xorwf	_errReason,w
  1886  0591  1903               	btfsc	3,2
  1887  0592  2DAE               	goto	l2058
  1888  0593                     l2054:	
  1889  0593  303F               	movlw	63
  1890  0594  00F5               	movwf	___flge@ff1+3
  1891  0595  3083               	movlw	131
  1892  0596  00F4               	movwf	___flge@ff1+2
  1893  0597  30D7               	movlw	215
  1894  0598  00F3               	movwf	___flge@ff1+1
  1895  0599  300A               	movlw	10
  1896  059A  00F2               	movwf	___flge@ff1
  1897  059B  0141               	movlb	1	; select bank1
  1898  059C  0833               	movf	(_extNTCV+3)^(0+128),w
  1899  059D  00F9               	movwf	___flge@ff2+3
  1900  059E  0832               	movf	(_extNTCV+2)^(0+128),w
  1901  059F  00F8               	movwf	___flge@ff2+2
  1902  05A0  0831               	movf	(_extNTCV+1)^(0+128),w
  1903  05A1  00F7               	movwf	___flge@ff2+1
  1904  05A2  0830               	movf	_extNTCV^(0+128),w
  1905  05A3  00F6               	movwf	___flge@ff2
  1906  05A4  3186  2647  3185   	fcall	___flge
  1907  05A7  1803               	btfsc	3,0
  1908  05A8  0008               	return
  1909  05A9  3002               	movlw	2
  1910  05AA  0140               	movlb	0	; select bank0
  1911  05AB  066E               	xorwf	_errReason,w
  1912  05AC  1D03               	btfss	3,2
  1913  05AD  0008               	return
  1914  05AE                     l2058:	
  1915                           
  1916                           ;main.c: 353:             currentStatus = Normal;
  1917  05AE  01FB               	clrf	_currentStatus
  1918                           
  1919                           ;main.c: 354:             errReason = NoErr;
  1920  05AF  01EE               	clrf	_errReason
  1921  05B0  0008               	return
  1922  05B1                     __end_of_temperatureCheck:	
  1923                           
  1924                           	psect	text8
  1925  0428                     __ptext8:	
  1926 ;; *************** function _getNTCV *****************
  1927 ;; Defined at:
  1928 ;;		line 231 in file "main.c"
  1929 ;; Parameters:    Size  Location     Type
  1930 ;;  channel         2   58[BANK0 ] unsigned int 
  1931 ;; Auto vars:     Size  Location     Type
  1932 ;;  voltage         4   71[BANK0 ] float 
  1933 ;;  VDD             4   67[BANK0 ] float 
  1934 ;; Return value:  Size  Location     Type
  1935 ;;                  4   58[BANK0 ] float 
  1936 ;; Registers used:
  1937 ;;		wreg, status,2, status,0, pclath, cstack
  1938 ;; Tracked objects:
  1939 ;;		On entry : 0/0
  1940 ;;		On exit  : 0/0
  1941 ;;		Unchanged: 0/0
  1942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1943 ;;      Params:         0       4       0       0       0       0       0       0
  1944 ;;      Locals:         0      12       0       0       0       0       0       0
  1945 ;;      Temps:          0       1       0       0       0       0       0       0
  1946 ;;      Totals:         0      17       0       0       0       0       0       0
  1947 ;;Total ram usage:       17 bytes
  1948 ;; Hardware stack levels used:    1
  1949 ;; Hardware stack levels required when called:    3
  1950 ;; This function calls:
  1951 ;;		___fldiv
  1952 ;;		___flmul
  1953 ;;		___xxtofl
  1954 ;; This function is called by:
  1955 ;;		_temperatureCheck
  1956 ;; This function uses a non-reentrant model
  1957 ;;
  1958                           
  1959                           
  1960                           ;psect for function _getNTCV
  1961  0428                     _getNTCV:	
  1962                           
  1963                           ;main.c: 235:     float voltage = 0;
  1964                           
  1965                           ;incstack = 0
  1966                           ; Regs used in _getNTCV: [wreg+status,2+status,0+pclath+cstack]
  1967  0428  3000               	movlw	0
  1968  0429  0140               	movlb	0	; select bank0
  1969  042A  00EA               	movwf	getNTCV@voltage+3
  1970  042B  3000               	movlw	0
  1971  042C  00E9               	movwf	getNTCV@voltage+2
  1972  042D  3000               	movlw	0
  1973  042E  00E8               	movwf	getNTCV@voltage+1
  1974  042F  3000               	movlw	0
  1975  0430  00E7               	movwf	getNTCV@voltage
  1976                           
  1977                           ;main.c: 237:     ADCON0bits.ADON = 1;
  1978  0431  0141               	movlb	1	; select bank1
  1979  0432  141D               	bsf	29,0	;volatile
  1980                           
  1981                           ;main.c: 241:         ADCON0bits.CHS = 0x3F;
  1982  0433  30FC               	movlw	252
  1983  0434  049D               	iorwf	29,f	;volatile
  1984                           
  1985                           ;main.c: 242:         _delay((unsigned long)((100)*(32000000/4000000.0)));
  1986  0435  30A0               	movlw	160
  1987  0436                     u2507:	
  1988  0436  3200               	nop2
  1989  0437  0B89               	decfsz	9,f
  1990  0438  2C36               	goto	u2507
  1991                           
  1992                           ;main.c: 243:         ADCON0bits.GO = 1;
  1993  0439  0141               	movlb	1	; select bank1
  1994  043A  149D               	bsf	29,1	;volatile
  1995  043B                     l2016:	
  1996                           ;main.c: 244:         while(ADCON0bits.GOnDONE){
  1997                           
  1998                           
  1999                           ;main.c: 244:         while(ADCON0bits.GOnDONE){
  2000  043B  0141               	movlb	1	; select bank1
  2001  043C  1C9D               	btfss	29,1	;volatile
  2002  043D  2C43               	goto	l2018
  2003                           
  2004                           ;main.c: 245:             _delay((unsigned long)((8)*(32000000/4000000.0)));
  2005  043E  3015               	movlw	21
  2006  043F                     u2517:	
  2007  043F  0B89               	decfsz	9,f
  2008  0440  2C3F               	goto	u2517
  2009  0441  0000               	nop
  2010  0442  2C3B               	goto	l2016
  2011  0443                     l2018:	
  2012                           
  2013                           ;main.c: 247:         VDD = ((float)1024/(float)ADRES)*DIA_Table.FVRA4X;
  2014  0443  0828               	movf	(_DIA_Table^(0+128)+8),w
  2015  0444  00F2               	movwf	___xxtofl@val
  2016  0445  0829               	movf	((_DIA_Table+1)^(0+128)+8),w
  2017  0446  00F3               	movwf	___xxtofl@val+1
  2018  0447  01F4               	clrf	___xxtofl@val+2
  2019  0448  01F5               	clrf	___xxtofl@val+3
  2020  0449  3000               	movlw	0
  2021  044A  3185  25B1  3184   	fcall	___xxtofl
  2022  044D  0875               	movf	?___xxtofl+3,w
  2023  044E  0140               	movlb	0	; select bank0
  2024  044F  00C3               	movwf	___flmul@b+3
  2025  0450  0874               	movf	?___xxtofl+2,w
  2026  0451  00C2               	movwf	___flmul@b+2
  2027  0452  0873               	movf	?___xxtofl+1,w
  2028  0453  00C1               	movwf	___flmul@b+1
  2029  0454  0872               	movf	?___xxtofl,w
  2030  0455  00C0               	movwf	___flmul@b
  2031  0456  0141               	movlb	1	; select bank1
  2032  0457  081B               	movf	27,w	;volatile
  2033  0458  00F2               	movwf	___xxtofl@val
  2034  0459  081C               	movf	28,w	;volatile
  2035  045A  00F3               	movwf	___xxtofl@val+1
  2036  045B  01F4               	clrf	___xxtofl@val+2
  2037  045C  01F5               	clrf	___xxtofl@val+3
  2038  045D  3000               	movlw	0
  2039  045E  3185  25B1  3184   	fcall	___xxtofl
  2040  0461  0875               	movf	?___xxtofl+3,w
  2041  0462  0140               	movlb	0	; select bank0
  2042  0463  00A9               	movwf	___fldiv@a+3
  2043  0464  0874               	movf	?___xxtofl+2,w
  2044  0465  00A8               	movwf	___fldiv@a+2
  2045  0466  0873               	movf	?___xxtofl+1,w
  2046  0467  00A7               	movwf	___fldiv@a+1
  2047  0468  0872               	movf	?___xxtofl,w
  2048  0469  00A6               	movwf	___fldiv@a
  2049  046A  3044               	movlw	68
  2050  046B  00AD               	movwf	___fldiv@b+3
  2051  046C  3080               	movlw	128
  2052  046D  00AC               	movwf	___fldiv@b+2
  2053  046E  3000               	movlw	0
  2054  046F  00AB               	movwf	___fldiv@b+1
  2055  0470  3000               	movlw	0
  2056  0471  00AA               	movwf	___fldiv@b
  2057  0472  3182  22AE  3184   	fcall	___fldiv
  2058  0475  0140               	movlb	0	; select bank0
  2059  0476  0829               	movf	?___fldiv+3,w
  2060  0477  00C7               	movwf	___flmul@a+3
  2061  0478  0828               	movf	?___fldiv+2,w
  2062  0479  00C6               	movwf	___flmul@a+2
  2063  047A  0827               	movf	?___fldiv+1,w
  2064  047B  00C5               	movwf	___flmul@a+1
  2065  047C  0826               	movf	?___fldiv,w
  2066  047D  00C4               	movwf	___flmul@a
  2067  047E  3180  2082  3184   	fcall	___flmul
  2068  0481  0140               	movlb	0	; select bank0
  2069  0482  0843               	movf	?___flmul+3,w
  2070  0483  00E6               	movwf	getNTCV@VDD+3
  2071  0484  0842               	movf	?___flmul+2,w
  2072  0485  00E5               	movwf	getNTCV@VDD+2
  2073  0486  0841               	movf	?___flmul+1,w
  2074  0487  00E4               	movwf	getNTCV@VDD+1
  2075  0488  0840               	movf	?___flmul,w
  2076  0489  00E3               	movwf	getNTCV@VDD
  2077                           
  2078                           ;main.c: 250:         ADCON0bits.CHS = channel;
  2079  048A  085A               	movf	getNTCV@channel,w
  2080  048B  00DE               	movwf	??_getNTCV
  2081  048C  0DDE               	rlf	??_getNTCV,f
  2082  048D  0DDE               	rlf	??_getNTCV,f
  2083  048E  0141               	movlb	1	; select bank1
  2084  048F  081D               	movf	29,w	;volatile
  2085  0490  0140               	movlb	0	; select bank0
  2086  0491  065E               	xorwf	??_getNTCV,w
  2087  0492  3903               	andlw	-253
  2088  0493  065E               	xorwf	??_getNTCV,w
  2089  0494  0141               	movlb	1	; select bank1
  2090  0495  009D               	movwf	29	;volatile
  2091                           
  2092                           ;main.c: 252:         _delay((unsigned long)((100)*(32000000/4000000.0)));
  2093  0496  30A0               	movlw	160
  2094  0497                     u2527:	
  2095  0497  3200               	nop2
  2096  0498  0B89               	decfsz	9,f
  2097  0499  2C97               	goto	u2527
  2098                           
  2099                           ;main.c: 253:         ADCON0bits.GO = 1;
  2100  049A  0141               	movlb	1	; select bank1
  2101  049B  149D               	bsf	29,1	;volatile
  2102  049C                     l2028:	
  2103                           ;main.c: 254:         while(ADCON0bits.GOnDONE){
  2104                           
  2105                           
  2106                           ;main.c: 254:         while(ADCON0bits.GOnDONE){
  2107  049C  0141               	movlb	1	; select bank1
  2108  049D  1C9D               	btfss	29,1	;volatile
  2109  049E  2CA4               	goto	l2030
  2110                           
  2111                           ;main.c: 255:             _delay((unsigned long)((8)*(32000000/4000000.0)));
  2112  049F  3015               	movlw	21
  2113  04A0                     u2537:	
  2114  04A0  0B89               	decfsz	9,f
  2115  04A1  2CA0               	goto	u2537
  2116  04A2  0000               	nop
  2117  04A3  2C9C               	goto	l2028
  2118  04A4                     l2030:	
  2119                           
  2120                           ;main.c: 257:         voltage = ((float)ADRES/(float)1023)*VDD*0.001;
  2121  04A4  0140               	movlb	0	; select bank0
  2122  04A5  0866               	movf	getNTCV@VDD+3,w
  2123  04A6  00C3               	movwf	___flmul@b+3
  2124  04A7  0865               	movf	getNTCV@VDD+2,w
  2125  04A8  00C2               	movwf	___flmul@b+2
  2126  04A9  0864               	movf	getNTCV@VDD+1,w
  2127  04AA  00C1               	movwf	___flmul@b+1
  2128  04AB  0863               	movf	getNTCV@VDD,w
  2129  04AC  00C0               	movwf	___flmul@b
  2130  04AD  3044               	movlw	68
  2131  04AE  00A9               	movwf	___fldiv@a+3
  2132  04AF  307F               	movlw	127
  2133  04B0  00A8               	movwf	___fldiv@a+2
  2134  04B1  30C0               	movlw	192
  2135  04B2  00A7               	movwf	___fldiv@a+1
  2136  04B3  3000               	movlw	0
  2137  04B4  00A6               	movwf	___fldiv@a
  2138  04B5  0141               	movlb	1	; select bank1
  2139  04B6  081B               	movf	27,w	;volatile
  2140  04B7  00F2               	movwf	___xxtofl@val
  2141  04B8  081C               	movf	28,w	;volatile
  2142  04B9  00F3               	movwf	___xxtofl@val+1
  2143  04BA  01F4               	clrf	___xxtofl@val+2
  2144  04BB  01F5               	clrf	___xxtofl@val+3
  2145  04BC  3000               	movlw	0
  2146  04BD  3185  25B1  3184   	fcall	___xxtofl
  2147  04C0  0875               	movf	?___xxtofl+3,w
  2148  04C1  0140               	movlb	0	; select bank0
  2149  04C2  00AD               	movwf	___fldiv@b+3
  2150  04C3  0874               	movf	?___xxtofl+2,w
  2151  04C4  00AC               	movwf	___fldiv@b+2
  2152  04C5  0873               	movf	?___xxtofl+1,w
  2153  04C6  00AB               	movwf	___fldiv@b+1
  2154  04C7  0872               	movf	?___xxtofl,w
  2155  04C8  00AA               	movwf	___fldiv@b
  2156  04C9  3182  22AE  3184   	fcall	___fldiv
  2157  04CC  0140               	movlb	0	; select bank0
  2158  04CD  0829               	movf	?___fldiv+3,w
  2159  04CE  00C7               	movwf	___flmul@a+3
  2160  04CF  0828               	movf	?___fldiv+2,w
  2161  04D0  00C6               	movwf	___flmul@a+2
  2162  04D1  0827               	movf	?___fldiv+1,w
  2163  04D2  00C5               	movwf	___flmul@a+1
  2164  04D3  0826               	movf	?___fldiv,w
  2165  04D4  00C4               	movwf	___flmul@a
  2166  04D5  3180  2082  3184   	fcall	___flmul
  2167  04D8  0140               	movlb	0	; select bank0
  2168  04D9  0843               	movf	?___flmul+3,w
  2169  04DA  00E2               	movwf	_getNTCV$1089+3
  2170  04DB  0842               	movf	?___flmul+2,w
  2171  04DC  00E1               	movwf	_getNTCV$1089+2
  2172  04DD  0841               	movf	?___flmul+1,w
  2173  04DE  00E0               	movwf	_getNTCV$1089+1
  2174  04DF  0840               	movf	?___flmul,w
  2175  04E0  00DF               	movwf	_getNTCV$1089
  2176                           
  2177                           ;main.c: 257:         voltage = ((float)ADRES/(float)1023)*VDD*0.001;
  2178  04E1  303A               	movlw	58
  2179  04E2  00C3               	movwf	___flmul@b+3
  2180  04E3  3083               	movlw	131
  2181  04E4  00C2               	movwf	___flmul@b+2
  2182  04E5  3012               	movlw	18
  2183  04E6  00C1               	movwf	___flmul@b+1
  2184  04E7  306F               	movlw	111
  2185  04E8  00C0               	movwf	___flmul@b
  2186  04E9  0862               	movf	_getNTCV$1089+3,w
  2187  04EA  00C7               	movwf	___flmul@a+3
  2188  04EB  0861               	movf	_getNTCV$1089+2,w
  2189  04EC  00C6               	movwf	___flmul@a+2
  2190  04ED  0860               	movf	_getNTCV$1089+1,w
  2191  04EE  00C5               	movwf	___flmul@a+1
  2192  04EF  085F               	movf	_getNTCV$1089,w
  2193  04F0  00C4               	movwf	___flmul@a
  2194  04F1  3180  2082         	fcall	___flmul
  2195  04F3  0140               	movlb	0	; select bank0
  2196  04F4  0843               	movf	?___flmul+3,w
  2197  04F5  00EA               	movwf	getNTCV@voltage+3
  2198  04F6  0842               	movf	?___flmul+2,w
  2199  04F7  00E9               	movwf	getNTCV@voltage+2
  2200  04F8  0841               	movf	?___flmul+1,w
  2201  04F9  00E8               	movwf	getNTCV@voltage+1
  2202  04FA  0840               	movf	?___flmul,w
  2203  04FB  00E7               	movwf	getNTCV@voltage
  2204                           
  2205                           ;main.c: 259:     return voltage;
  2206  04FC  086A               	movf	getNTCV@voltage+3,w
  2207  04FD  00DD               	movwf	?_getNTCV+3
  2208  04FE  0869               	movf	getNTCV@voltage+2,w
  2209  04FF  00DC               	movwf	?_getNTCV+2
  2210  0500  0868               	movf	getNTCV@voltage+1,w
  2211  0501  00DB               	movwf	?_getNTCV+1
  2212  0502  0867               	movf	getNTCV@voltage,w
  2213  0503  00DA               	movwf	?_getNTCV
  2214  0504  0008               	return
  2215  0505                     __end_of_getNTCV:	
  2216                           
  2217                           	psect	text9
  2218  05B1                     __ptext9:	
  2219 ;; *************** function ___xxtofl *****************
  2220 ;; Defined at:
  2221 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  2222 ;; Parameters:    Size  Location     Type
  2223 ;;  sign            1    wreg     unsigned char 
  2224 ;;  val             4    2[COMMON] long 
  2225 ;; Auto vars:     Size  Location     Type
  2226 ;;  sign            1    0[BANK0 ] unsigned char 
  2227 ;;  arg             4    2[BANK0 ] unsigned long 
  2228 ;;  exp             1    1[BANK0 ] unsigned char 
  2229 ;; Return value:  Size  Location     Type
  2230 ;;                  4    2[COMMON] unsigned char 
  2231 ;; Registers used:
  2232 ;;		wreg, status,2, status,0
  2233 ;; Tracked objects:
  2234 ;;		On entry : 0/0
  2235 ;;		On exit  : 0/0
  2236 ;;		Unchanged: 0/0
  2237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2238 ;;      Params:         4       0       0       0       0       0       0       0
  2239 ;;      Locals:         0       6       0       0       0       0       0       0
  2240 ;;      Temps:          4       0       0       0       0       0       0       0
  2241 ;;      Totals:         8       6       0       0       0       0       0       0
  2242 ;;Total ram usage:       14 bytes
  2243 ;; Hardware stack levels used:    1
  2244 ;; Hardware stack levels required when called:    1
  2245 ;; This function calls:
  2246 ;;		Nothing
  2247 ;; This function is called by:
  2248 ;;		_getNTCV
  2249 ;; This function uses a non-reentrant model
  2250 ;;
  2251                           
  2252                           
  2253                           ;psect for function ___xxtofl
  2254  05B1                     ___xxtofl:	
  2255                           
  2256                           ;incstack = 0
  2257                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2258                           ;___xxtofl@sign stored from wreg
  2259  05B1  0140               	movlb	0	; select bank0
  2260  05B2  00A0               	movwf	___xxtofl@sign
  2261  05B3  0820               	movf	___xxtofl@sign,w
  2262  05B4  1D03               	btfss	3,2
  2263  05B5  1FF5               	btfss	___xxtofl@val+3,7
  2264  05B6  2DC7               	goto	l1660
  2265  05B7  0972               	comf	___xxtofl@val,w
  2266  05B8  00A2               	movwf	___xxtofl@arg
  2267  05B9  0973               	comf	___xxtofl@val+1,w
  2268  05BA  00A3               	movwf	___xxtofl@arg+1
  2269  05BB  0974               	comf	___xxtofl@val+2,w
  2270  05BC  00A4               	movwf	___xxtofl@arg+2
  2271  05BD  0975               	comf	___xxtofl@val+3,w
  2272  05BE  00A5               	movwf	___xxtofl@arg+3
  2273  05BF  0AA2               	incf	___xxtofl@arg,f
  2274  05C0  1903               	skipnz
  2275  05C1  0AA3               	incf	___xxtofl@arg+1,f
  2276  05C2  1903               	skipnz
  2277  05C3  0AA4               	incf	___xxtofl@arg+2,f
  2278  05C4  1903               	skipnz
  2279  05C5  0AA5               	incf	___xxtofl@arg+3,f
  2280  05C6  2DCF               	goto	l697
  2281  05C7                     l1660:	
  2282  05C7  0875               	movf	___xxtofl@val+3,w
  2283  05C8  00A5               	movwf	___xxtofl@arg+3
  2284  05C9  0874               	movf	___xxtofl@val+2,w
  2285  05CA  00A4               	movwf	___xxtofl@arg+2
  2286  05CB  0873               	movf	___xxtofl@val+1,w
  2287  05CC  00A3               	movwf	___xxtofl@arg+1
  2288  05CD  0872               	movf	___xxtofl@val,w
  2289  05CE  00A2               	movwf	___xxtofl@arg
  2290  05CF                     l697:	
  2291  05CF  0875               	movf	___xxtofl@val+3,w
  2292  05D0  0474               	iorwf	___xxtofl@val+2,w
  2293  05D1  0473               	iorwf	___xxtofl@val+1,w
  2294  05D2  0472               	iorwf	___xxtofl@val,w
  2295  05D3  1D03               	skipz
  2296  05D4  2DDE               	goto	l1666
  2297  05D5  3000               	movlw	0
  2298  05D6  00F5               	movwf	?___xxtofl+3
  2299  05D7  3000               	movlw	0
  2300  05D8  00F4               	movwf	?___xxtofl+2
  2301  05D9  3000               	movlw	0
  2302  05DA  00F3               	movwf	?___xxtofl+1
  2303  05DB  3000               	movlw	0
  2304  05DC  00F2               	movwf	?___xxtofl
  2305  05DD  0008               	return
  2306  05DE                     l1666:	
  2307  05DE  3096               	movlw	150
  2308  05DF  00F6               	movwf	??___xxtofl
  2309  05E0  0876               	movf	??___xxtofl,w
  2310  05E1  00A1               	movwf	___xxtofl@exp
  2311  05E2                     l1670:	
  2312  05E2  30FE               	movlw	254
  2313  05E3  0525               	andwf	___xxtofl@arg+3,w
  2314  05E4  1903               	btfsc	3,2
  2315  05E5  2E05               	goto	l703
  2316  05E6  3001               	movlw	1
  2317  05E7  00F6               	movwf	??___xxtofl
  2318  05E8  0876               	movf	??___xxtofl,w
  2319  05E9  07A1               	addwf	___xxtofl@exp,f
  2320  05EA  3001               	movlw	1
  2321  05EB                     u1785:	
  2322  05EB  36A5               	lsrf	___xxtofl@arg+3,f
  2323  05EC  0CA4               	rrf	___xxtofl@arg+2,f
  2324  05ED  0CA3               	rrf	___xxtofl@arg+1,f
  2325  05EE  0CA2               	rrf	___xxtofl@arg,f
  2326  05EF  0B89               	decfsz	9,f
  2327  05F0  2DEB               	goto	u1785
  2328  05F1  2DE2               	goto	l1670
  2329  05F2                     l1672:	
  2330  05F2  3001               	movlw	1
  2331  05F3  00F6               	movwf	??___xxtofl
  2332  05F4  0876               	movf	??___xxtofl,w
  2333  05F5  07A1               	addwf	___xxtofl@exp,f
  2334  05F6  3001               	movlw	1
  2335  05F7  07A2               	addwf	___xxtofl@arg,f
  2336  05F8  3000               	movlw	0
  2337  05F9  3DA3               	addwfc	___xxtofl@arg+1,f
  2338  05FA  3000               	movlw	0
  2339  05FB  3DA4               	addwfc	___xxtofl@arg+2,f
  2340  05FC  3000               	movlw	0
  2341  05FD  3DA5               	addwfc	___xxtofl@arg+3,f
  2342  05FE  3001               	movlw	1
  2343  05FF                     u1805:	
  2344  05FF  36A5               	lsrf	___xxtofl@arg+3,f
  2345  0600  0CA4               	rrf	___xxtofl@arg+2,f
  2346  0601  0CA3               	rrf	___xxtofl@arg+1,f
  2347  0602  0CA2               	rrf	___xxtofl@arg,f
  2348  0603  0B89               	decfsz	9,f
  2349  0604  2DFF               	goto	u1805
  2350  0605                     l703:	
  2351  0605  30FF               	movlw	255
  2352  0606  0525               	andwf	___xxtofl@arg+3,w
  2353  0607  1903               	btfsc	3,2
  2354  0608  2E17               	goto	l1680
  2355  0609  2DF2               	goto	l1672
  2356  060A                     l1682:	
  2357  060A  3002               	movlw	2
  2358  060B  0221               	subwf	___xxtofl@exp,w
  2359  060C  1C03               	btfss	3,0
  2360  060D  2E19               	goto	l710
  2361  060E  3001               	movlw	1
  2362  060F  02A1               	subwf	___xxtofl@exp,f
  2363  0610  3001               	movlw	1
  2364  0611                     u1825:	
  2365  0611  35A2               	lslf	___xxtofl@arg,f
  2366  0612  0DA3               	rlf	___xxtofl@arg+1,f
  2367  0613  0DA4               	rlf	___xxtofl@arg+2,f
  2368  0614  0DA5               	rlf	___xxtofl@arg+3,f
  2369  0615  0B89               	decfsz	9,f
  2370  0616  2E11               	goto	u1825
  2371  0617                     l1680:	
  2372  0617  1FA4               	btfss	___xxtofl@arg+2,7
  2373  0618  2E0A               	goto	l1682
  2374  0619                     l710:	
  2375  0619  1821               	btfsc	___xxtofl@exp,0
  2376  061A  2E23               	goto	l711
  2377  061B  30FF               	movlw	255
  2378  061C  05A2               	andwf	___xxtofl@arg,f
  2379  061D  30FF               	movlw	255
  2380  061E  05A3               	andwf	___xxtofl@arg+1,f
  2381  061F  307F               	movlw	127
  2382  0620  05A4               	andwf	___xxtofl@arg+2,f
  2383  0621  30FF               	movlw	255
  2384  0622  05A5               	andwf	___xxtofl@arg+3,f
  2385  0623                     l711:	
  2386  0623  1003               	clrc
  2387  0624  0CA1               	rrf	___xxtofl@exp,f
  2388  0625  0821               	movf	___xxtofl@exp,w
  2389  0626  00F6               	movwf	??___xxtofl
  2390  0627  01F7               	clrf	??___xxtofl+1
  2391  0628  01F8               	clrf	??___xxtofl+2
  2392  0629  01F9               	clrf	??___xxtofl+3
  2393  062A  3018               	movlw	24
  2394  062B                     u1865:	
  2395  062B  35F6               	lslf	??___xxtofl,f
  2396  062C  0DF7               	rlf	??___xxtofl+1,f
  2397  062D  0DF8               	rlf	??___xxtofl+2,f
  2398  062E  0DF9               	rlf	??___xxtofl+3,f
  2399  062F  0B89               	decfsz	9,f
  2400  0630  2E2B               	goto	u1865
  2401  0631  0876               	movf	??___xxtofl,w
  2402  0632  04A2               	iorwf	___xxtofl@arg,f
  2403  0633  0877               	movf	??___xxtofl+1,w
  2404  0634  04A3               	iorwf	___xxtofl@arg+1,f
  2405  0635  0878               	movf	??___xxtofl+2,w
  2406  0636  04A4               	iorwf	___xxtofl@arg+2,f
  2407  0637  0879               	movf	??___xxtofl+3,w
  2408  0638  04A5               	iorwf	___xxtofl@arg+3,f
  2409  0639  0820               	movf	___xxtofl@sign,w
  2410  063A  1D03               	btfss	3,2
  2411  063B  1FF5               	btfss	___xxtofl@val+3,7
  2412  063C  2E3E               	goto	l1694
  2413  063D  17A5               	bsf	___xxtofl@arg+3,7
  2414  063E                     l1694:	
  2415  063E  0825               	movf	___xxtofl@arg+3,w
  2416  063F  00F5               	movwf	?___xxtofl+3
  2417  0640  0824               	movf	___xxtofl@arg+2,w
  2418  0641  00F4               	movwf	?___xxtofl+2
  2419  0642  0823               	movf	___xxtofl@arg+1,w
  2420  0643  00F3               	movwf	?___xxtofl+1
  2421  0644  0822               	movf	___xxtofl@arg,w
  2422  0645  00F2               	movwf	?___xxtofl
  2423  0646  0008               	return
  2424  0647                     __end_of___xxtofl:	
  2425                           
  2426                           	psect	text10
  2427  0082                     __ptext10:	
  2428 ;; *************** function ___flmul *****************
  2429 ;; Defined at:
  2430 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  2431 ;; Parameters:    Size  Location     Type
  2432 ;;  b               4   32[BANK0 ] unsigned char 
  2433 ;;  a               4   36[BANK0 ] unsigned char 
  2434 ;; Auto vars:     Size  Location     Type
  2435 ;;  prod            4   52[BANK0 ] struct .
  2436 ;;  grs             4   46[BANK0 ] unsigned long 
  2437 ;;  temp            2   56[BANK0 ] struct .
  2438 ;;  bexp            1   51[BANK0 ] unsigned char 
  2439 ;;  aexp            1   50[BANK0 ] unsigned char 
  2440 ;;  sign            1   45[BANK0 ] unsigned char 
  2441 ;; Return value:  Size  Location     Type
  2442 ;;                  4   32[BANK0 ] unsigned char 
  2443 ;; Registers used:
  2444 ;;		wreg, status,2, status,0, pclath, cstack
  2445 ;; Tracked objects:
  2446 ;;		On entry : 0/0
  2447 ;;		On exit  : 0/0
  2448 ;;		Unchanged: 0/0
  2449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2450 ;;      Params:         0       8       0       0       0       0       0       0
  2451 ;;      Locals:         0      13       0       0       0       0       0       0
  2452 ;;      Temps:          0       5       0       0       0       0       0       0
  2453 ;;      Totals:         0      26       0       0       0       0       0       0
  2454 ;;Total ram usage:       26 bytes
  2455 ;; Hardware stack levels used:    1
  2456 ;; Hardware stack levels required when called:    2
  2457 ;; This function calls:
  2458 ;;		__Umul8_16
  2459 ;; This function is called by:
  2460 ;;		_getNTCV
  2461 ;; This function uses a non-reentrant model
  2462 ;;
  2463                           
  2464                           
  2465                           ;psect for function ___flmul
  2466  0082                     ___flmul:	
  2467                           
  2468                           ;incstack = 0
  2469                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  2470  0082  0140               	movlb	0	; select bank0
  2471  0083  0843               	movf	___flmul@b+3,w
  2472  0084  3980               	andlw	128
  2473  0085  00C8               	movwf	??___flmul
  2474  0086  0848               	movf	??___flmul,w
  2475  0087  00CD               	movwf	___flmul@sign
  2476  0088  3543               	lslf	___flmul@b+3,w
  2477  0089  00C8               	movwf	??___flmul
  2478  008A  0848               	movf	??___flmul,w
  2479  008B  00D3               	movwf	___flmul@bexp
  2480  008C  1BC2               	btfsc	___flmul@b+2,7
  2481  008D  1453               	bsf	___flmul@bexp,0
  2482  008E  0853               	movf	___flmul@bexp,w
  2483  008F  1903               	btfsc	3,2
  2484  0090  289E               	goto	l1530
  2485  0091  0A53               	incf	___flmul@bexp,w
  2486  0092  1D03               	btfss	3,2
  2487  0093  289C               	goto	l1528
  2488  0094  3000               	movlw	0
  2489  0095  00C3               	movwf	___flmul@b+3
  2490  0096  3000               	movlw	0
  2491  0097  00C2               	movwf	___flmul@b+2
  2492  0098  3000               	movlw	0
  2493  0099  00C1               	movwf	___flmul@b+1
  2494  009A  3000               	movlw	0
  2495  009B  00C0               	movwf	___flmul@b
  2496  009C                     l1528:	
  2497  009C  17C2               	bsf	___flmul@b+2,7
  2498  009D  28A6               	goto	l1532
  2499  009E                     l1530:	
  2500  009E  3000               	movlw	0
  2501  009F  00C3               	movwf	___flmul@b+3
  2502  00A0  3000               	movlw	0
  2503  00A1  00C2               	movwf	___flmul@b+2
  2504  00A2  3000               	movlw	0
  2505  00A3  00C1               	movwf	___flmul@b+1
  2506  00A4  3000               	movlw	0
  2507  00A5  00C0               	movwf	___flmul@b
  2508  00A6                     l1532:	
  2509  00A6  0847               	movf	___flmul@a+3,w
  2510  00A7  3980               	andlw	128
  2511  00A8  00C8               	movwf	??___flmul
  2512  00A9  0848               	movf	??___flmul,w
  2513  00AA  06CD               	xorwf	___flmul@sign,f
  2514  00AB  3547               	lslf	___flmul@a+3,w
  2515  00AC  00C8               	movwf	??___flmul
  2516  00AD  0848               	movf	??___flmul,w
  2517  00AE  00D2               	movwf	___flmul@aexp
  2518  00AF  1BC6               	btfsc	___flmul@a+2,7
  2519  00B0  1452               	bsf	___flmul@aexp,0
  2520  00B1  0852               	movf	___flmul@aexp,w
  2521  00B2  1903               	btfsc	3,2
  2522  00B3  28C1               	goto	l1548
  2523  00B4  0A52               	incf	___flmul@aexp,w
  2524  00B5  1D03               	btfss	3,2
  2525  00B6  28BF               	goto	l1546
  2526  00B7  3000               	movlw	0
  2527  00B8  00C7               	movwf	___flmul@a+3
  2528  00B9  3000               	movlw	0
  2529  00BA  00C6               	movwf	___flmul@a+2
  2530  00BB  3000               	movlw	0
  2531  00BC  00C5               	movwf	___flmul@a+1
  2532  00BD  3000               	movlw	0
  2533  00BE  00C4               	movwf	___flmul@a
  2534  00BF                     l1546:	
  2535  00BF  17C6               	bsf	___flmul@a+2,7
  2536  00C0  28C9               	goto	l1550
  2537  00C1                     l1548:	
  2538  00C1  3000               	movlw	0
  2539  00C2  00C7               	movwf	___flmul@a+3
  2540  00C3  3000               	movlw	0
  2541  00C4  00C6               	movwf	___flmul@a+2
  2542  00C5  3000               	movlw	0
  2543  00C6  00C5               	movwf	___flmul@a+1
  2544  00C7  3000               	movlw	0
  2545  00C8  00C4               	movwf	___flmul@a
  2546  00C9                     l1550:	
  2547  00C9  0852               	movf	___flmul@aexp,w
  2548  00CA  1D03               	btfss	3,2
  2549  00CB  0853               	movf	___flmul@bexp,w
  2550  00CC  1D03               	btfss	3,2
  2551  00CD  28D7               	goto	l1558
  2552  00CE  3000               	movlw	0
  2553  00CF  00C3               	movwf	?___flmul+3
  2554  00D0  3000               	movlw	0
  2555  00D1  00C2               	movwf	?___flmul+2
  2556  00D2  3000               	movlw	0
  2557  00D3  00C1               	movwf	?___flmul+1
  2558  00D4  3000               	movlw	0
  2559  00D5  00C0               	movwf	?___flmul
  2560  00D6  0008               	return
  2561  00D7                     l1558:	
  2562  00D7  0840               	movf	___flmul@b,w
  2563  00D8  00C8               	movwf	??___flmul
  2564  00D9  0848               	movf	??___flmul,w
  2565  00DA  00F2               	movwf	__Umul8_16@multiplicand
  2566  00DB  0846               	movf	___flmul@a+2,w
  2567  00DC  3187  27C9  3180   	fcall	__Umul8_16
  2568  00DF  0873               	movf	?__Umul8_16+1,w
  2569  00E0  0140               	movlb	0	; select bank0
  2570  00E1  00D9               	movwf	___flmul@temp+1
  2571  00E2  0872               	movf	?__Umul8_16,w
  2572  00E3  00D8               	movwf	___flmul@temp
  2573  00E4  0858               	movf	___flmul@temp,w
  2574  00E5  00C8               	movwf	??___flmul
  2575  00E6  01C9               	clrf	??___flmul+1
  2576  00E7  01CA               	clrf	??___flmul+2
  2577  00E8  01CB               	clrf	??___flmul+3
  2578  00E9  084B               	movf	??___flmul+3,w
  2579  00EA  00D1               	movwf	___flmul@grs+3
  2580  00EB  084A               	movf	??___flmul+2,w
  2581  00EC  00D0               	movwf	___flmul@grs+2
  2582  00ED  0849               	movf	??___flmul+1,w
  2583  00EE  00CF               	movwf	___flmul@grs+1
  2584  00EF  0848               	movf	??___flmul,w
  2585  00F0  00CE               	movwf	___flmul@grs
  2586  00F1  0859               	movf	___flmul@temp+1,w
  2587  00F2  00C8               	movwf	??___flmul
  2588  00F3  01C9               	clrf	??___flmul+1
  2589  00F4  01CA               	clrf	??___flmul+2
  2590  00F5  01CB               	clrf	??___flmul+3
  2591  00F6  084B               	movf	??___flmul+3,w
  2592  00F7  00D7               	movwf	___flmul@prod+3
  2593  00F8  084A               	movf	??___flmul+2,w
  2594  00F9  00D6               	movwf	___flmul@prod+2
  2595  00FA  0849               	movf	??___flmul+1,w
  2596  00FB  00D5               	movwf	___flmul@prod+1
  2597  00FC  0848               	movf	??___flmul,w
  2598  00FD  00D4               	movwf	___flmul@prod
  2599  00FE  0841               	movf	___flmul@b+1,w
  2600  00FF  00C8               	movwf	??___flmul
  2601  0100  0848               	movf	??___flmul,w
  2602  0101  00F2               	movwf	__Umul8_16@multiplicand
  2603  0102  0845               	movf	___flmul@a+1,w
  2604  0103  3187  27C9  3180   	fcall	__Umul8_16
  2605  0106  0873               	movf	?__Umul8_16+1,w
  2606  0107  0140               	movlb	0	; select bank0
  2607  0108  00D9               	movwf	___flmul@temp+1
  2608  0109  0872               	movf	?__Umul8_16,w
  2609  010A  00D8               	movwf	___flmul@temp
  2610  010B  0858               	movf	___flmul@temp,w
  2611  010C  00C8               	movwf	??___flmul
  2612  010D  01C9               	clrf	??___flmul+1
  2613  010E  01CA               	clrf	??___flmul+2
  2614  010F  01CB               	clrf	??___flmul+3
  2615  0110  0848               	movf	??___flmul,w
  2616  0111  07CE               	addwf	___flmul@grs,f
  2617  0112  0849               	movf	??___flmul+1,w
  2618  0113  3DCF               	addwfc	___flmul@grs+1,f
  2619  0114  084A               	movf	??___flmul+2,w
  2620  0115  3DD0               	addwfc	___flmul@grs+2,f
  2621  0116  084B               	movf	??___flmul+3,w
  2622  0117  3DD1               	addwfc	___flmul@grs+3,f
  2623  0118  0859               	movf	___flmul@temp+1,w
  2624  0119  00C8               	movwf	??___flmul
  2625  011A  01C9               	clrf	??___flmul+1
  2626  011B  01CA               	clrf	??___flmul+2
  2627  011C  01CB               	clrf	??___flmul+3
  2628  011D  0848               	movf	??___flmul,w
  2629  011E  07D4               	addwf	___flmul@prod,f
  2630  011F  0849               	movf	??___flmul+1,w
  2631  0120  3DD5               	addwfc	___flmul@prod+1,f
  2632  0121  084A               	movf	??___flmul+2,w
  2633  0122  3DD6               	addwfc	___flmul@prod+2,f
  2634  0123  084B               	movf	??___flmul+3,w
  2635  0124  3DD7               	addwfc	___flmul@prod+3,f
  2636  0125  0842               	movf	___flmul@b+2,w
  2637  0126  00C8               	movwf	??___flmul
  2638  0127  0848               	movf	??___flmul,w
  2639  0128  00F2               	movwf	__Umul8_16@multiplicand
  2640  0129  0844               	movf	___flmul@a,w
  2641  012A  3187  27C9  3180   	fcall	__Umul8_16
  2642  012D  0873               	movf	?__Umul8_16+1,w
  2643  012E  0140               	movlb	0	; select bank0
  2644  012F  00D9               	movwf	___flmul@temp+1
  2645  0130  0872               	movf	?__Umul8_16,w
  2646  0131  00D8               	movwf	___flmul@temp
  2647  0132  0858               	movf	___flmul@temp,w
  2648  0133  00C8               	movwf	??___flmul
  2649  0134  01C9               	clrf	??___flmul+1
  2650  0135  01CA               	clrf	??___flmul+2
  2651  0136  01CB               	clrf	??___flmul+3
  2652  0137  0848               	movf	??___flmul,w
  2653  0138  07CE               	addwf	___flmul@grs,f
  2654  0139  0849               	movf	??___flmul+1,w
  2655  013A  3DCF               	addwfc	___flmul@grs+1,f
  2656  013B  084A               	movf	??___flmul+2,w
  2657  013C  3DD0               	addwfc	___flmul@grs+2,f
  2658  013D  084B               	movf	??___flmul+3,w
  2659  013E  3DD1               	addwfc	___flmul@grs+3,f
  2660  013F  0859               	movf	___flmul@temp+1,w
  2661  0140  00C8               	movwf	??___flmul
  2662  0141  01C9               	clrf	??___flmul+1
  2663  0142  01CA               	clrf	??___flmul+2
  2664  0143  01CB               	clrf	??___flmul+3
  2665  0144  0848               	movf	??___flmul,w
  2666  0145  07D4               	addwf	___flmul@prod,f
  2667  0146  0849               	movf	??___flmul+1,w
  2668  0147  3DD5               	addwfc	___flmul@prod+1,f
  2669  0148  084A               	movf	??___flmul+2,w
  2670  0149  3DD6               	addwfc	___flmul@prod+2,f
  2671  014A  084B               	movf	??___flmul+3,w
  2672  014B  3DD7               	addwfc	___flmul@prod+3,f
  2673  014C  3008               	movlw	8
  2674  014D                     u1575:	
  2675  014D  35CE               	lslf	___flmul@grs,f
  2676  014E  0DCF               	rlf	___flmul@grs+1,f
  2677  014F  0DD0               	rlf	___flmul@grs+2,f
  2678  0150  0DD1               	rlf	___flmul@grs+3,f
  2679  0151  0B89               	decfsz	9,f
  2680  0152  294D               	goto	u1575
  2681  0153  0841               	movf	___flmul@b+1,w
  2682  0154  00C8               	movwf	??___flmul
  2683  0155  0848               	movf	??___flmul,w
  2684  0156  00F2               	movwf	__Umul8_16@multiplicand
  2685  0157  0844               	movf	___flmul@a,w
  2686  0158  3187  27C9  3180   	fcall	__Umul8_16
  2687  015B  0873               	movf	?__Umul8_16+1,w
  2688  015C  0140               	movlb	0	; select bank0
  2689  015D  00D9               	movwf	___flmul@temp+1
  2690  015E  0872               	movf	?__Umul8_16,w
  2691  015F  00D8               	movwf	___flmul@temp
  2692  0160  0858               	movf	___flmul@temp,w
  2693  0161  07CE               	addwf	___flmul@grs,f
  2694  0162  0859               	movf	___flmul@temp+1,w
  2695  0163  3DCF               	addwfc	___flmul@grs+1,f
  2696  0164  3000               	movlw	0
  2697  0165  3DD0               	addwfc	___flmul@grs+2,f
  2698  0166  3DD1               	addwfc	___flmul@grs+3,f
  2699  0167  0840               	movf	___flmul@b,w
  2700  0168  00C8               	movwf	??___flmul
  2701  0169  0848               	movf	??___flmul,w
  2702  016A  00F2               	movwf	__Umul8_16@multiplicand
  2703  016B  0845               	movf	___flmul@a+1,w
  2704  016C  3187  27C9  3180   	fcall	__Umul8_16
  2705  016F  0873               	movf	?__Umul8_16+1,w
  2706  0170  0140               	movlb	0	; select bank0
  2707  0171  00D9               	movwf	___flmul@temp+1
  2708  0172  0872               	movf	?__Umul8_16,w
  2709  0173  00D8               	movwf	___flmul@temp
  2710  0174  0858               	movf	___flmul@temp,w
  2711  0175  07CE               	addwf	___flmul@grs,f
  2712  0176  0859               	movf	___flmul@temp+1,w
  2713  0177  3DCF               	addwfc	___flmul@grs+1,f
  2714  0178  3000               	movlw	0
  2715  0179  3DD0               	addwfc	___flmul@grs+2,f
  2716  017A  3DD1               	addwfc	___flmul@grs+3,f
  2717  017B  3008               	movlw	8
  2718  017C                     u1585:	
  2719  017C  35CE               	lslf	___flmul@grs,f
  2720  017D  0DCF               	rlf	___flmul@grs+1,f
  2721  017E  0DD0               	rlf	___flmul@grs+2,f
  2722  017F  0DD1               	rlf	___flmul@grs+3,f
  2723  0180  0B89               	decfsz	9,f
  2724  0181  297C               	goto	u1585
  2725  0182  0840               	movf	___flmul@b,w
  2726  0183  00C8               	movwf	??___flmul
  2727  0184  0848               	movf	??___flmul,w
  2728  0185  00F2               	movwf	__Umul8_16@multiplicand
  2729  0186  0844               	movf	___flmul@a,w
  2730  0187  3187  27C9  3180   	fcall	__Umul8_16
  2731  018A  0873               	movf	?__Umul8_16+1,w
  2732  018B  0140               	movlb	0	; select bank0
  2733  018C  00D9               	movwf	___flmul@temp+1
  2734  018D  0872               	movf	?__Umul8_16,w
  2735  018E  00D8               	movwf	___flmul@temp
  2736  018F  0858               	movf	___flmul@temp,w
  2737  0190  07CE               	addwf	___flmul@grs,f
  2738  0191  0859               	movf	___flmul@temp+1,w
  2739  0192  3DCF               	addwfc	___flmul@grs+1,f
  2740  0193  3000               	movlw	0
  2741  0194  3DD0               	addwfc	___flmul@grs+2,f
  2742  0195  3DD1               	addwfc	___flmul@grs+3,f
  2743  0196  0841               	movf	___flmul@b+1,w
  2744  0197  00C8               	movwf	??___flmul
  2745  0198  0848               	movf	??___flmul,w
  2746  0199  00F2               	movwf	__Umul8_16@multiplicand
  2747  019A  0846               	movf	___flmul@a+2,w
  2748  019B  3187  27C9  3180   	fcall	__Umul8_16
  2749  019E  0873               	movf	?__Umul8_16+1,w
  2750  019F  0140               	movlb	0	; select bank0
  2751  01A0  00D9               	movwf	___flmul@temp+1
  2752  01A1  0872               	movf	?__Umul8_16,w
  2753  01A2  00D8               	movwf	___flmul@temp
  2754  01A3  0858               	movf	___flmul@temp,w
  2755  01A4  07D4               	addwf	___flmul@prod,f
  2756  01A5  0859               	movf	___flmul@temp+1,w
  2757  01A6  3DD5               	addwfc	___flmul@prod+1,f
  2758  01A7  3000               	movlw	0
  2759  01A8  3DD6               	addwfc	___flmul@prod+2,f
  2760  01A9  3DD7               	addwfc	___flmul@prod+3,f
  2761  01AA  0842               	movf	___flmul@b+2,w
  2762  01AB  00C8               	movwf	??___flmul
  2763  01AC  0848               	movf	??___flmul,w
  2764  01AD  00F2               	movwf	__Umul8_16@multiplicand
  2765  01AE  0845               	movf	___flmul@a+1,w
  2766  01AF  3187  27C9  3180   	fcall	__Umul8_16
  2767  01B2  0873               	movf	?__Umul8_16+1,w
  2768  01B3  0140               	movlb	0	; select bank0
  2769  01B4  00D9               	movwf	___flmul@temp+1
  2770  01B5  0872               	movf	?__Umul8_16,w
  2771  01B6  00D8               	movwf	___flmul@temp
  2772  01B7  0858               	movf	___flmul@temp,w
  2773  01B8  07D4               	addwf	___flmul@prod,f
  2774  01B9  0859               	movf	___flmul@temp+1,w
  2775  01BA  3DD5               	addwfc	___flmul@prod+1,f
  2776  01BB  3000               	movlw	0
  2777  01BC  3DD6               	addwfc	___flmul@prod+2,f
  2778  01BD  3DD7               	addwfc	___flmul@prod+3,f
  2779  01BE  0842               	movf	___flmul@b+2,w
  2780  01BF  00C8               	movwf	??___flmul
  2781  01C0  0848               	movf	??___flmul,w
  2782  01C1  00F2               	movwf	__Umul8_16@multiplicand
  2783  01C2  0846               	movf	___flmul@a+2,w
  2784  01C3  3187  27C9  3180   	fcall	__Umul8_16
  2785  01C6  0873               	movf	?__Umul8_16+1,w
  2786  01C7  0140               	movlb	0	; select bank0
  2787  01C8  00D9               	movwf	___flmul@temp+1
  2788  01C9  0872               	movf	?__Umul8_16,w
  2789  01CA  00D8               	movwf	___flmul@temp
  2790  01CB  0858               	movf	___flmul@temp,w
  2791  01CC  00C8               	movwf	??___flmul
  2792  01CD  0859               	movf	___flmul@temp+1,w
  2793  01CE  00C9               	movwf	??___flmul+1
  2794  01CF  01CA               	clrf	??___flmul+2
  2795  01D0  01CB               	clrf	??___flmul+3
  2796  01D1  3008               	movlw	8
  2797  01D2                     u1595:	
  2798  01D2  35C8               	lslf	??___flmul,f
  2799  01D3  0DC9               	rlf	??___flmul+1,f
  2800  01D4  0DCA               	rlf	??___flmul+2,f
  2801  01D5  0DCB               	rlf	??___flmul+3,f
  2802  01D6  0B89               	decfsz	9,f
  2803  01D7  29D2               	goto	u1595
  2804  01D8  0848               	movf	??___flmul,w
  2805  01D9  07D4               	addwf	___flmul@prod,f
  2806  01DA  0849               	movf	??___flmul+1,w
  2807  01DB  3DD5               	addwfc	___flmul@prod+1,f
  2808  01DC  084A               	movf	??___flmul+2,w
  2809  01DD  3DD6               	addwfc	___flmul@prod+2,f
  2810  01DE  084B               	movf	??___flmul+3,w
  2811  01DF  3DD7               	addwfc	___flmul@prod+3,f
  2812  01E0  084E               	movf	___flmul@grs,w
  2813  01E1  00C8               	movwf	??___flmul
  2814  01E2  084F               	movf	___flmul@grs+1,w
  2815  01E3  00C9               	movwf	??___flmul+1
  2816  01E4  0850               	movf	___flmul@grs+2,w
  2817  01E5  00CA               	movwf	??___flmul+2
  2818  01E6  0851               	movf	___flmul@grs+3,w
  2819  01E7  00CB               	movwf	??___flmul+3
  2820  01E8  3018               	movlw	24
  2821  01E9                     u1605:	
  2822  01E9  36CB               	lsrf	??___flmul+3,f
  2823  01EA  0CCA               	rrf	??___flmul+2,f
  2824  01EB  0CC9               	rrf	??___flmul+1,f
  2825  01EC  0CC8               	rrf	??___flmul,f
  2826  01ED  0B89               	decfsz	9,f
  2827  01EE  29E9               	goto	u1605
  2828  01EF  0848               	movf	??___flmul,w
  2829  01F0  07D4               	addwf	___flmul@prod,f
  2830  01F1  0849               	movf	??___flmul+1,w
  2831  01F2  3DD5               	addwfc	___flmul@prod+1,f
  2832  01F3  084A               	movf	??___flmul+2,w
  2833  01F4  3DD6               	addwfc	___flmul@prod+2,f
  2834  01F5  084B               	movf	??___flmul+3,w
  2835  01F6  3DD7               	addwfc	___flmul@prod+3,f
  2836  01F7  3008               	movlw	8
  2837  01F8                     u1615:	
  2838  01F8  35CE               	lslf	___flmul@grs,f
  2839  01F9  0DCF               	rlf	___flmul@grs+1,f
  2840  01FA  0DD0               	rlf	___flmul@grs+2,f
  2841  01FB  0DD1               	rlf	___flmul@grs+3,f
  2842  01FC  0B89               	decfsz	9,f
  2843  01FD  29F8               	goto	u1615
  2844  01FE  0853               	movf	___flmul@bexp,w
  2845  01FF  0752               	addwf	___flmul@aexp,w
  2846  0200  00C8               	movwf	??___flmul
  2847  0201  01C9               	clrf	??___flmul+1
  2848  0202  0DC9               	rlf	??___flmul+1,f
  2849  0203  0848               	movf	??___flmul,w
  2850  0204  3E82               	addlw	130
  2851  0205  00D8               	movwf	___flmul@temp
  2852  0206  30FF               	movlw	255
  2853  0207  3D49               	addwfc	??___flmul+1,w
  2854  0208  00D9               	movwf	___flmul@temp+1
  2855  0209                     l1610:	
  2856  0209  1BD6               	btfsc	___flmul@prod+2,7
  2857  020A  2A20               	goto	l1612
  2858  020B  3001               	movlw	1
  2859  020C                     u1625:	
  2860  020C  35D4               	lslf	___flmul@prod,f
  2861  020D  0DD5               	rlf	___flmul@prod+1,f
  2862  020E  0DD6               	rlf	___flmul@prod+2,f
  2863  020F  0DD7               	rlf	___flmul@prod+3,f
  2864  0210  0B89               	decfsz	9,f
  2865  0211  2A0C               	goto	u1625
  2866  0212  1BD1               	btfsc	___flmul@grs+3,7
  2867  0213  1454               	bsf	___flmul@prod,0
  2868  0214  3001               	movlw	1
  2869  0215                     u1645:	
  2870  0215  35CE               	lslf	___flmul@grs,f
  2871  0216  0DCF               	rlf	___flmul@grs+1,f
  2872  0217  0DD0               	rlf	___flmul@grs+2,f
  2873  0218  0DD1               	rlf	___flmul@grs+3,f
  2874  0219  0B89               	decfsz	9,f
  2875  021A  2A15               	goto	u1645
  2876  021B  30FF               	movlw	255
  2877  021C  07D8               	addwf	___flmul@temp,f
  2878  021D  30FF               	movlw	255
  2879  021E  3DD9               	addwfc	___flmul@temp+1,f
  2880  021F  2A09               	goto	l1610
  2881  0220                     l1612:	
  2882  0220  01D2               	clrf	___flmul@aexp
  2883  0221  1FD1               	btfss	___flmul@grs+3,7
  2884  0222  2A39               	goto	l1622
  2885  0223  30FF               	movlw	255
  2886  0224  054E               	andwf	___flmul@grs,w
  2887  0225  00C8               	movwf	??___flmul
  2888  0226  30FF               	movlw	255
  2889  0227  054F               	andwf	___flmul@grs+1,w
  2890  0228  00C9               	movwf	??___flmul+1
  2891  0229  30FF               	movlw	255
  2892  022A  0550               	andwf	___flmul@grs+2,w
  2893  022B  00CA               	movwf	??___flmul+2
  2894  022C  307F               	movlw	127
  2895  022D  0551               	andwf	___flmul@grs+3,w
  2896  022E  00CB               	movwf	??___flmul+3
  2897  022F  084B               	movf	??___flmul+3,w
  2898  0230  044A               	iorwf	??___flmul+2,w
  2899  0231  0449               	iorwf	??___flmul+1,w
  2900  0232  0448               	iorwf	??___flmul,w
  2901  0233  1903               	skipnz
  2902  0234  1854               	btfsc	___flmul@prod,0
  2903  0235  2A37               	goto	l1618
  2904  0236  2A39               	goto	l1622
  2905  0237                     l1618:	
  2906  0237  01D2               	clrf	___flmul@aexp
  2907  0238  0AD2               	incf	___flmul@aexp,f
  2908  0239                     l1622:	
  2909  0239  0852               	movf	___flmul@aexp,w
  2910  023A  1903               	btfsc	3,2
  2911  023B  2A62               	goto	l1632
  2912  023C  3001               	movlw	1
  2913  023D  07D4               	addwf	___flmul@prod,f
  2914  023E  3000               	movlw	0
  2915  023F  3DD5               	addwfc	___flmul@prod+1,f
  2916  0240  3000               	movlw	0
  2917  0241  3DD6               	addwfc	___flmul@prod+2,f
  2918  0242  3000               	movlw	0
  2919  0243  3DD7               	addwfc	___flmul@prod+3,f
  2920  0244  1C57               	btfss	___flmul@prod+3,0
  2921  0245  2A62               	goto	l1632
  2922  0246  0854               	movf	___flmul@prod,w
  2923  0247  00C8               	movwf	??___flmul
  2924  0248  0855               	movf	___flmul@prod+1,w
  2925  0249  00C9               	movwf	??___flmul+1
  2926  024A  0856               	movf	___flmul@prod+2,w
  2927  024B  00CA               	movwf	??___flmul+2
  2928  024C  0857               	movf	___flmul@prod+3,w
  2929  024D  00CB               	movwf	??___flmul+3
  2930  024E  3001               	movlw	1
  2931  024F  00CC               	movwf	??___flmul+4
  2932  0250                     u1715:	
  2933  0250  37CB               	asrf	??___flmul+3,f
  2934  0251  0CCA               	rrf	??___flmul+2,f
  2935  0252  0CC9               	rrf	??___flmul+1,f
  2936  0253  0CC8               	rrf	??___flmul,f
  2937  0254  0BCC               	decfsz	??___flmul+4,f
  2938  0255  2A50               	goto	u1715
  2939  0256  084B               	movf	??___flmul+3,w
  2940  0257  00D7               	movwf	___flmul@prod+3
  2941  0258  084A               	movf	??___flmul+2,w
  2942  0259  00D6               	movwf	___flmul@prod+2
  2943  025A  0849               	movf	??___flmul+1,w
  2944  025B  00D5               	movwf	___flmul@prod+1
  2945  025C  0848               	movf	??___flmul,w
  2946  025D  00D4               	movwf	___flmul@prod
  2947  025E  3001               	movlw	1
  2948  025F  07D8               	addwf	___flmul@temp,f
  2949  0260  3000               	movlw	0
  2950  0261  3DD9               	addwfc	___flmul@temp+1,f
  2951  0262                     l1632:	
  2952  0262  0859               	movf	___flmul@temp+1,w
  2953  0263  3A80               	xorlw	128
  2954  0264  00C8               	movwf	??___flmul
  2955  0265  3080               	movlw	128
  2956  0266  0248               	subwf	??___flmul,w
  2957  0267  1D03               	skipz
  2958  0268  2A6B               	goto	u1725
  2959  0269  30FF               	movlw	255
  2960  026A  0258               	subwf	___flmul@temp,w
  2961  026B                     u1725:	
  2962  026B  1C03               	skipc
  2963  026C  2A77               	goto	l1636
  2964  026D  307F               	movlw	127
  2965  026E  0140               	movlb	0	; select bank0
  2966  026F  00D7               	movwf	___flmul@prod+3
  2967  0270  3080               	movlw	128
  2968  0271  00D6               	movwf	___flmul@prod+2
  2969  0272  3000               	movlw	0
  2970  0273  00D5               	movwf	___flmul@prod+1
  2971  0274  3000               	movlw	0
  2972  0275  00D4               	movwf	___flmul@prod
  2973  0276  2AA1               	goto	l671
  2974  0277                     l1636:	
  2975  0277  0140               	movlb	0	; select bank0
  2976  0278  0859               	movf	___flmul@temp+1,w
  2977  0279  3A80               	xorlw	128
  2978  027A  00C8               	movwf	??___flmul
  2979  027B  3080               	movlw	128
  2980  027C  0248               	subwf	??___flmul,w
  2981  027D  1D03               	skipz
  2982  027E  2A81               	goto	u1735
  2983  027F  3001               	movlw	1
  2984  0280  0258               	subwf	___flmul@temp,w
  2985  0281                     u1735:	
  2986  0281  1803               	skipnc
  2987  0282  2A8E               	goto	l1642
  2988  0283  3000               	movlw	0
  2989  0284  0140               	movlb	0	; select bank0
  2990  0285  00D7               	movwf	___flmul@prod+3
  2991  0286  3000               	movlw	0
  2992  0287  00D6               	movwf	___flmul@prod+2
  2993  0288  3000               	movlw	0
  2994  0289  00D5               	movwf	___flmul@prod+1
  2995  028A  3000               	movlw	0
  2996  028B  00D4               	movwf	___flmul@prod
  2997  028C  01CD               	clrf	___flmul@sign
  2998  028D  2AA1               	goto	l671
  2999  028E                     l1642:	
  3000  028E  0140               	movlb	0	; select bank0
  3001  028F  0858               	movf	___flmul@temp,w
  3002  0290  00C8               	movwf	??___flmul
  3003  0291  0848               	movf	??___flmul,w
  3004  0292  00D3               	movwf	___flmul@bexp
  3005  0293  30FF               	movlw	255
  3006  0294  05D4               	andwf	___flmul@prod,f
  3007  0295  30FF               	movlw	255
  3008  0296  05D5               	andwf	___flmul@prod+1,f
  3009  0297  307F               	movlw	127
  3010  0298  05D6               	andwf	___flmul@prod+2,f
  3011  0299  3000               	movlw	0
  3012  029A  05D7               	andwf	___flmul@prod+3,f
  3013  029B  1853               	btfsc	___flmul@bexp,0
  3014  029C  17D6               	bsf	___flmul@prod+2,7
  3015  029D  3653               	lsrf	___flmul@bexp,w
  3016  029E  00C8               	movwf	??___flmul
  3017  029F  0848               	movf	??___flmul,w
  3018  02A0  00D7               	movwf	___flmul@prod+3
  3019  02A1                     l671:	
  3020  02A1  084D               	movf	___flmul@sign,w
  3021  02A2  00C8               	movwf	??___flmul
  3022  02A3  0848               	movf	??___flmul,w
  3023  02A4  04D7               	iorwf	___flmul@prod+3,f
  3024  02A5  0857               	movf	___flmul@prod+3,w
  3025  02A6  00C3               	movwf	?___flmul+3
  3026  02A7  0856               	movf	___flmul@prod+2,w
  3027  02A8  00C2               	movwf	?___flmul+2
  3028  02A9  0855               	movf	___flmul@prod+1,w
  3029  02AA  00C1               	movwf	?___flmul+1
  3030  02AB  0854               	movf	___flmul@prod,w
  3031  02AC  00C0               	movwf	?___flmul
  3032  02AD  0008               	return
  3033  02AE                     __end_of___flmul:	
  3034                           
  3035                           	psect	text11
  3036  07C9                     __ptext11:	
  3037 ;; *************** function __Umul8_16 *****************
  3038 ;; Defined at:
  3039 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul8_16.c"
  3040 ;; Parameters:    Size  Location     Type
  3041 ;;  multiplier      1    wreg     unsigned char 
  3042 ;;  multiplicand    1    2[COMMON] unsigned char 
  3043 ;; Auto vars:     Size  Location     Type
  3044 ;;  multiplier      1   10[COMMON] unsigned char 
  3045 ;;  word_mpld       2    8[COMMON] unsigned int 
  3046 ;;  product         2    6[COMMON] unsigned int 
  3047 ;; Return value:  Size  Location     Type
  3048 ;;                  2    2[COMMON] unsigned int 
  3049 ;; Registers used:
  3050 ;;		wreg, status,2, status,0
  3051 ;; Tracked objects:
  3052 ;;		On entry : 0/0
  3053 ;;		On exit  : 0/0
  3054 ;;		Unchanged: 0/0
  3055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3056 ;;      Params:         2       0       0       0       0       0       0       0
  3057 ;;      Locals:         5       0       0       0       0       0       0       0
  3058 ;;      Temps:          2       0       0       0       0       0       0       0
  3059 ;;      Totals:         9       0       0       0       0       0       0       0
  3060 ;;Total ram usage:        9 bytes
  3061 ;; Hardware stack levels used:    1
  3062 ;; Hardware stack levels required when called:    1
  3063 ;; This function calls:
  3064 ;;		Nothing
  3065 ;; This function is called by:
  3066 ;;		___flmul
  3067 ;; This function uses a non-reentrant model
  3068 ;;
  3069                           
  3070                           
  3071                           ;psect for function __Umul8_16
  3072  07C9                     __Umul8_16:	
  3073                           
  3074                           ;incstack = 0
  3075                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  3076                           ;__Umul8_16@multiplier stored from wreg
  3077  07C9  00FA               	movwf	__Umul8_16@multiplier
  3078  07CA  01F6               	clrf	__Umul8_16@product
  3079  07CB  01F7               	clrf	__Umul8_16@product+1
  3080  07CC  0872               	movf	__Umul8_16@multiplicand,w
  3081  07CD  00F4               	movwf	??__Umul8_16
  3082  07CE  01F5               	clrf	??__Umul8_16+1
  3083  07CF  0874               	movf	??__Umul8_16,w
  3084  07D0  00F8               	movwf	__Umul8_16@word_mpld
  3085  07D1  0875               	movf	??__Umul8_16+1,w
  3086  07D2  00F9               	movwf	__Umul8_16@word_mpld+1
  3087  07D3                     l1364:	
  3088  07D3  1C7A               	btfss	__Umul8_16@multiplier,0
  3089  07D4  2FD9               	goto	l716
  3090  07D5  0878               	movf	__Umul8_16@word_mpld,w
  3091  07D6  07F6               	addwf	__Umul8_16@product,f
  3092  07D7  0879               	movf	__Umul8_16@word_mpld+1,w
  3093  07D8  3DF7               	addwfc	__Umul8_16@product+1,f
  3094  07D9                     l716:	
  3095  07D9  3001               	movlw	1
  3096  07DA                     u1185:	
  3097  07DA  35F8               	lslf	__Umul8_16@word_mpld,f
  3098  07DB  0DF9               	rlf	__Umul8_16@word_mpld+1,f
  3099  07DC  0B89               	decfsz	9,f
  3100  07DD  2FDA               	goto	u1185
  3101  07DE  1003               	clrc
  3102  07DF  0CFA               	rrf	__Umul8_16@multiplier,f
  3103  07E0  087A               	movf	__Umul8_16@multiplier,w
  3104  07E1  1D03               	btfss	3,2
  3105  07E2  2FD3               	goto	l1364
  3106  07E3  0877               	movf	__Umul8_16@product+1,w
  3107  07E4  00F3               	movwf	?__Umul8_16+1
  3108  07E5  0876               	movf	__Umul8_16@product,w
  3109  07E6  00F2               	movwf	?__Umul8_16
  3110  07E7  0008               	return
  3111  07E8                     __end_of__Umul8_16:	
  3112                           
  3113                           	psect	text12
  3114  02AE                     __ptext12:	
  3115 ;; *************** function ___fldiv *****************
  3116 ;; Defined at:
  3117 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
  3118 ;; Parameters:    Size  Location     Type
  3119 ;;  a               4    6[BANK0 ] unsigned int 
  3120 ;;  b               4   10[BANK0 ] unsigned int 
  3121 ;; Auto vars:     Size  Location     Type
  3122 ;;  grs             4   26[BANK0 ] unsigned long 
  3123 ;;  rem             4   19[BANK0 ] unsigned long 
  3124 ;;  new_exp         2   24[BANK0 ] int 
  3125 ;;  aexp            1   31[BANK0 ] unsigned char 
  3126 ;;  bexp            1   30[BANK0 ] unsigned char 
  3127 ;;  sign            1   23[BANK0 ] unsigned char 
  3128 ;; Return value:  Size  Location     Type
  3129 ;;                  4    6[BANK0 ] unsigned char 
  3130 ;; Registers used:
  3131 ;;		wreg, status,2, status,0
  3132 ;; Tracked objects:
  3133 ;;		On entry : 0/0
  3134 ;;		On exit  : 0/0
  3135 ;;		Unchanged: 0/0
  3136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3137 ;;      Params:         0       8       0       0       0       0       0       0
  3138 ;;      Locals:         0      13       0       0       0       0       0       0
  3139 ;;      Temps:          0       5       0       0       0       0       0       0
  3140 ;;      Totals:         0      26       0       0       0       0       0       0
  3141 ;;Total ram usage:       26 bytes
  3142 ;; Hardware stack levels used:    1
  3143 ;; Hardware stack levels required when called:    1
  3144 ;; This function calls:
  3145 ;;		Nothing
  3146 ;; This function is called by:
  3147 ;;		_getNTCV
  3148 ;; This function uses a non-reentrant model
  3149 ;;
  3150                           
  3151                           
  3152                           ;psect for function ___fldiv
  3153  02AE                     ___fldiv:	
  3154                           
  3155                           ;incstack = 0
  3156                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  3157  02AE  0140               	movlb	0	; select bank0
  3158  02AF  082D               	movf	___fldiv@b+3,w
  3159  02B0  3980               	andlw	128
  3160  02B1  00AE               	movwf	??___fldiv
  3161  02B2  082E               	movf	??___fldiv,w
  3162  02B3  00B7               	movwf	___fldiv@sign
  3163  02B4  352D               	lslf	___fldiv@b+3,w
  3164  02B5  00AE               	movwf	??___fldiv
  3165  02B6  082E               	movf	??___fldiv,w
  3166  02B7  00BE               	movwf	___fldiv@bexp
  3167  02B8  1BAC               	btfsc	___fldiv@b+2,7
  3168  02B9  143E               	bsf	___fldiv@bexp,0
  3169  02BA  083E               	movf	___fldiv@bexp,w
  3170  02BB  1903               	btfsc	3,2
  3171  02BC  2ACB               	goto	l1392
  3172  02BD  0A3E               	incf	___fldiv@bexp,w
  3173  02BE  1D03               	btfss	3,2
  3174  02BF  2AC8               	goto	l1388
  3175  02C0  3000               	movlw	0
  3176  02C1  00AD               	movwf	___fldiv@b+3
  3177  02C2  3000               	movlw	0
  3178  02C3  00AC               	movwf	___fldiv@b+2
  3179  02C4  3000               	movlw	0
  3180  02C5  00AB               	movwf	___fldiv@b+1
  3181  02C6  3000               	movlw	0
  3182  02C7  00AA               	movwf	___fldiv@b
  3183  02C8                     l1388:	
  3184  02C8  17AC               	bsf	___fldiv@b+2,7
  3185  02C9  01AD               	clrf	___fldiv@b+3
  3186  02CA  2AD3               	goto	l1394
  3187  02CB                     l1392:	
  3188  02CB  3000               	movlw	0
  3189  02CC  00AD               	movwf	___fldiv@b+3
  3190  02CD  3000               	movlw	0
  3191  02CE  00AC               	movwf	___fldiv@b+2
  3192  02CF  3000               	movlw	0
  3193  02D0  00AB               	movwf	___fldiv@b+1
  3194  02D1  3000               	movlw	0
  3195  02D2  00AA               	movwf	___fldiv@b
  3196  02D3                     l1394:	
  3197  02D3  0829               	movf	___fldiv@a+3,w
  3198  02D4  3980               	andlw	128
  3199  02D5  00AE               	movwf	??___fldiv
  3200  02D6  082E               	movf	??___fldiv,w
  3201  02D7  06B7               	xorwf	___fldiv@sign,f
  3202  02D8  3529               	lslf	___fldiv@a+3,w
  3203  02D9  00AE               	movwf	??___fldiv
  3204  02DA  082E               	movf	??___fldiv,w
  3205  02DB  00BF               	movwf	___fldiv@aexp
  3206  02DC  1BA8               	btfsc	___fldiv@a+2,7
  3207  02DD  143F               	bsf	___fldiv@aexp,0
  3208  02DE  083F               	movf	___fldiv@aexp,w
  3209  02DF  1903               	btfsc	3,2
  3210  02E0  2AEF               	goto	l1412
  3211  02E1  0A3F               	incf	___fldiv@aexp,w
  3212  02E2  1D03               	btfss	3,2
  3213  02E3  2AEC               	goto	l1408
  3214  02E4  3000               	movlw	0
  3215  02E5  00A9               	movwf	___fldiv@a+3
  3216  02E6  3000               	movlw	0
  3217  02E7  00A8               	movwf	___fldiv@a+2
  3218  02E8  3000               	movlw	0
  3219  02E9  00A7               	movwf	___fldiv@a+1
  3220  02EA  3000               	movlw	0
  3221  02EB  00A6               	movwf	___fldiv@a
  3222  02EC                     l1408:	
  3223  02EC  17A8               	bsf	___fldiv@a+2,7
  3224  02ED  01A9               	clrf	___fldiv@a+3
  3225  02EE  2AF7               	goto	l619
  3226  02EF                     l1412:	
  3227  02EF  3000               	movlw	0
  3228  02F0  00A9               	movwf	___fldiv@a+3
  3229  02F1  3000               	movlw	0
  3230  02F2  00A8               	movwf	___fldiv@a+2
  3231  02F3  3000               	movlw	0
  3232  02F4  00A7               	movwf	___fldiv@a+1
  3233  02F5  3000               	movlw	0
  3234  02F6  00A6               	movwf	___fldiv@a
  3235  02F7                     l619:	
  3236  02F7  0829               	movf	___fldiv@a+3,w
  3237  02F8  0428               	iorwf	___fldiv@a+2,w
  3238  02F9  0427               	iorwf	___fldiv@a+1,w
  3239  02FA  0426               	iorwf	___fldiv@a,w
  3240  02FB  1D03               	skipz
  3241  02FC  2B16               	goto	l1422
  3242  02FD  3000               	movlw	0
  3243  02FE  00AD               	movwf	___fldiv@b+3
  3244  02FF  3000               	movlw	0
  3245  0300  00AC               	movwf	___fldiv@b+2
  3246  0301  3000               	movlw	0
  3247  0302  00AB               	movwf	___fldiv@b+1
  3248  0303  3000               	movlw	0
  3249  0304  00AA               	movwf	___fldiv@b
  3250  0305  3080               	movlw	128
  3251  0306  04AC               	iorwf	___fldiv@b+2,f
  3252  0307  307F               	movlw	127
  3253  0308  04AD               	iorwf	___fldiv@b+3,f
  3254  0309                     L1:	
  3255  0309  0837               	movf	___fldiv@sign,w
  3256  030A  00AE               	movwf	??___fldiv
  3257  030B  082E               	movf	??___fldiv,w
  3258  030C  04AD               	iorwf	___fldiv@b+3,f
  3259  030D  082D               	movf	___fldiv@b+3,w
  3260  030E  00A9               	movwf	?___fldiv+3
  3261  030F  082C               	movf	___fldiv@b+2,w
  3262  0310  00A8               	movwf	?___fldiv+2
  3263  0311  082B               	movf	___fldiv@b+1,w
  3264  0312  00A7               	movwf	?___fldiv+1
  3265  0313  082A               	movf	___fldiv@b,w
  3266  0314  00A6               	movwf	?___fldiv
  3267  0315  0008               	return
  3268  0316                     l1422:	
  3269  0316  083E               	movf	___fldiv@bexp,w
  3270  0317  1D03               	btfss	3,2
  3271  0318  2B22               	goto	l1428
  3272  0319  3000               	movlw	0
  3273  031A  00A9               	movwf	?___fldiv+3
  3274  031B  3000               	movlw	0
  3275  031C  00A8               	movwf	?___fldiv+2
  3276  031D  3000               	movlw	0
  3277  031E  00A7               	movwf	?___fldiv+1
  3278  031F  3000               	movlw	0
  3279  0320  00A6               	movwf	?___fldiv
  3280  0321  0008               	return
  3281  0322                     l1428:	
  3282  0322  083E               	movf	___fldiv@bexp,w
  3283  0323  00AE               	movwf	??___fldiv
  3284  0324  01AF               	clrf	??___fldiv+1
  3285  0325  082F               	movf	??___fldiv+1,w
  3286  0326  00B1               	movwf	??___fldiv+3
  3287  0327  083F               	movf	___fldiv@aexp,w
  3288  0328  022E               	subwf	??___fldiv,w
  3289  0329  00B0               	movwf	??___fldiv+2
  3290  032A  1C03               	skipc
  3291  032B  03B1               	decf	??___fldiv+3,f
  3292  032C  0830               	movf	??___fldiv+2,w
  3293  032D  3E7F               	addlw	127
  3294  032E  00B8               	movwf	___fldiv@new_exp
  3295  032F  3000               	movlw	0
  3296  0330  3D31               	addwfc	??___fldiv+3,w
  3297  0331  00B9               	movwf	___fldiv@new_exp+1
  3298  0332  082D               	movf	___fldiv@b+3,w
  3299  0333  00B6               	movwf	___fldiv@rem+3
  3300  0334  082C               	movf	___fldiv@b+2,w
  3301  0335  00B5               	movwf	___fldiv@rem+2
  3302  0336  082B               	movf	___fldiv@b+1,w
  3303  0337  00B4               	movwf	___fldiv@rem+1
  3304  0338  082A               	movf	___fldiv@b,w
  3305  0339  00B3               	movwf	___fldiv@rem
  3306  033A  3000               	movlw	0
  3307  033B  00AD               	movwf	___fldiv@b+3
  3308  033C  3000               	movlw	0
  3309  033D  00AC               	movwf	___fldiv@b+2
  3310  033E  3000               	movlw	0
  3311  033F  00AB               	movwf	___fldiv@b+1
  3312  0340  3000               	movlw	0
  3313  0341  00AA               	movwf	___fldiv@b
  3314  0342  3000               	movlw	0
  3315  0343  00BD               	movwf	___fldiv@grs+3
  3316  0344  3000               	movlw	0
  3317  0345  00BC               	movwf	___fldiv@grs+2
  3318  0346  3000               	movlw	0
  3319  0347  00BB               	movwf	___fldiv@grs+1
  3320  0348  3000               	movlw	0
  3321  0349  00BA               	movwf	___fldiv@grs
  3322  034A  01BF               	clrf	___fldiv@aexp
  3323  034B                     l1456:	
  3324  034B  301A               	movlw	26
  3325  034C  023F               	subwf	___fldiv@aexp,w
  3326  034D  1803               	btfsc	3,0
  3327  034E  2B87               	goto	l1458
  3328  034F  083F               	movf	___fldiv@aexp,w
  3329  0350  1903               	btfsc	3,2
  3330  0351  2B69               	goto	l1448
  3331  0352  3001               	movlw	1
  3332  0353                     u1295:	
  3333  0353  35B3               	lslf	___fldiv@rem,f
  3334  0354  0DB4               	rlf	___fldiv@rem+1,f
  3335  0355  0DB5               	rlf	___fldiv@rem+2,f
  3336  0356  0DB6               	rlf	___fldiv@rem+3,f
  3337  0357  0B89               	decfsz	9,f
  3338  0358  2B53               	goto	u1295
  3339  0359  3001               	movlw	1
  3340  035A                     u1305:	
  3341  035A  35AA               	lslf	___fldiv@b,f
  3342  035B  0DAB               	rlf	___fldiv@b+1,f
  3343  035C  0DAC               	rlf	___fldiv@b+2,f
  3344  035D  0DAD               	rlf	___fldiv@b+3,f
  3345  035E  0B89               	decfsz	9,f
  3346  035F  2B5A               	goto	u1305
  3347  0360  1BBD               	btfsc	___fldiv@grs+3,7
  3348  0361  142A               	bsf	___fldiv@b,0
  3349  0362  3001               	movlw	1
  3350  0363                     u1325:	
  3351  0363  35BA               	lslf	___fldiv@grs,f
  3352  0364  0DBB               	rlf	___fldiv@grs+1,f
  3353  0365  0DBC               	rlf	___fldiv@grs+2,f
  3354  0366  0DBD               	rlf	___fldiv@grs+3,f
  3355  0367  0B89               	decfsz	9,f
  3356  0368  2B63               	goto	u1325
  3357  0369                     l1448:	
  3358  0369  0829               	movf	___fldiv@a+3,w
  3359  036A  0236               	subwf	___fldiv@rem+3,w
  3360  036B  1D03               	skipz
  3361  036C  2B77               	goto	u1335
  3362  036D  0828               	movf	___fldiv@a+2,w
  3363  036E  0235               	subwf	___fldiv@rem+2,w
  3364  036F  1D03               	skipz
  3365  0370  2B77               	goto	u1335
  3366  0371  0827               	movf	___fldiv@a+1,w
  3367  0372  0234               	subwf	___fldiv@rem+1,w
  3368  0373  1D03               	skipz
  3369  0374  2B77               	goto	u1335
  3370  0375  0826               	movf	___fldiv@a,w
  3371  0376  0233               	subwf	___fldiv@rem,w
  3372  0377                     u1335:	
  3373  0377  1C03               	skipc
  3374  0378  2B82               	goto	l1454
  3375  0379  173D               	bsf	___fldiv@grs+3,6
  3376  037A  0826               	movf	___fldiv@a,w
  3377  037B  02B3               	subwf	___fldiv@rem,f
  3378  037C  0827               	movf	___fldiv@a+1,w
  3379  037D  3BB4               	subwfb	___fldiv@rem+1,f
  3380  037E  0828               	movf	___fldiv@a+2,w
  3381  037F  3BB5               	subwfb	___fldiv@rem+2,f
  3382  0380  0829               	movf	___fldiv@a+3,w
  3383  0381  3BB6               	subwfb	___fldiv@rem+3,f
  3384  0382                     l1454:	
  3385  0382  3001               	movlw	1
  3386  0383  00AE               	movwf	??___fldiv
  3387  0384  082E               	movf	??___fldiv,w
  3388  0385  07BF               	addwf	___fldiv@aexp,f
  3389  0386  2B4B               	goto	l1456
  3390  0387                     l1458:	
  3391  0387  0836               	movf	___fldiv@rem+3,w
  3392  0388  0435               	iorwf	___fldiv@rem+2,w
  3393  0389  0434               	iorwf	___fldiv@rem+1,w
  3394  038A  0433               	iorwf	___fldiv@rem,w
  3395  038B  1D03               	btfss	3,2
  3396  038C  143A               	bsf	___fldiv@grs,0
  3397  038D                     l1472:	
  3398  038D  1BAC               	btfsc	___fldiv@b+2,7
  3399  038E  2BA4               	goto	l1474
  3400  038F  3001               	movlw	1
  3401  0390                     u1365:	
  3402  0390  35AA               	lslf	___fldiv@b,f
  3403  0391  0DAB               	rlf	___fldiv@b+1,f
  3404  0392  0DAC               	rlf	___fldiv@b+2,f
  3405  0393  0DAD               	rlf	___fldiv@b+3,f
  3406  0394  0B89               	decfsz	9,f
  3407  0395  2B90               	goto	u1365
  3408  0396  1BBD               	btfsc	___fldiv@grs+3,7
  3409  0397  142A               	bsf	___fldiv@b,0
  3410  0398  3001               	movlw	1
  3411  0399                     u1385:	
  3412  0399  35BA               	lslf	___fldiv@grs,f
  3413  039A  0DBB               	rlf	___fldiv@grs+1,f
  3414  039B  0DBC               	rlf	___fldiv@grs+2,f
  3415  039C  0DBD               	rlf	___fldiv@grs+3,f
  3416  039D  0B89               	decfsz	9,f
  3417  039E  2B99               	goto	u1385
  3418  039F  30FF               	movlw	255
  3419  03A0  07B8               	addwf	___fldiv@new_exp,f
  3420  03A1  30FF               	movlw	255
  3421  03A2  3DB9               	addwfc	___fldiv@new_exp+1,f
  3422  03A3  2B8D               	goto	l1472
  3423  03A4                     l1474:	
  3424  03A4  01BF               	clrf	___fldiv@aexp
  3425  03A5  1FBD               	btfss	___fldiv@grs+3,7
  3426  03A6  2BBD               	goto	l1484
  3427  03A7  30FF               	movlw	255
  3428  03A8  053A               	andwf	___fldiv@grs,w
  3429  03A9  00AE               	movwf	??___fldiv
  3430  03AA  30FF               	movlw	255
  3431  03AB  053B               	andwf	___fldiv@grs+1,w
  3432  03AC  00AF               	movwf	??___fldiv+1
  3433  03AD  30FF               	movlw	255
  3434  03AE  053C               	andwf	___fldiv@grs+2,w
  3435  03AF  00B0               	movwf	??___fldiv+2
  3436  03B0  307F               	movlw	127
  3437  03B1  053D               	andwf	___fldiv@grs+3,w
  3438  03B2  00B1               	movwf	??___fldiv+3
  3439  03B3  0831               	movf	??___fldiv+3,w
  3440  03B4  0430               	iorwf	??___fldiv+2,w
  3441  03B5  042F               	iorwf	??___fldiv+1,w
  3442  03B6  042E               	iorwf	??___fldiv,w
  3443  03B7  1903               	skipnz
  3444  03B8  182A               	btfsc	___fldiv@b,0
  3445  03B9  2BBB               	goto	l1480
  3446  03BA  2BBD               	goto	l1484
  3447  03BB                     l1480:	
  3448  03BB  01BF               	clrf	___fldiv@aexp
  3449  03BC  0ABF               	incf	___fldiv@aexp,f
  3450  03BD                     l1484:	
  3451  03BD  083F               	movf	___fldiv@aexp,w
  3452  03BE  1903               	btfsc	3,2
  3453  03BF  2BE6               	goto	l1494
  3454  03C0  3001               	movlw	1
  3455  03C1  07AA               	addwf	___fldiv@b,f
  3456  03C2  3000               	movlw	0
  3457  03C3  3DAB               	addwfc	___fldiv@b+1,f
  3458  03C4  3000               	movlw	0
  3459  03C5  3DAC               	addwfc	___fldiv@b+2,f
  3460  03C6  3000               	movlw	0
  3461  03C7  3DAD               	addwfc	___fldiv@b+3,f
  3462  03C8  1C2D               	btfss	___fldiv@b+3,0
  3463  03C9  2BE6               	goto	l1494
  3464  03CA  082A               	movf	___fldiv@b,w
  3465  03CB  00AE               	movwf	??___fldiv
  3466  03CC  082B               	movf	___fldiv@b+1,w
  3467  03CD  00AF               	movwf	??___fldiv+1
  3468  03CE  082C               	movf	___fldiv@b+2,w
  3469  03CF  00B0               	movwf	??___fldiv+2
  3470  03D0  082D               	movf	___fldiv@b+3,w
  3471  03D1  00B1               	movwf	??___fldiv+3
  3472  03D2  3001               	movlw	1
  3473  03D3  00B2               	movwf	??___fldiv+4
  3474  03D4                     u1455:	
  3475  03D4  37B1               	asrf	??___fldiv+3,f
  3476  03D5  0CB0               	rrf	??___fldiv+2,f
  3477  03D6  0CAF               	rrf	??___fldiv+1,f
  3478  03D7  0CAE               	rrf	??___fldiv,f
  3479  03D8  0BB2               	decfsz	??___fldiv+4,f
  3480  03D9  2BD4               	goto	u1455
  3481  03DA  0831               	movf	??___fldiv+3,w
  3482  03DB  00AD               	movwf	___fldiv@b+3
  3483  03DC  0830               	movf	??___fldiv+2,w
  3484  03DD  00AC               	movwf	___fldiv@b+2
  3485  03DE  082F               	movf	??___fldiv+1,w
  3486  03DF  00AB               	movwf	___fldiv@b+1
  3487  03E0  082E               	movf	??___fldiv,w
  3488  03E1  00AA               	movwf	___fldiv@b
  3489  03E2  3001               	movlw	1
  3490  03E3  07B8               	addwf	___fldiv@new_exp,f
  3491  03E4  3000               	movlw	0
  3492  03E5  3DB9               	addwfc	___fldiv@new_exp+1,f
  3493  03E6                     l1494:	
  3494  03E6  0839               	movf	___fldiv@new_exp+1,w
  3495  03E7  3A80               	xorlw	128
  3496  03E8  00AE               	movwf	??___fldiv
  3497  03E9  3080               	movlw	128
  3498  03EA  022E               	subwf	??___fldiv,w
  3499  03EB  1D03               	skipz
  3500  03EC  2BEF               	goto	u1465
  3501  03ED  30FF               	movlw	255
  3502  03EE  0238               	subwf	___fldiv@new_exp,w
  3503  03EF                     u1465:	
  3504  03EF  1C03               	skipc
  3505  03F0  2BFE               	goto	l640
  3506  03F1  30FF               	movlw	255
  3507  03F2  0140               	movlb	0	; select bank0
  3508  03F3  00B8               	movwf	___fldiv@new_exp
  3509  03F4  3000               	movlw	0
  3510  03F5  00B9               	movwf	___fldiv@new_exp+1
  3511  03F6  3000               	movlw	0
  3512  03F7  00AD               	movwf	___fldiv@b+3
  3513  03F8  3000               	movlw	0
  3514  03F9  00AC               	movwf	___fldiv@b+2
  3515  03FA  3000               	movlw	0
  3516  03FB  00AB               	movwf	___fldiv@b+1
  3517  03FC  3000               	movlw	0
  3518  03FD  00AA               	movwf	___fldiv@b
  3519  03FE                     l640:	
  3520  03FE  0140               	movlb	0	; select bank0
  3521  03FF  0839               	movf	___fldiv@new_exp+1,w
  3522  0400  3A80               	xorlw	128
  3523  0401  00AE               	movwf	??___fldiv
  3524  0402  3080               	movlw	128
  3525  0403  022E               	subwf	??___fldiv,w
  3526  0404  1D03               	skipz
  3527  0405  2C08               	goto	u1475
  3528  0406  3001               	movlw	1
  3529  0407  0238               	subwf	___fldiv@new_exp,w
  3530  0408                     u1475:	
  3531  0408  1803               	skipnc
  3532  0409  2C16               	goto	l641
  3533  040A  0140               	movlb	0	; select bank0
  3534  040B  01B8               	clrf	___fldiv@new_exp
  3535  040C  01B9               	clrf	___fldiv@new_exp+1
  3536  040D  3000               	movlw	0
  3537  040E  00AD               	movwf	___fldiv@b+3
  3538  040F  3000               	movlw	0
  3539  0410  00AC               	movwf	___fldiv@b+2
  3540  0411  3000               	movlw	0
  3541  0412  00AB               	movwf	___fldiv@b+1
  3542  0413  3000               	movlw	0
  3543  0414  00AA               	movwf	___fldiv@b
  3544  0415  01B7               	clrf	___fldiv@sign
  3545  0416                     l641:	
  3546  0416  0140               	movlb	0	; select bank0
  3547  0417  0838               	movf	___fldiv@new_exp,w
  3548  0418  00AE               	movwf	??___fldiv
  3549  0419  082E               	movf	??___fldiv,w
  3550  041A  00BE               	movwf	___fldiv@bexp
  3551  041B  1C3E               	btfss	___fldiv@bexp,0
  3552  041C  2C1F               	goto	l1508
  3553  041D  17AC               	bsf	___fldiv@b+2,7
  3554  041E  2C23               	goto	l643
  3555  041F                     l1508:	
  3556  041F  307F               	movlw	127
  3557  0420  00AE               	movwf	??___fldiv
  3558  0421  082E               	movf	??___fldiv,w
  3559  0422  05AC               	andwf	___fldiv@b+2,f
  3560  0423                     l643:	
  3561  0423  363E               	lsrf	___fldiv@bexp,w
  3562  0424  00AE               	movwf	??___fldiv
  3563  0425  082E               	movf	??___fldiv,w
  3564  0426  00AD               	movwf	___fldiv@b+3
  3565  0427  2B09               	goto	L1
  3566  0428                     __end_of___fldiv:	
  3567                           
  3568                           	psect	text13
  3569  0647                     __ptext13:	
  3570 ;; *************** function ___flge *****************
  3571 ;; Defined at:
  3572 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
  3573 ;; Parameters:    Size  Location     Type
  3574 ;;  ff1             4    2[COMMON] unsigned char 
  3575 ;;  ff2             4    6[COMMON] unsigned char 
  3576 ;; Auto vars:     Size  Location     Type
  3577 ;;		None
  3578 ;; Return value:  Size  Location     Type
  3579 ;;		None               void
  3580 ;; Registers used:
  3581 ;;		wreg, status,2, status,0
  3582 ;; Tracked objects:
  3583 ;;		On entry : 0/0
  3584 ;;		On exit  : 0/0
  3585 ;;		Unchanged: 0/0
  3586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3587 ;;      Params:         8       0       0       0       0       0       0       0
  3588 ;;      Locals:         0       0       0       0       0       0       0       0
  3589 ;;      Temps:          0       4       0       0       0       0       0       0
  3590 ;;      Totals:         8       4       0       0       0       0       0       0
  3591 ;;Total ram usage:       12 bytes
  3592 ;; Hardware stack levels used:    1
  3593 ;; Hardware stack levels required when called:    1
  3594 ;; This function calls:
  3595 ;;		Nothing
  3596 ;; This function is called by:
  3597 ;;		_temperatureCheck
  3598 ;; This function uses a non-reentrant model
  3599 ;;
  3600                           
  3601                           
  3602                           ;psect for function ___flge
  3603  0647                     ___flge:	
  3604                           
  3605                           ;incstack = 0
  3606                           ; Regs used in ___flge: [wreg+status,2+status,0]
  3607  0647  3000               	movlw	0
  3608  0648  0572               	andwf	___flge@ff1,w
  3609  0649  0140               	movlb	0	; select bank0
  3610  064A  00A0               	movwf	??___flge
  3611  064B  3000               	movlw	0
  3612  064C  0573               	andwf	___flge@ff1+1,w
  3613  064D  00A1               	movwf	??___flge+1
  3614  064E  3080               	movlw	128
  3615  064F  0574               	andwf	___flge@ff1+2,w
  3616  0650  00A2               	movwf	??___flge+2
  3617  0651  307F               	movlw	127
  3618  0652  0575               	andwf	___flge@ff1+3,w
  3619  0653  00A3               	movwf	??___flge+3
  3620  0654  0823               	movf	??___flge+3,w
  3621  0655  0422               	iorwf	??___flge+2,w
  3622  0656  0421               	iorwf	??___flge+1,w
  3623  0657  0420               	iorwf	??___flge,w
  3624  0658  1D03               	skipz
  3625  0659  2E62               	goto	l440
  3626  065A  3000               	movlw	0
  3627  065B  00F5               	movwf	___flge@ff1+3
  3628  065C  3000               	movlw	0
  3629  065D  00F4               	movwf	___flge@ff1+2
  3630  065E  3000               	movlw	0
  3631  065F  00F3               	movwf	___flge@ff1+1
  3632  0660  3000               	movlw	0
  3633  0661  00F2               	movwf	___flge@ff1
  3634  0662                     l440:	
  3635  0662  3000               	movlw	0
  3636  0663  0576               	andwf	___flge@ff2,w
  3637  0664  00A0               	movwf	??___flge
  3638  0665  3000               	movlw	0
  3639  0666  0577               	andwf	___flge@ff2+1,w
  3640  0667  00A1               	movwf	??___flge+1
  3641  0668  3080               	movlw	128
  3642  0669  0578               	andwf	___flge@ff2+2,w
  3643  066A  00A2               	movwf	??___flge+2
  3644  066B  307F               	movlw	127
  3645  066C  0579               	andwf	___flge@ff2+3,w
  3646  066D  00A3               	movwf	??___flge+3
  3647  066E  0823               	movf	??___flge+3,w
  3648  066F  0422               	iorwf	??___flge+2,w
  3649  0670  0421               	iorwf	??___flge+1,w
  3650  0671  0420               	iorwf	??___flge,w
  3651  0672  1D03               	skipz
  3652  0673  2E7C               	goto	l1750
  3653  0674  3000               	movlw	0
  3654  0675  00F9               	movwf	___flge@ff2+3
  3655  0676  3000               	movlw	0
  3656  0677  00F8               	movwf	___flge@ff2+2
  3657  0678  3000               	movlw	0
  3658  0679  00F7               	movwf	___flge@ff2+1
  3659  067A  3000               	movlw	0
  3660  067B  00F6               	movwf	___flge@ff2
  3661  067C                     l1750:	
  3662  067C  1FF5               	btfss	___flge@ff1+3,7
  3663  067D  2E96               	goto	l1754
  3664  067E  3000               	movlw	0
  3665  067F  00A0               	movwf	??___flge
  3666  0680  3000               	movlw	0
  3667  0681  00A1               	movwf	??___flge+1
  3668  0682  3000               	movlw	0
  3669  0683  00A2               	movwf	??___flge+2
  3670  0684  3080               	movlw	128
  3671  0685  00A3               	movwf	??___flge+3
  3672  0686  0872               	movf	___flge@ff1,w
  3673  0687  02A0               	subwf	??___flge,f
  3674  0688  0873               	movf	___flge@ff1+1,w
  3675  0689  3BA1               	subwfb	??___flge+1,f
  3676  068A  0874               	movf	___flge@ff1+2,w
  3677  068B  3BA2               	subwfb	??___flge+2,f
  3678  068C  0875               	movf	___flge@ff1+3,w
  3679  068D  3BA3               	subwfb	??___flge+3,f
  3680  068E  0823               	movf	??___flge+3,w
  3681  068F  00F5               	movwf	___flge@ff1+3
  3682  0690  0822               	movf	??___flge+2,w
  3683  0691  00F4               	movwf	___flge@ff1+2
  3684  0692  0821               	movf	??___flge+1,w
  3685  0693  00F3               	movwf	___flge@ff1+1
  3686  0694  0820               	movf	??___flge,w
  3687  0695  00F2               	movwf	___flge@ff1
  3688  0696                     l1754:	
  3689  0696  1FF9               	btfss	___flge@ff2+3,7
  3690  0697  2EB0               	goto	l443
  3691  0698  3000               	movlw	0
  3692  0699  00A0               	movwf	??___flge
  3693  069A  3000               	movlw	0
  3694  069B  00A1               	movwf	??___flge+1
  3695  069C  3000               	movlw	0
  3696  069D  00A2               	movwf	??___flge+2
  3697  069E  3080               	movlw	128
  3698  069F  00A3               	movwf	??___flge+3
  3699  06A0  0876               	movf	___flge@ff2,w
  3700  06A1  02A0               	subwf	??___flge,f
  3701  06A2  0877               	movf	___flge@ff2+1,w
  3702  06A3  3BA1               	subwfb	??___flge+1,f
  3703  06A4  0878               	movf	___flge@ff2+2,w
  3704  06A5  3BA2               	subwfb	??___flge+2,f
  3705  06A6  0879               	movf	___flge@ff2+3,w
  3706  06A7  3BA3               	subwfb	??___flge+3,f
  3707  06A8  0823               	movf	??___flge+3,w
  3708  06A9  00F9               	movwf	___flge@ff2+3
  3709  06AA  0822               	movf	??___flge+2,w
  3710  06AB  00F8               	movwf	___flge@ff2+2
  3711  06AC  0821               	movf	??___flge+1,w
  3712  06AD  00F7               	movwf	___flge@ff2+1
  3713  06AE  0820               	movf	??___flge,w
  3714  06AF  00F6               	movwf	___flge@ff2
  3715  06B0                     l443:	
  3716  06B0  3080               	movlw	128
  3717  06B1  06F5               	xorwf	___flge@ff1+3,f
  3718  06B2  3080               	movlw	128
  3719  06B3  06F9               	xorwf	___flge@ff2+3,f
  3720  06B4  0879               	movf	___flge@ff2+3,w
  3721  06B5  0275               	subwf	___flge@ff1+3,w
  3722  06B6  1D03               	skipz
  3723  06B7  0008               	return
  3724  06B8  0878               	movf	___flge@ff2+2,w
  3725  06B9  0274               	subwf	___flge@ff1+2,w
  3726  06BA  1D03               	skipz
  3727  06BB  0008               	return
  3728  06BC  0877               	movf	___flge@ff2+1,w
  3729  06BD  0273               	subwf	___flge@ff1+1,w
  3730  06BE  1D03               	skipz
  3731  06BF  0008               	return
  3732  06C0  0876               	movf	___flge@ff2,w
  3733  06C1  0272               	subwf	___flge@ff1,w
  3734  06C2  0008               	return
  3735  06C3                     __end_of___flge:	
  3736                           
  3737                           	psect	text14
  3738  0F5F                     __ptext14:	
  3739 ;; *************** function _ledFaultCheck *****************
  3740 ;; Defined at:
  3741 ;;		line 361 in file "main.c"
  3742 ;; Parameters:    Size  Location     Type
  3743 ;;		None
  3744 ;; Auto vars:     Size  Location     Type
  3745 ;;		None
  3746 ;; Return value:  Size  Location     Type
  3747 ;;                  1    wreg      void 
  3748 ;; Registers used:
  3749 ;;		wreg, status,2, status,0
  3750 ;; Tracked objects:
  3751 ;;		On entry : 0/0
  3752 ;;		On exit  : 0/0
  3753 ;;		Unchanged: 0/0
  3754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3755 ;;      Params:         0       0       0       0       0       0       0       0
  3756 ;;      Locals:         0       0       0       0       0       0       0       0
  3757 ;;      Temps:          1       0       0       0       0       0       0       0
  3758 ;;      Totals:         1       0       0       0       0       0       0       0
  3759 ;;Total ram usage:        1 bytes
  3760 ;; Hardware stack levels used:    1
  3761 ;; Hardware stack levels required when called:    1
  3762 ;; This function calls:
  3763 ;;		Nothing
  3764 ;; This function is called by:
  3765 ;;		_ErrHanler
  3766 ;;		_main
  3767 ;; This function uses a non-reentrant model
  3768 ;;
  3769                           
  3770                           
  3771                           ;psect for function _ledFaultCheck
  3772  0F5F                     _ledFaultCheck:	
  3773                           
  3774                           ;main.c: 362:     if( (currentStatus == Normal) && (LATCbits.LATC2 == 1) && (PORTBbits.R
      +                          B0 == 0)){
  3775                           
  3776                           ;incstack = 0
  3777                           ; Regs used in _ledFaultCheck: [wreg+status,2+status,0]
  3778  0F5F  087B               	movf	_currentStatus,w
  3779  0F60  1D03               	btfss	3,2
  3780  0F61  2F6E               	goto	l1810
  3781  0F62  0140               	movlb	0	; select bank0
  3782  0F63  191A               	btfsc	26,2	;volatile
  3783  0F64  180D               	btfsc	13,0	;volatile
  3784  0F65  2F6E               	goto	l1810
  3785                           
  3786                           ;main.c: 364:             currentStatus = Error;
  3787  0F66  3002               	movlw	2
  3788  0F67  00F2               	movwf	??_ledFaultCheck
  3789  0F68  0872               	movf	??_ledFaultCheck,w
  3790  0F69  00FB               	movwf	_currentStatus
  3791                           
  3792                           ;main.c: 365:             errReason = LEDDrvErr;
  3793  0F6A  3004               	movlw	4
  3794  0F6B  00F2               	movwf	??_ledFaultCheck
  3795  0F6C  0872               	movf	??_ledFaultCheck,w
  3796  0F6D  00EE               	movwf	_errReason
  3797  0F6E                     l1810:	
  3798                           
  3799                           ;main.c: 367:     if((currentStatus == Error) && (errReason == LEDDrvErr) &&(LATCbits.LA
      +                          TC2 == 1) && (PORTBbits.RB0 == 1)){
  3800  0F6E  3002               	movlw	2
  3801  0F6F  067B               	xorwf	_currentStatus,w
  3802  0F70  1D03               	btfss	3,2
  3803  0F71  0008               	return
  3804  0F72  3004               	movlw	4
  3805  0F73  0140               	movlb	0	; select bank0
  3806  0F74  066E               	xorwf	_errReason,w
  3807  0F75  1D03               	btfss	3,2
  3808  0F76  0008               	return
  3809  0F77  1D1A               	btfss	26,2	;volatile
  3810  0F78  0008               	return
  3811  0F79  1C0D               	btfss	13,0	;volatile
  3812  0F7A  0008               	return
  3813                           
  3814                           ;main.c: 368:         currentStatus = Normal;
  3815  0F7B  01FB               	clrf	_currentStatus
  3816                           
  3817                           ;main.c: 369:         errReason = NoErr;
  3818  0F7C  01EE               	clrf	_errReason
  3819  0F7D  0008               	return
  3820  0F7E                     __end_of_ledFaultCheck:	
  3821                           
  3822                           	psect	text15
  3823  0F7E                     __ptext15:	
  3824 ;; *************** function _ErrFlush *****************
  3825 ;; Defined at:
  3826 ;;		line 324 in file "main.c"
  3827 ;; Parameters:    Size  Location     Type
  3828 ;;  count           2    2[COMMON] int 
  3829 ;; Auto vars:     Size  Location     Type
  3830 ;;  i               2    6[COMMON] int 
  3831 ;; Return value:  Size  Location     Type
  3832 ;;                  1    wreg      void 
  3833 ;; Registers used:
  3834 ;;		wreg, status,2
  3835 ;; Tracked objects:
  3836 ;;		On entry : 0/0
  3837 ;;		On exit  : 0/0
  3838 ;;		Unchanged: 0/0
  3839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3840 ;;      Params:         2       0       0       0       0       0       0       0
  3841 ;;      Locals:         2       0       0       0       0       0       0       0
  3842 ;;      Temps:          2       0       0       0       0       0       0       0
  3843 ;;      Totals:         6       0       0       0       0       0       0       0
  3844 ;;Total ram usage:        6 bytes
  3845 ;; Hardware stack levels used:    1
  3846 ;; Hardware stack levels required when called:    1
  3847 ;; This function calls:
  3848 ;;		Nothing
  3849 ;; This function is called by:
  3850 ;;		_ErrHanler
  3851 ;; This function uses a non-reentrant model
  3852 ;;
  3853                           
  3854                           
  3855                           ;psect for function _ErrFlush
  3856  0F7E                     _ErrFlush:	
  3857                           
  3858                           ;main.c: 325:     TRISCbits.TRISC0 = 1;
  3859                           
  3860                           ;incstack = 0
  3861                           ; Regs used in _ErrFlush: [wreg+status,2]
  3862  0F7E  0140               	movlb	0	; select bank0
  3863  0F7F  1414               	bsf	20,0	;volatile
  3864                           
  3865                           ;main.c: 326:      _delay((unsigned long)((1000)*(32000000/4000.0)));
  3866  0F80  3029               	movlw	41
  3867  0F81  00F5               	movwf	??_ErrFlush+1
  3868  0F82  3096               	movlw	150
  3869  0F83  00F4               	movwf	??_ErrFlush
  3870  0F84  307F               	movlw	127
  3871  0F85                     u2547:	
  3872  0F85  0B89               	decfsz	9,f
  3873  0F86  2F85               	goto	u2547
  3874  0F87  0BF4               	decfsz	??_ErrFlush,f
  3875  0F88  2F85               	goto	u2547
  3876  0F89  0BF5               	decfsz	??_ErrFlush+1,f
  3877  0F8A  2F85               	goto	u2547
  3878  0F8B  0000               	nop
  3879                           
  3880                           ;main.c: 327:     LATCbits.LATC0 = 1;
  3881  0F8C  0140               	movlb	0	; select bank0
  3882  0F8D  141A               	bsf	26,0	;volatile
  3883                           
  3884                           ;main.c: 328:     for(int i=0;i<count; i++){
  3885  0F8E  01F6               	clrf	ErrFlush@i
  3886  0F8F  01F7               	clrf	ErrFlush@i+1
  3887  0F90                     l125:	
  3888  0F90  0877               	movf	ErrFlush@i+1,w
  3889  0F91  3A80               	xorlw	128
  3890  0F92  00F4               	movwf	??_ErrFlush
  3891  0F93  0873               	movf	ErrFlush@count+1,w
  3892  0F94  3A80               	xorlw	128
  3893  0F95  0274               	subwf	??_ErrFlush,w
  3894  0F96  1D03               	skipz
  3895  0F97  2F9A               	goto	u1975
  3896  0F98  0872               	movf	ErrFlush@count,w
  3897  0F99  0276               	subwf	ErrFlush@i,w
  3898  0F9A                     u1975:	
  3899  0F9A  1803               	btfsc	3,0
  3900  0F9B  0008               	return
  3901                           
  3902                           ;main.c: 329:         TRISCbits.TRISC0 = 0;
  3903  0F9C  0140               	movlb	0	; select bank0
  3904  0F9D  1014               	bcf	20,0	;volatile
  3905                           
  3906                           ;main.c: 330:         _delay((unsigned long)((300)*(32000000/4000.0)));
  3907  0F9E  300D               	movlw	13
  3908  0F9F  00F5               	movwf	??_ErrFlush+1
  3909  0FA0  302D               	movlw	45
  3910  0FA1  00F4               	movwf	??_ErrFlush
  3911  0FA2  30D8               	movlw	216
  3912  0FA3                     u2557:	
  3913  0FA3  0B89               	decfsz	9,f
  3914  0FA4  2FA3               	goto	u2557
  3915  0FA5  0BF4               	decfsz	??_ErrFlush,f
  3916  0FA6  2FA3               	goto	u2557
  3917  0FA7  0BF5               	decfsz	??_ErrFlush+1,f
  3918  0FA8  2FA3               	goto	u2557
  3919                           
  3920                           ;main.c: 331:         TRISCbits.TRISC0 = 1;
  3921  0FA9  0140               	movlb	0	; select bank0
  3922  0FAA  1414               	bsf	20,0	;volatile
  3923                           
  3924                           ;main.c: 332:         _delay((unsigned long)((300)*(32000000/4000.0)));
  3925  0FAB  300D               	movlw	13
  3926  0FAC  00F5               	movwf	??_ErrFlush+1
  3927  0FAD  302D               	movlw	45
  3928  0FAE  00F4               	movwf	??_ErrFlush
  3929  0FAF  30D8               	movlw	216
  3930  0FB0                     u2567:	
  3931  0FB0  0B89               	decfsz	9,f
  3932  0FB1  2FB0               	goto	u2567
  3933  0FB2  0BF4               	decfsz	??_ErrFlush,f
  3934  0FB3  2FB0               	goto	u2567
  3935  0FB4  0BF5               	decfsz	??_ErrFlush+1,f
  3936  0FB5  2FB0               	goto	u2567
  3937                           
  3938                           ;main.c: 333:     }
  3939  0FB6  3001               	movlw	1
  3940  0FB7  07F6               	addwf	ErrFlush@i,f
  3941  0FB8  3000               	movlw	0
  3942  0FB9  3DF7               	addwfc	ErrFlush@i+1,f
  3943  0FBA  2F90               	goto	l125
  3944  0FBB                     __end_of_ErrFlush:	
  3945                           
  3946                           	psect	intentry
  3947  0004                     __pintentry:	
  3948 ;; *************** function _int_handler *****************
  3949 ;; Defined at:
  3950 ;;		line 415 in file "main.c"
  3951 ;; Parameters:    Size  Location     Type
  3952 ;;		None
  3953 ;; Auto vars:     Size  Location     Type
  3954 ;;		None
  3955 ;; Return value:  Size  Location     Type
  3956 ;;                  1    wreg      void 
  3957 ;; Registers used:
  3958 ;;		wreg, status,2, status,0
  3959 ;; Tracked objects:
  3960 ;;		On entry : 0/0
  3961 ;;		On exit  : 0/0
  3962 ;;		Unchanged: 0/0
  3963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3964 ;;      Params:         0       0       0       0       0       0       0       0
  3965 ;;      Locals:         0       0       0       0       0       0       0       0
  3966 ;;      Temps:          2       0       0       0       0       0       0       0
  3967 ;;      Totals:         2       0       0       0       0       0       0       0
  3968 ;;Total ram usage:        2 bytes
  3969 ;; Hardware stack levels used:    1
  3970 ;; This function calls:
  3971 ;;		Nothing
  3972 ;; This function is called by:
  3973 ;;		Interrupt level 1
  3974 ;; This function uses a non-reentrant model
  3975 ;;
  3976                           
  3977  0004                     _int_handler:	
  3978                           
  3979                           ;incstack = 0
  3980  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3981                           
  3982                           ; Regs used in _int_handler: [wreg+status,2+status,0]
  3983  0005  3180               	pagesel	$
  3984                           
  3985                           ;main.c: 418:     if(PIE0bits.IOCIE && IOCAF7 ){
  3986  0006  014E               	movlb	14	; select bank14
  3987  0007  1E16               	btfss	22,4	;volatile
  3988  0008  2849               	goto	i1l1904
  3989  0009  017E               	movlb	62	; select bank62
  3990  000A  1FBF               	btfss	63,7	;volatile
  3991  000B  2849               	goto	i1l1904
  3992                           
  3993                           ;main.c: 419:          IOCAF7 = 0;
  3994  000C  13BF               	bcf	63,7	;volatile
  3995                           
  3996                           ;main.c: 420:          if(currentStatus == Normal){
  3997  000D  087B               	movf	_currentStatus,w
  3998  000E  1D03               	btfss	3,2
  3999  000F  2849               	goto	i1l1904
  4000                           
  4001                           ;main.c: 422:             _delay((unsigned long)((150)*(32000000/4000.0)));
  4002  0010  3007               	movlw	7
  4003  0011  00F1               	movwf	??_int_handler+1
  4004  0012  3017               	movlw	23
  4005  0013  00F0               	movwf	??_int_handler
  4006  0014  306A               	movlw	106
  4007  0015                     u257_27:	
  4008  0015  0B89               	decfsz	9,f
  4009  0016  2815               	goto	u257_27
  4010  0017  0BF0               	decfsz	??_int_handler,f
  4011  0018  2815               	goto	u257_27
  4012  0019  0BF1               	decfsz	??_int_handler+1,f
  4013  001A  2815               	goto	u257_27
  4014  001B  3200               	nop2
  4015                           
  4016                           ;main.c: 423:             if(PORTAbits.RA7 == 0){
  4017  001C  0140               	movlb	0	; select bank0
  4018  001D  1B8C               	btfsc	12,7	;volatile
  4019  001E  2838               	goto	i1l1894
  4020                           
  4021                           ;main.c: 425:                 LATCbits.LATC2 = ~LATCbits.LATC2;
  4022  001F  1003               	clrc
  4023  0020  1D1A               	btfss	26,2	;volatile
  4024  0021  1403               	setc
  4025  0022  1C03               	btfss	3,0
  4026  0023  2827               	goto	u219_20
  4027  0024  0140               	movlb	0	; select bank0
  4028  0025  151A               	bsf	26,2	;volatile
  4029  0026  2829               	goto	u220_24
  4030  0027                     u219_20:	
  4031  0027  0140               	movlb	0	; select bank0
  4032  0028  111A               	bcf	26,2	;volatile
  4033  0029                     u220_24:	
  4034                           
  4035                           ;main.c: 426:                 LATCbits.LATC5 = ~LATCbits.LATC5;
  4036  0029  1003               	clrc
  4037  002A  1E9A               	btfss	26,5	;volatile
  4038  002B  1403               	setc
  4039  002C  1C03               	btfss	3,0
  4040  002D  2831               	goto	u221_20
  4041  002E  0140               	movlb	0	; select bank0
  4042  002F  169A               	bsf	26,5	;volatile
  4043  0030  2833               	goto	i1l1890
  4044  0031                     u221_20:	
  4045  0031  0140               	movlb	0	; select bank0
  4046  0032  129A               	bcf	26,5	;volatile
  4047  0033                     i1l1890:	
  4048                           
  4049                           ;main.c: 429:                 if(LATCbits.LATC2 == 1){
  4050  0033  1D1A               	btfss	26,2	;volatile
  4051  0034  2837               	goto	i1l168
  4052                           
  4053                           ;main.c: 430:                     LATCbits.LATC7 = 1;
  4054  0035  179A               	bsf	26,7	;volatile
  4055                           
  4056                           ;main.c: 431:                 }else {
  4057  0036  2838               	goto	i1l1894
  4058  0037                     i1l168:	
  4059                           
  4060                           ;main.c: 432:                     LATCbits.LATC7 = 0;
  4061  0037  139A               	bcf	26,7	;volatile
  4062  0038                     i1l1894:	
  4063                           
  4064                           ;main.c: 438:             TMR0H = 0xFD;
  4065  0038  30FD               	movlw	253
  4066  0039  014B               	movlb	11	; select bank11
  4067  003A  009D               	movwf	29	;volatile
  4068                           
  4069                           ;main.c: 439:             TMR0L = 0;
  4070  003B  019C               	clrf	28	;volatile
  4071                           
  4072                           ;main.c: 440:             TMR0IF = 0;
  4073  003C  014E               	movlb	14	; select bank14
  4074  003D  128C               	bcf	12,5	;volatile
  4075                           
  4076                           ;main.c: 441:             timerCounter = 0;
  4077  003E  3000               	movlw	0
  4078  003F  0141               	movlb	1	; select bank1
  4079  0040  00BB               	movwf	(_timerCounter+3)^(0+128)
  4080  0041  3000               	movlw	0
  4081  0042  00BA               	movwf	(_timerCounter+2)^(0+128)
  4082  0043  3000               	movlw	0
  4083  0044  00B9               	movwf	(_timerCounter+1)^(0+128)
  4084  0045  3000               	movlw	0
  4085  0046  00B8               	movwf	_timerCounter^(0+128)
  4086                           
  4087                           ;main.c: 442:             TMR0IE = 1;
  4088  0047  014E               	movlb	14	; select bank14
  4089  0048  1696               	bsf	22,5	;volatile
  4090  0049                     i1l1904:	
  4091                           
  4092                           ;main.c: 447:     if(TMR0IE && TMR0IF){
  4093  0049  014E               	movlb	14	; select bank14
  4094  004A  1A96               	btfsc	22,5	;volatile
  4095  004B  1E8C               	btfss	12,5	;volatile
  4096  004C  286E               	goto	i1l170
  4097                           
  4098                           ;main.c: 449:         TMR0IF = 0;
  4099  004D  128C               	bcf	12,5	;volatile
  4100                           
  4101                           ;main.c: 451:         if(currentStatus == Normal){
  4102  004E  087B               	movf	_currentStatus,w
  4103  004F  1D03               	btfss	3,2
  4104  0050  286E               	goto	i1l170
  4105                           
  4106                           ;main.c: 453:             if(timerCounter <= 153){
  4107  0051  0141               	movlb	1	; select bank1
  4108  0052  083B               	movf	(_timerCounter+3)^(0+128),w
  4109  0053  1D03               	btfss	3,2
  4110  0054  2868               	goto	i1l172
  4111  0055  083A               	movf	(_timerCounter+2)^(0+128),w
  4112  0056  1D03               	btfss	3,2
  4113  0057  2868               	goto	i1l172
  4114  0058  0839               	movf	(_timerCounter+1)^(0+128),w
  4115  0059  1D03               	btfss	3,2
  4116  005A  2868               	goto	i1l172
  4117  005B  309A               	movlw	154
  4118  005C  0238               	subwf	_timerCounter^(0+128),w
  4119  005D  1803               	btfsc	3,0
  4120  005E  2868               	goto	i1l172
  4121                           
  4122                           ;main.c: 455:                 timerCounter++;
  4123  005F  3001               	movlw	1
  4124  0060  07B8               	addwf	_timerCounter^(0+128),f
  4125  0061  3000               	movlw	0
  4126  0062  3DB9               	addwfc	(_timerCounter+1)^(0+128),f
  4127  0063  3000               	movlw	0
  4128  0064  3DBA               	addwfc	(_timerCounter+2)^(0+128),f
  4129  0065  3000               	movlw	0
  4130  0066  3DBB               	addwfc	(_timerCounter+3)^(0+128),f
  4131                           
  4132                           ;main.c: 456:             }
  4133  0067  286E               	goto	i1l170
  4134  0068                     i1l172:	
  4135                           ;main.c: 457:             else{
  4136                           
  4137                           
  4138                           ;main.c: 458:                 TMR0IE = 0;
  4139  0068  014E               	movlb	14	; select bank14
  4140  0069  1296               	bcf	22,5	;volatile
  4141                           
  4142                           ;main.c: 459:                 LATCbits.LATC2 = 0;
  4143  006A  0140               	movlb	0	; select bank0
  4144  006B  111A               	bcf	26,2	;volatile
  4145                           
  4146                           ;main.c: 460:                 LATCbits.LATC5 = 0;
  4147  006C  129A               	bcf	26,5	;volatile
  4148                           
  4149                           ;main.c: 461:                 LATCbits.LATC7 = 0;
  4150  006D  139A               	bcf	26,7	;volatile
  4151  006E                     i1l170:	
  4152                           ;main.c: 465:     }
  4153                           
  4154                           
  4155                           ;main.c: 468:     if(PIE1bits.ADIE && PIR1bits.ADIF){
  4156  006E  014E               	movlb	14	; select bank14
  4157  006F  1817               	btfsc	23,0	;volatile
  4158  0070  080D               	movf	13,w	;volatile
  4159  0071  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  4160  0072  0009               	retfie
  4161  0073                     __end_of_int_handler:	
  4162  007E                     btemp	set	126	;btemp
  4163  007E                     int$flags	set	126
  4164  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    16
    Data        0
    BSS         29
    Persistent  33
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      12
    BANK0            80     78      79
    BANK1            80      8      36
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _initDIA->_read_DIA
    ___flmul->__Umul8_16
    ___fldiv->___xxtofl

Critical Paths under _int_handler in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_ErrHanler
    _ErrHanler->_temperatureCheck
    _temperatureCheck->_getNTCV
    _getNTCV->___flmul
    ___flmul->___fldiv
    ___fldiv->___xxtofl

Critical Paths under _int_handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _int_handler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _int_handler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _int_handler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _int_handler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _int_handler in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _int_handler in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     4      4   12652
                                              0 BANK1      8     4      4
                          _ErrHanler
                      _FANFaultCheck
                     _HeartBeatFlush
                               _init
                      _ledFaultCheck
                   _temperatureCheck
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0     652
                            _initDIA
 ---------------------------------------------------------------------------------
 (2) _initDIA                                              0     0      0     652
                           _read_DIA
 ---------------------------------------------------------------------------------
 (3) _read_DIA                                             2     0      2     652
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _HeartBeatFlush                                       2     2      0       0
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _FANFaultCheck                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ErrHanler                                            2     2      0    6155
                                             76 BANK0      2     2      0
                           _ErrFlush
                      _ledFaultCheck
                   _temperatureCheck
 ---------------------------------------------------------------------------------
 (1) _temperatureCheck                                     1     1      0    5805
                                             75 BANK0      1     1      0
                             ___flge
                            _getNTCV
 ---------------------------------------------------------------------------------
 (2) _getNTCV                                             17    13      4    5015
                                             58 BANK0     17    13      4
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     550
                                              2 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    2721
                                             32 BANK0     26    18      8
                          __Umul8_16
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              2 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             26    18      8    1425
                                              6 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _ledFaultCheck                                        1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ErrFlush                                             6     4      2     350
                                              2 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _int_handler                                          2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ErrHanler
     _ErrFlush
     _ledFaultCheck
     _temperatureCheck
       ___flge
       _getNTCV
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
   _FANFaultCheck
   _HeartBeatFlush
   _init
     _initDIA
       _read_DIA
   _ledFaultCheck
   _temperatureCheck
     ___flge
     _getNTCV
       ___fldiv
         ___xxtofl (ARG)
       ___flmul
         __Umul8_16
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl

 _int_handler (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      B       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      7F       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     4E      4F       6       98.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      8      24       8       45.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      7F      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Jul 26 19:33:00 2020

             ___fldiv@aexp 003F               ___fldiv@bexp 003E               ___fldiv@sign 0037  
             _FanFBUpLimit 0800                __CFG_CP$OFF 0000                         l95 07EF  
            _FanFBLowLimit 07FC        __Umul8_16@word_mpld 0078                        l104 0758  
                      l125 0F90    __size_of_HeartBeatFlush 001E                        l154 0FC0  
                      l181 07B6                        l190 07B0                        l440 0662  
                      l443 06B0                        l710 0619                        l711 0623  
                      l703 0605                        l640 03FE                        l641 0416  
                      l643 0423                        l619 02F7                        l716 07D9  
                      l671 02A1                        l697 05CF                        _GIE 005F  
             __CFG_BORV$LO 0000                        wreg 0009               ___flmul@aexp 0052  
             ___flmul@bexp 0053               ___flmul@sign 004D               ___flmul@temp 0058  
             ___flmul@prod 0054              __CFG_BBEN$OFF 0000               __CFG_LVP$OFF 0000  
             __CFG_ZCD$OFF 0000                       l2100 07A7                       l2030 04A4  
                     l2016 043B                       l2104 07B3                       l2018 0443  
                     l1412 02EF                       l2028 049C                       l2044 0555  
                     l2108 07B6                       l1422 0316                       l2054 0593  
                     l2070 0FE1                       l1408 02EC                       l2048 0575  
                     l2064 0FC3                       l1610 0209                       l1530 009E  
                     l2058 05AE                       l2066 0FCD                       l2074 0FE8  
                     l1508 041F                       l1428 0322                       l1364 07D3  
                     l1612 0220                       l1532 00A6                       l2068 0FD7  
                     l2084 0782                       l1454 0382                       l1622 0239  
                     l1550 00C9                       l2166 07BF                       l1480 03BB  
                     l1472 038D                       l1448 0369                       l1456 034B  
                     l1392 02CB                       l1632 0262                       l1528 009C  
                     l2168 0FF1                       l2096 079B                       l1810 0F6E  
                     l1474 03A4                       l1458 0387                       l1394 02D3  
                     l1642 028E                       l1618 0237                       l1546 00BF  
                     l2098 07A0                       l1484 03BD                       l1388 02C8  
                     l1636 0277                       l1548 00C1                       l1660 05C7  
                     l1750 067C                       l1494 03E6                       l1558 00D7  
                     l1670 05E2                       l1680 0617                       l1672 05F2  
                     l1754 0696                       l1682 060A                       l1666 05DE  
                     l1694 063E                       _ADFM 04F7                       _T0EN 2CF7  
                     u1305 035A                       u1325 0363                       u1335 0377  
                     u1185 07DA                       u1365 0390                       u1605 01E9  
                     u1455 03D4                       u1295 0353                       u1615 01F8  
                     u1465 03EF                       u1385 0399                       u1625 020C  
                     u1475 0408                       u1715 0250                       u2507 0436  
                     u1725 026B                       u1645 0215                       u1805 05FF  
                     u2517 043F                       u1735 0281                       u1575 014D  
                     u2527 0497                       u2455 0792                       u1585 017C  
                     u1825 0611                       u2537 04A0                       u2547 0F85  
                     u1595 01D2                       u2557 0FA3                       u2567 0FB0  
                     u2487 0F49                       u1865 062B                       u1785 05EB  
                     u2497 0F56                       u1975 0F9A                       _main 077B  
                     _init 0723                       fsr0h 0005                       indf0 0000  
                     fsr0l 0004                       btemp 007E                       start 0073  
          ___fldiv@new_exp 0038              __CFG_CSWEN$ON 0000              __CFG_MCLRE$ON 0000  
        ?_temperatureCheck 0070                      ?_main 00BC                      ?_init 0070  
          __end_of___fldiv 0428                      _ADRES 009B              __CFG_WDTE$OFF 0000  
          __end_of___flmul 02AE                      i1l170 006E                      i1l172 0068  
                    i1l168 0037                      _FVREN 4867                      _TMR0H 059D  
                    _TMR0L 059C         ??_temperatureCheck 006B            __end_of_getNTCV 0505  
           __CFG_FCMEN$OFF 0000               ?_int_handler 0070              __CFG_WRTB$OFF 0000  
            __CFG_WRTC$OFF 0000            __end_of_initDIA 0723             __CFG_BOREN$OFF 0000  
                    status 0003                      wtemp0 007E      __end_of_FANFaultCheck 0004  
          __initialization 0075           __end_of_ErrFlush 0FBB               __end_of_main 07C9  
             __end_of_init 077B             __CFG_SAFEN$OFF 0000                     ??_main 00C0  
                   ??_init 0074                read_DIA@Add 0072         __size_of_ErrHanler 0045  
                   _IOCAF7 F9FF                     _IOCAN7 F9F7                     i1l1904 0049  
                   i1l1890 0033                     i1l1894 0038             __CFG_WDTCCS$SC 0000  
                   u220_24 0029                     u221_20 0031                     u219_20 0027  
                   _FVRRDY 4866                     u257_27 0015                     _TMR0IE 38B5  
                   _TMR0IF 3865           __end_of___xxtofl 0647             __CFG_PWRTE$OFF 0000  
                   ___flge 0647                  ??___fldiv 002E                  ??___flmul 0048  
         __end_of_read_DIA 07F6                  ??_getNTCV 005E             _HeartBeatFlush 0F41  
                ??_initDIA 0074         __size_of__Umul8_16 001F                 ___flge@ff1 0072  
               ___flge@ff2 0076               ___xxtofl@arg 0022               ___xxtofl@exp 0021  
             ___xxtofl@val 0072    __end_of__initialization 007E               _getNTCV$1089 005F  
           __pcstackCOMMON 0070          __end_of_ErrHanler 1000             main@checkCount 00C2  
   __end_of_HeartBeatFlush 0F5F      __end_of_ledFaultCheck 0F7E              _currentStatus 007B  
     __size_of_int_handler 006F                  ?_ErrFlush 0072                 __pbssBANK0 006E  
               __pbssBANK1 00A0                 __pnvCOMMON 007B          __end_of__Umul8_16 07E8  
               __pmaintext 077B                    ?___flge 0072            __CFG_PPS1WAY$ON 0000  
               __pintentry 0004            ?_HeartBeatFlush 0070                    _T016BIT 2CF4  
                ?___xxtofl 0072                    _NVMADRH 081B                    _NVMADRL 081A  
                  _NVMDATH 081D                    _NVMDATL 081C                 ??_ErrFlush 0074  
__size_of_temperatureCheck 00AC                  ?_read_DIA 0072            __size_of___flge 007C  
                  ___fldiv 02AE                    ___flmul 0082            __CFG_STVREN$OFF 0000  
                _DIA_Table 00A0                    _getNTCV 0428                    __ptext1 0723  
                  __ptext2 06C3                    __ptext3 07E8                    __ptext4 0F41  
                  __ptext5 0003                    __ptext6 0FBB                    __ptext7 0505  
                  __ptext8 0428                    __ptext9 05B1                 getNTCV@VDD 0063  
                  _intNTCV 00B4            __CFG_WRTAPP$OFF 0000                    _initDIA 06C3  
                  _extNTCV 00B0                 ??___xxtofl 0076            __CFG_WRTSAF$OFF 0000  
                  clrloop0 07F7       end_of_initialization 007E                 ??_read_DIA 0074  
    __CFG_WDTCPS$WDTCPS_31 0000                  _PORTAbits 000C                  _PORTBbits 000D  
                ErrFlush@i 0076              ___xxtofl@sign 0020     __size_of_FANFaultCheck 0001  
                _TRISAbits 0012                  _TRISBbits 0013                  _TRISCbits 0014  
              ___fldiv@grs 003A                ___fldiv@rem 0033           __CFG_FEXTOSC$OFF 0000  
              ___flmul@grs 004E                 _upperLimit 0808      __end_of_FanFBLowLimit 0800  
           __end_of___flge 06C3                  _ErrHanler 0FBB        start_initialization 0075  
         _temperatureCheck 0505          __size_of_ErrFlush 003D              _FANFaultCheck 0003  
         ??_HeartBeatFlush 0072           __CFG_LPBOREN$OFF 0000                   ??___flge 0020  
                __Umul8_16 07C9                 ?_ErrHanler 0070                  ___fldiv@a 0026  
                ___fldiv@b 002A                  ___flmul@a 0044                  ___flmul@b 0040  
                ___latbits 0001              ??_int_handler 0070              __pcstackBANK0 0020  
            __pcstackBANK1 00BC          __size_of___xxtofl 0096          __size_of_read_DIA 000E  
           ?_FANFaultCheck 0070     __size_of_ledFaultCheck 001F                   ?___fldiv 0026  
                 ?___flmul 0040                 ?__Umul8_16 0072                   ?_getNTCV 005A  
     __end_of_restoreLevel 0808                   ?_initDIA 0070                  _errReason 006E  
     __CFG_RSTOSC$HFINTPLL 0000        __end_of_int_handler 0073                   _LATCbits 001A  
                clear_ram0 07F6                   _PIE0bits 0716                   _PIE1bits 0717  
                 _PIR1bits 070D          __CFG_BBSIZE$BB512 0000                ??_ErrHanler 006C  
               _ADCON0bits 009D                 _ADCON1bits 009E              _ledFaultCheck 0F5F  
           getNTCV@channel 005A       __end_of_FanFBUpLimit 0804                   _ErrFlush 0F7E  
          ??_FANFaultCheck 0072             getNTCV@voltage 0067                ??__Umul8_16 0074  
         __size_of___fldiv 017A           __size_of___flmul 022C   __end_of_temperatureCheck 05B1  
         __size_of_getNTCV 00DD                 _ANSELAbits 1F38                 _ANSELBbits 1F43  
               _ANSELCbits 1F4E             ?_ledFaultCheck 0070           __size_of_initDIA 0060  
                 ___xxtofl 05B1                 _T0CON1bits 059F                _int_handler 0004  
                 __ptext10 0082                   __ptext11 07C9                   __ptext12 02AE  
                 __ptext13 0647                   __ptext14 0F5F                   __ptext15 0F7E  
                 _read_DIA 07E8              __size_of_main 004E              __size_of_init 0058  
     __CFG_WDTCWS$WDTCWS_7 0000                   int$flags 007E                   main@argc 00BC  
                 main@argv 00BE                 _INTCONbits 000B                _NVMCON1bits 081E  
               _FVRCONbits 090C                   intlevel1 0000               _timerCounter 00B8  
             _restoreLevel 0804          __CFG_CLKOUTEN$OFF 0000            ??_ledFaultCheck 0072  
            __pstringtext1 07FC              __pstringtext2 0800              __pstringtext3 0804  
            __pstringtext4 0808     __Umul8_16@multiplicand 0072              ErrFlush@count 0072  
       __end_of_upperLimit 080C       __Umul8_16@multiplier 007A          __Umul8_16@product 0076  
